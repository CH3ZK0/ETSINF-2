TESIS DOCTORAL
Título

Técnicas de computación científica aplicada al ámbito de
la Mecánica Celeste y de la Astrodinámica
Autor/es

Rosario López Gómez
Director/es

Juan Félix San Juan Díaz
Facultad

Facultad de Ciencias, Estudios Agroalimentarios e Informática
Titulación

Departamento

Matemáticas y Computación
Curso Académico

2014-2015

Tesis presentada como compendio de publicaciones. La edición en abierto de la misma NO
incluye las partes afectadas por cesión de derechos

Técnicas de computación científica aplicada al ámbito de la Mecánica Celeste y
de la Astrodinámica, tesis doctoral
de Rosario López Gómez, dirigida por Juan Félix San Juan Díaz (publicada por la
Universidad de La Rioja), se difunde bajo una Licencia
Creative Commons Reconocimiento-NoComercial-SinObraDerivada 3.0 Unported.
Permisos que vayan más allá de lo cubierto por esta licencia pueden solicitarse a los
titulares del copyright.

©
©

El autor
Universidad de La Rioja, Servicio de Publicaciones, 2015
publicaciones.unirioja.es
E-mail: publicaciones@unirioja.es

Técnicas de computación científica
aplicada al ámbito de la Mecánica
Celeste y de la Astrodinámica

TESIS DOCTORAL
2015

Rosario López Gómez
Departamento de Matemáticas y Computación
Facultad de Ciencias, Estudios Agroalimentarios e Informática
Universidad de La Rioja

Técnicas de computación científica
aplicada al ámbito de la Mecánica
Celeste y de la Astrodinámica

Memoria que presenta para optar al título de
Doctor Ingeniero Informático
Rosario López Gómez

Dirigida por el Doctor
Juan Félix San Juan Díaz

Departamento de Matemáticas y Computación
Facultad de Ciencias, Estudios Agroalimentarios e
Informática
Universidad de La Rioja

A mis compañeros de trabajo, por su comprensión,
a toda la gente de la Fundación Rioja Salud,
a mis amigos,
pero sobre todo a mis padres y a ti, Manu,
por el constante apoyo y cariño

Agradecimientos
Con mi más sincero agradecimiento para todos los que habéis hecho posible este trabajo, en especial a Juan Félix San Juan, capitán de este barco,
siempre dando lo mejor de ti. Eres todo un ejemplo a seguir. Te agradezco
tu ayuda, tu fidelidad y, sobre todo, tu amistad. A Iván Pérez y Montserrat
San Martín, también compañeros incondicionales en esta singladura. Siempre
estaré agradecida de tener amigos como vosotros.
El doctorando, así como su director de Tesis, quieren mostrar su agradecimiento al Dr. D. Eliseo Vergara González y al Servicio Informático de la
Universidad de La Rioja por las facilidades proporcionadas para la puesta
en marcha de AstrodyTWeb
ools .
Finalmente, dar las gracias a la Dra. Dña. María Íñiguez por su implicación en el diseño de las especificaciones y protocolos de la plataforma web
de análisis bioinformático, fruto del acuerdo de colaboración entre el Grupo
de Computación Científica de la Universidad de La Rioja y el Centro de
Investigación Biomédica de La Rioja.
Este trabajo ha sido financiado a través de los Proyectos de I+D+I Fomenta 2010/16 (Consejería de Educación, Cultura y Turismo, Gobierno de
La Rioja) y ESP2014-57071-R (Programa Estatal de Investigación, Desarrollo e Innovación Orientada a los Retos de la Sociedad, Ministerio de Economía
y Competitividad, Gobierno de España).

vii

Índice
Agradecimientos
Introducción
Antecedentes . . . . . . . . .
Publicaciones . . . . . . . . .
Continuación de los trabajos .
Estructura del documento . .

vii

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

xix
xix
xxiv
xxv
xxvii

1. Computación científica: Manipulación algebraica
1.1. Introducción . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2. Transformaciones de Lie . . . . . . . . . . . . . . . . . . . . .
1.2.1. Conceptos básicos de mecánica hamiltoniana . . . . .
1.2.2. Teoría de perturbaciones basada en transformaciones
de Lie . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.3. MathATESAT . . . . . . . . . . . . . . . . . . . . . . . . . .
1.4. Ecuación generalizada de Kepler . . . . . . . . . . . . . . . .
1.4.1. Teoría analítica de primer orden . . . . . . . . . . . .
1.4.2. La ecuación de Kepler . . . . . . . . . . . . . . . . . .
1.4.3. La ecuación generalizada de Kepler . . . . . . . . . . .
1.4.4. Resultados numéricos . . . . . . . . . . . . . . . . . .

6
8
11
12
14
15
16

2. El proyecto AstrodyTWeb
ools
2.1. Introducción . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2. AstrodyTWeb
ools : proyecto colaborativo . . . . . . . . . . . . .
2.3. Arquitectura básica del sistema . . . . . . . . . . . . . . .
2.4. Aplicaciones integradas en AstrodyTWeb
ools . . . . . . . . . .
2.4.1. Orbit Propagator Programs . . . . . . . . . . . . .
2.4.2. Zonal Earth Repeating Ground-track Orbit Finder
2.4.3. Repeating Ground-track Orbit Finder . . . . . . .
2.4.4. DSST . . . . . . . . . . . . . . . . . . . . . . . . .
2.5. Ejemplos de utilización . . . . . . . . . . . . . . . . . . . .

33
33
35
36
38
38
43
46
47
59

.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.

3
3
4
4

ix

x

Índice
2.5.1. PPKBJ6 OPP . . . . . . . . . . . . . . . . . . . . . .
2.5.2. DSST Web . . . . . . . . . . . . . . . . . . . . . . . .

59
64

3. De las estrellas al conocimiento del genoma humano
3.1. Introducción . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2. Bioinf oWeb
T ools : secuenciación masiva paralela . . . . . . . . .
3.3. Ejemplo de análisis bioinformático: análisis de DNA exoma
3.3.1. Protocolo de análisis de exoma . . . . . . . . . . . .
3.4. Limitaciones en la secuenciación de exoma . . . . . . . . . .

.
.
.
.
.

73
73
75
77
81
85

4. Resultados
4.1. PPKBZ9A,SA : dos propagadores analíticos
4.1.1. La ecuación generalizada de Kepler
4.2. El método de Lie-Deprit revisado . . . . .
4.3. Revisión de la eliminación de la paralaje .
4.4. AstrodyTWeb
ools : un proyecto de e-Ciencia . .
4.5. El proyecto Bioinf oWeb
T ools . . . . . . . . . .

.
.
.
.
.
.

91
92
93
94
95
96
96

.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

5. Conclusiones y trabajos futuros
101
5.1. Conclusiones . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
5.2. Líneas de trabajo futuras . . . . . . . . . . . . . . . . . . . . 104
A. Artículo I

109

B. Artículo II

111

C. Artículo III

123

D. Artículo IV

125

Bibliografía

127

Índice de figuras
1.

Visualización científica. Espacio fásico de un oscilador armónico perturbado utilizando la técnica painting by number. . . xxii

1.1. Coeficiente del término e29 del desarrollo en serie de potencias
de la ecuación de Kepler. . . . . . . . . . . . . . . . . . . . . .
1.2. Tiempo de proceso y número de términos en función del orden
del desarrollo para la inversión de la ecuación de Kepler. . . .
1.3. Tiempo de proceso y número de términos en función del orden
del desarrollo para la función (r/a)4 cos 5f . . . . . . . . . . .
1.4. Representación gráfica de ε∗ (−J2 /2 ≤ ε∗ ≤ J2 /4). . . . . . .
1.5. Parámetro ε∗ (a = 7 200, i). . . . . . . . . . . . . . . . . . . . .
1.6. El método de Newton-Raphson utilizando S1 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . .
1.7. Gráficas de fgk (E) para i1 = 0◦ , M = π y tres valores de
excentricidad: 0.91, 0.92 y 0.925. . . . . . . . . . . . . . . . .
1.8. El método de Halley utilizando S1 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.9. El método de Danby utilizando S1 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.10. El método de Newton-Raphson utilizando S2 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . .
1.11. El método de Halley utilizando S2 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.12. El método de Danby utilizando S2 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.13. El método de Newton-Raphson utilizando S3 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . .
1.14. El método de Halley utilizando S3 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . . . . . . .
1.15. El método de Danby utilizando S3 como valor inicial del proceso iterativo. . . . . . . . . . . . . . . . . . . . . . . . . . .

10
11
11
16
17
19
20
21
22
24
25
26
27
28
29
xi

xii

Índice de figuras
1.16. Tiempo empleado en la convergencia del método con un error
de 10−14 (MNR en verde, MH en azul y MD en rojo). Los
casos 1, 2, 3 y 4 corresponden a las inclinaciones 0◦ , 53◦ , 55◦
y 90◦ , respectivamente. . . . . . . . . . . . . . . . . . . . . . .

30

Roles y modos de colaboración en el proyecto AstrodyTWeb
ools . . 36
Web
Esquema de la arquitectura de AstrodyT ools . . . . . . . . . . 37
Suite OPP alojada en AstrodyTWeb
ools . . . . . . . . . . . . . . . 39
Interfaz web de la suite OPP. . . . . . . . . . . . . . . . . . . 40
Ejecución del modelo ppkbj2or3 de la suite OPP para un satélite de tipo Quasi-Spot. . . . . . . . . . . . . . . . . . . . . 40
2.6. Resultado de la ejecución del modelo ppkbj2or3 de la suite
OPP para un satélite de tipo Quasi-Spot. . . . . . . . . . . . 41
2.7. Traza de la órbita para un satélite de tipo Quasi-Spot. . . . . 42
2.8. Test de la energía para un satélite de tipo Quasi-Spot. . . . . 42
2.9. Evolución del semieje mayor para un satélite de tipo QuasiSpot. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
2.10. Evolución de los términos de largo periodo (e cos g, e sen g)
para un satélite de tipo Quasi-Spot. . . . . . . . . . . . . . . 42
2.11. Error del semiejemayor (km) para un satélite de tipo QuasiSpot. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
2.12. Error de posición (km) para un satélite de tipo Quasi-Spot. . 43
2.13. Ejecución de ZERGOF para una órbita cuasi-circular. . . . . 44
2.14. Resultado de la ejecución de ZERGOF para una órbita cuasicircular. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
2.15. ZERGOF: traza de una órbita cuasi-circular. . . . . . . . . . 46
2.16. ZERGOF: evolución de los términos de largo periodo (e cos g, e sen g)
para una órbita cuasi-circular. . . . . . . . . . . . . . . . . . 46
2.17. Fichero pmef.txt. . . . . . . . . . . . . . . . . . . . . . . . . . 51
2.18. Encapsulado de DSST en AstrodyTWeb
ools . . . . . . . . . . . . . 52
2.19. Interfaz web del propagador semianalítico DSST (parte 1 de
3). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53
2.20. Interfaz web del propagador semianalítico DSST (parte 2 de 3). 54
2.21. Interfaz web del propagador semianalítico DSST (parte 3 de 3). 55
2.22. Página de ejecución de DSST Web. . . . . . . . . . . . . . . . 55
2.23. Nuevo formato .csv del fichero de datos de usuario de DSST
Web. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
2.24. Plantilla Excel para la creación del fichero pmef.csv (1 de 2). . 57
2.25. Plantilla Excel para la creación del fichero pmef.csv (2 de 2). . 58
2.26. Página de salida de resultados de DSST Web. . . . . . . . . . 59
2.27. Proceso de evaluación del propagador PPKBJ6. . . . . . . . . 61
2.28. Ejemplo de cómo se muestra OPP tras introducir los datos. . 62
2.1.
2.2.
2.3.
2.4.
2.5.

Índice de figuras
2.29. Ejemplo de salida para la órbita sun-synchronous cuasi-circular
calculada mediante ZERGOF (a = 7 266.466 km, e = 0.00114,
i = 99.0028◦ , ω = 90◦ ). . . . . . . . . . . . . . . . . . . . . . .
2.30. Comportamiento de la evolución de los términos de largo periodo obtenida a través del gráfico (e sen g, e cos g) para el caso
de una órbita sun-synchronous cuasi-circular. . . . . . . . . .
2.31. Condiciones iniciales en DSST Web para el caso de una órbita
GTO (parte 1 de 3). . . . . . . . . . . . . . . . . . . . . . . .
2.32. Condiciones iniciales en DSST Web para el caso de una órbita
GTO (parte 2 de 3). . . . . . . . . . . . . . . . . . . . . . . .
2.33. Condiciones iniciales en DSST Web para el caso de una órbita
GTO (parte 3 de 3). . . . . . . . . . . . . . . . . . . . . . . .
2.34. Resultado de la ejecución de DSST Web para el caso de una
órbita GTO. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.35. Evolución temporal de la excentricidad, inclinación y argumento del perigeo en DSST Web. . . . . . . . . . . . . . . . .
3.1.
3.2.
3.3.
3.4.

Esquema del proceso de análisis de ultrasecuenciación. . . . .
Proceso de análisis de exoma. . . . . . . . . . . . . . . . . . .
Interfaz de creación/edición para un análisis de DNA exoma.
Interfaz de visualización para un análisis de DNA exoma. . .

xiii

64

64
65
66
67
68
69
78
79
85
86

Índice de tablas
1.1. Valores seleccionados para inicializar los métodos de NewtonRaphson, Halley y Danby. . . . . . . . . . . . . . . . . . . . .
1.2. Número de iteraciones ( %) empleado por los métodos MNR,
MH y MD, utilizando como valores iniciales S2 y S3 , para las
inclinaciones 0◦ , 53◦ , 55◦ y 90◦ . . . . . . . . . . . . . . . . . .

30

2.1.
2.2.
2.3.
2.4.

49
49
62
65

Modelo de movimiento medio en DSST. . . . . . .
Modelo de movimiento de corto periodo en DSST.
Parámetros de entrada a cualquiera de los OPPs. .
Elementos keplerianos medios. . . . . . . . . . . . .

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

.
.
.
.

16

xv

El genio es un uno por ciento de inspiración
y un noventa y nueve por ciento de sudor

THOMAS A. EDISON

Introducción
Antecedentes
Hoy en día la computación científica se ha convertido en una herramienta
indispensable tanto para el avance científico como tecnológico. Los modelos
matemáticos que describen fenómenos físicos, como por ejemplo el movimiento de un satélite artificial o el de un resto de basura espacial, así como
los cálculos matemáticos, numéricos, simbólicos, estadísticos o de inteligencia computacional empleados en la resolución de este problema, pueden ser
aplicados a otras ramas de la Ciencia y de la Tecnología.
Es difícil delimitar el ámbito de la computación científica, pero en un
sentido amplio del término hace referencia al conjunto de teorías, técnicas y
herramientas empleadas en la resolución de problemas en los campos científico y tecnológico utilizando el computador como herramienta principal.
Tradicionalmente, la computación científica ha jugado un papel crucial en
el desarrollo de disciplinas tan diversas como la Astrofísica, la Astrodinámica, la Mecánica Celeste, la Mecánica Cuántica, la Relatividad, la Química,
la Biología y en el de otras áreas científicas y tecnológicas, así como en el
avance de la Informática. En este sentido, cabe destacar que los problemas
que motivaron la construcción de los primeros computadores, el desarrollo
de los primeros compiladores o el nacimiento de Internet procedían de las
áreas científicas y técnicas.
Una de las primeras aplicaciones de las técnicas de computación científica
se encuentra en la teoría de sistemas dinámicos. Tanto el análisis cualitativo
como el cuantitativo de un sistema dinámico requieren el uso de potentes herramientas de visualización y de complejas técnicas analíticas y numéricas.
Dichas técnicas caracterizan y proporcionan valiosa información sobre la evolución del flujo del sistema dinámico, sus puntos de equilibrio, bifurcaciones,
etcétera.
En particular, la búsqueda de soluciones analíticas a los problemas de la
Mecánica Celeste y de la Astrodinámica ha contribuido al desarrollo de los
sistemas de computación científica, tanto los de carácter general, que permiten tratar una amplia variedad de problemas, como los de carácter específico,
diseñados para resolver eficientemente un único tipo de problema. Los primexix

xx

Introducción

ros sistemas de carácter específico datan de 1959 [70], aunque la contribución
clave se presentó en 1965 [41]. En este trabajo, los autores propusieron una
aproximación algebraica al problema, la cual les permitió representar sobre
estructuras de datos fijas los objetos matemáticos manipulados, así como
definir operaciones sobre ellas. El objeto matemático fundamental que aparece en este tipo de problemas es frecuentemente conocido como serie de
Poisson [41, 44]. Una serie de Poisson se define como una serie de Fourier
multivariada cuyos coeficientes son series de Laurent en la forma
 
X
in−1 sen
j0 ,...,jm−1 i0
(j0 y0 + . . . + jm−1 ym−1 ),
Ci0 ,...,in−1 x0 . . . xn−1
cos
i0 ,...,in−1 ,j0 ,...,jm−1
j ,...,j

m−1
∈ R.
donde Ci00,...,in−1
Una de las principales dificultades que caracterizan la resolución de los
problemas de la Mecánica Celeste y de la Astrodinámica es la aparición de series de Poisson formadas por cientos o miles de términos. Esta dificultad hizo
necesario el desarrollo de sistemas especializados que fuesen capaces de manipular dichas series de forma eficiente. Tradicionalmente, estos sistemas han
sido denominados Procesadores de Series de Poisson (PSP). Entre ellos cabe
destacar: MAO (Mechanized Algebraic Operations, [123]), TRIGMAN (Trigonometric Manipulator, [75]), Broucke’s Processor [15], MAO!! [47], PSPC
(Poisson Series Processor in C, [1]), etcétera. A la vez que se crearon este
tipo de sistemas altamente especializados, se comenzaron a desarrollar otros
de propósito general que integraban una gran variedad de herramientas de
tratamiento simbólico, gráfico, numérico, etcétera. MACSYMA [12], Magma [14], Scratchpad [146], MuPAD [57], REDUCE [68], Mathematica [153] o
Maple [25] son algunos ejemplos de este tipo de sistemas de carácter general.
Sin embargo, inicialmente, estos sistemas generales se mostraron ineficientes
en comparación con los de propósito específico.
Utilizando PSPC como sistema de cómputo, San Juan [125] implementó
la aplicación ATESAT (Automatización de Teorías analíticas y cálculo de
Efemérides para el problema del SATélite artificial) [2, 124, 126, 127]. Este
programa permite construir de forma automática una teoría analítica, junto
con su correspondiente programa de cálculo de efemérides, para describir
el movimiento de un satélite artificial sometido a la atracción gravitacional
de un planeta a partir de las características seleccionadas por el usuario.
Tanto PSPC como ATESAT se encuentran instalados en el Centre National
d’Études Spatiales (CNES).
Sin embargo, la Mecánica Celeste y la Astrodinámica han evolucionado
mucho desde entonces. Los computadores son cada vez más potentes, tal y
como pronostica la ley de Moore. Los sistemas de cálculo simbólico y manipulación algebraica de propósito general son cada más eficientes, permitiendo
abordar problemas cada vez más complejos. Por el contrario, la mayoría de
los PSP se han quedado obsoletos, bien porque sus diseños están fuertemente

Introducción

xxi

ligados a las plataformas en las que fueron implementados, bien porque están
programados en lenguajes muy poco flexibles e inadecuados para este tipo
de problemas no numéricos.
En nuestro caso, PSPC también se quedó obsoleto, poniéndose de manifiesto sus limitaciones. Por ejemplo, PSPC no disponía de aritmética racional
o de múltiple precisión y no permitía el tratamiento de pequeños divisores ni
de funciones especiales, entre otras limitaciones. En consecuencia, el desarrollo de ATESAT se detuvo y se consideró la necesidad de reemplazar PSPC
por un sistema de carácter general, ya que las limitaciones que este tipo de
sistemas presentaban inicialmente habían desaparecido.
Surge entonces MathATESAT [133] como un entorno que implementa y
extiende las funcionalidades proporcionadas por ATESAT, utilizando Mathematica como motor de cálculo. Actualmente, MathATESAT permite construir órdenes altos de teorías analíticas, esto es, proporciona la función generatriz, el Hamiltoniano transformado y los cambios de coordenadas después
de aplicar una o varias transformaciones de Lie, con el objetivo de realizar
análisis cualitativos o cuantitativos en los casos de sistemas keplerianos u
osciladores armónicos perturbados [116, 117, 136, 140].
Cuando se necesita realizar el análisis cualitativo de un sistema dinámico,
el cálculo de órbitas periódicas, la determinación de líneas de bifurcación, la
representación gráfica de su espacio fásico, etcétera, MathATESAT hace uso
de las capacidades numéricas así como de las herramientas de visualización
científica que incorpora Mathematica. La visualización científica es utilizada para simplificar el análisis y la comprensión de un sistema dinámico. La
figura 1, por ejemplo, representa el espacio fásico de un oscilador armónico
perturbado después de normalizar el problema. Esta técnica de visualización
científica recibe el nombre de painting by number [29, 67] y su primera implementación se realizó en una Connection Machine. Posteriormente se han
desarrollado diferentes aplicaciones que permiten hacer uso de esta técnica
en ordenadores personales [115]. La figura 1 ha sido realizada utilizando la
función ParametricPlot3D[ ] de Mathematica.
Por otra parte, si lo que interesa es el análisis cuantitativo de un sistema dinámico, MathATESAT genera automáticamente los correspondientes
programas de evaluación en C/C++ para cada una de las series que componen la teoría analítica, junto con un programa principal que organiza su
evaluación. Cuando el sistema dinámico corresponde al problema del satélite
artificial, tales programas constituyen un propagador orbital, el cual puede
ser empleado en diferentes etapas del análisis y diseño de misiones espaciales, o en la propagación de catálogos de basura espacial. A lo largo de esta
Tesis Doctoral se utiliza MathATESAT, por un lado, para el desarrollo de
teorías analíticas de alto orden aplicada a los sistemas keplerianos perturbados en los que se está trabajando, y por otro, para la implementación de los
propagadores orbitales derivados de estas teorías.

xxii

Introducción

Figura 1: Visualización científica. Espacio fásico de un oscilador armónico
perturbado utilizando la técnica painting by number.

Conviene destacar que la computación científica ha sido tradicionalmente
un valioso aliado de la Informática, ya que ha proporcionado algunos de
los problemas que han permitido importantes avances tanto del hardware
como del software. Del mismo modo, la computación científica también se
puede beneficiar de alguno de los frutos de esta simbiosis, en particular de
la World Wide Web (WWW) y de la computación de altas prestaciones
(HPC). Es importante recordar que la World Wide Web se desarrolló en el
CERN (Conseil Européen pour la Recherche Nucléaire) como un medio de
comunicación entre grupos de investigación de diferentes países.
El uso de Internet ha abierto nuevas vías de colaboración en casi todos los campos científicos y tecnológicos [40, 64, 141]. Desde sus inicios, el
movimiento open access o de acceso abierto, se ha expandido internacionalmente y ha calado muy profundamente en el ámbito de las universidades,
muy preocupadas tanto por la comunicación científica, con el consiguiente
impacto de sus investigaciones, como por el acceso a la información científica y otros recursos por parte de sus investigadores. Por ejemplo, a través
de Internet es posible ejecutar sofisticadas aplicaciones como servicios web
[35, 36, 80, 94, 118, 154]. Así, Open-Science, e-Science, e-Research, e-Learning
y e-Collaboration se han convertido en términos comunes hoy día en el ámbito educativo e investigador, permitiendo aunar esfuerzos para compartir
conocimiento, crear y usar software especializado, así como dar solución a
determinadas clases de problemas. Las ventajas del acceso abierto para los
investigadores, aunque evidentes, no son todavía suficientemente reconocidas
por toda la comunidad científica. La publicación rápida de los resultados de
las investigaciones, así como la posibilidad de compartirlos y reutilizarlos, les
dotan de una mayor visibilidad, con el consiguiente incremento en el impacto
de las investigaciones y, en definitiva, en el avance de la Ciencia.
En este contexto surge AstrodyTWeb
ools [130, 133] como un proyecto web sin

Introducción

xxiii

ánimo de lucro que tiene como objetivo proporcionar acceso libre a aplicaciones y herramientas no comerciales, altamente especializadas en los ámbitos
de la Mecánica Celeste y de la Astrodinámica.
Este proyecto permite, por un lado, alojar diferentes aplicaciones científicas desarrolladas por diversos investigadores o grupos de investigación en
un entorno web, facilitando de este modo que científicos y estudiantes de
cualquier parte del mundo puedan ejecutarlas en tiempo real con la única
ayuda de un navegador web. Si originariamente estas aplicaciones fueron
creadas para su uso en un sistema UNIX con una serie de ficheros de entrada
y valores introducidos a través de una consola de texto, el uso de este nuevo
entorno web facilita su ejecución. De este modo, se estaría hablando de un
entorno en el que, a través de la petición de un cliente web (un navegador),
se cumplimentan una serie de campos de un formulario, recogiendo así las
funciones y parámetros necesarios que luego son enviados al servicio web. El
servicio web opera sobre la aplicación o aplicaciones solicitadas y una vez
terminada la ejecución devuelve una respuesta con los resultados, mostrándolos en el navegador y facilitando también su almacenamiento por parte del
usuario. Por otro lado, con este proyecto se pretende acercar al estudiante
a las teorías y métodos sobre los que se sustentan este tipo de aplicaciones,
creando contenidos e-Learning que muestren de una manera didáctica todo este conocimiento demandado en los estudios de máster y doctorado de
algunas universidades. Cuando estos cursos estén disponibles, AstrodyTWeb
ools
constituirá una herramienta aún más valiosa en los laboratorios universitarios.
Teniendo como horizonte las necesidades del investigador, en un entorno
global y virtual, sin barreras geográficas, este repositorio de software se convierte en un servicio a la carta, puesto que está a disposición de los investigadores que quieran utilizarlo como plataforma de trabajo y difusión de la
producción científica.
El único requisito necesario para que una nueva aplicación sea alojada
en AstrodyTWeb
ools es que pueda ser ejecutada desde una línea de comandos
en un entorno UNIX, independientemente del lenguaje de programación en
el que esté implementada. Esta flexibilidad no sólo permite la integración
de nuevas aplicaciones basadas en sofisticados diseños orientados a objetos,
sino también la reutilización de aplicaciones heredadas, que han quedado
obsoletas desde el punto de vista tecnológico. Puesto que la Tesis Doctoral
cuenta con un capítulo dedicado a este proyecto, únicamente destacar aquí
que en la actualidad 65 usuarios, pertenecientes a 40 organizaciones de 15
naciones, utilizan AstrodyTWeb
ools .
Finalmente, el diseño y las técnicas aplicadas en este proyecto pueden ser
extendidas a otros ámbitos. De hecho, al mismo tiempo que se continúa con
Web
el desarrollo de AstrodyTWeb
ools se ha comenzado a construir Bioinf oT ools en
colaboración con el Centro de Investigación Biomédica de La Rioja (CIBIR).

xxiv

Introducción

Esta infraestructura ya está dando apoyo bioinformático en la aplicación de
técnicas cuantitativas de análisis en el modelado de sistemas biológicos. Este
nuevo proyecto permitirá crear un marco de colaboración en el que podrán
participar investigadores y estudiantes de los ámbitos de la Biología y de las
Ciencias de la Computación.

Publicaciones
En el primero de los artículos que se integran en esta Tesis Doctoral,
“PPKBZ9A,SA Two orbit propagators based on an analytical theory” [134],
se diseñan dos propagadores de órbitas a partir de una teoría analítica que se
ha implementado en MathATESAT [133]. El modelo de perturbaciones que se
considera incluye los ocho primeros armónicos zonales del potencial terrestre.
La eliminación de los términos de largo periodo producidos por el argumento
del perigeo se realiza mediante una combinación de dos transformaciones de
Lie: la eliminación de la paralaje [45] y la eliminación del perigeo [7]. Para
finalizar, los términos de corto periodo se integran utilizando el método de
Krylov-Bogoliubov-Mitropolsky [13, 79]. Con este trabajo se ha extendido el
modelo previo de perturbaciones (modelo que incluía hasta el armónico J6
y que fue desarrollado para el Centre National d’Études Spatiales, CNES,
en el estudio de órbitas de Marte) incluyendo los armónicos J7 , J8 y J9 y
se ha construido una teoría analítica de segundo orden en forma cerrada de
la excentricidad. Excepto para la inclinación crítica, la teoría es válida para
cualquier valor de excentricidad e inclinación, incluso los cercanos a cero
[108].
El primer propagador de órbitas, PPKBZ9 A , es completamente analítico,
mientras que en el segundo, PPKBZ9 SA , las transformaciones de variables
se realizan de forma numérica. Estos propagadores son aplicados a los casos
de satélites en órbita alrededor de la Tierra y de Marte.
En el segundo artículo, “A Note about Certain Arbitrariness in the Solution of the Homological Equation in Deprit’s Method ” [138], se revisa el
método de Lie-Deprit, que es utilizado para la construcción de las transformaciones de Lie. En él se analiza cierta arbitrariedad que surge cuando se
invierte el operador de Lie, proceso que permite obtener la función generatriz de la transformación de Lie. Esta arbitrariedad es intrínseca a todos los
métodos de perturbaciones, si es seleccionada de forma adecuada puede ser
utilizada con diversos propósitos: para demostrar la equivalencia entre los
diferentes métodos de perturbaciones, para eliminar determinados términos
de la función generatriz [78, 84], o para eliminar a la vez varios ángulos o
combinar simultáneamente diferentes efectos. Por su importancia, esta generalización del método de Lie-Deprit ha sido incluida también en MathATESAT.
Una de las consecuencias derivadas de la arbitrariedad de todos los mé-

Introducción

xxv

todos de perturbaciones es la de poder combinar simultáneamente diferentes
efectos. De ahí que en el artículo tercero, “Deprit’s Elimination of the Parallax Revisited ” [139], se revise la construcción de la eliminación de la paralaje
utilizando el método descrito en [138], en el cual se considera que las funciones arbitrarias son no nulas. El efecto que se consigue con esta versión
extendida de la eliminación de la paralaje es equivalente al que se obtiene
con la eliminación de la latitud [18, 26, 27, 28, 46], o cuando la eliminación
de la paralaje se combina con la eliminación del perigeo [7]. La versión extendida de la eliminación de la paralaje se ha aplicado al problema principal
de la teoría del satélite artificial hasta orden 6 en forma cerrada de la excentricidad. También se muestran resultados de las comparaciones numéricas
hasta el cuarto orden de esta transformación frente a la combinación de la
eliminación de la paralaje y del perigeo.
La implementación de estos avances y desarrollos teóricos se realiza en los
sistemas software en los que el Grupo de Computación Científica lleva años
trabajando. Para poner estos programas y su conocimiento a disposición de
la comunidad científica se ha hecho uso de la tecnología web y se ha creado
AstrodyTWeb
ools , presentado en el último de los cuatro artículos que forman parte de esta Tesis Doctoral y que lleva por título “AstrodyTWeb
ools an e-Science
project in Astrodynamics and Celestial Mechanics fields” [92]. AstrodyTWeb
ools
[130, 133] es un proyecto que permite unificar y difundir rápidamente el uso
de las aplicaciones que fueron desarrolladas en el seno del Grupo de Computación Científica al que pertenece el doctorando, fundamentalmente por el
Dr. San Juan, al cual se ha ido sumando seguidamente el trabajo de los
miembros del Grupo, así como aplicaciones desarrolladas por otros expertos
del ámbito de la Astrodinámica, como Zonal Earth Repeating Ground-track
Orbit Finder (ZERGOF), desarrollada por el Dr. Lara. Draper Semianalytical Satellite Theory (DSST) Standalone, desarrollada por el equipo del Dr.
Cefola, entre otras. Se trata por tanto de un proyecto abierto a la comunidad
científica, con un entorno que hace posible el uso inmediato de aplicaciones
de forma gratuita a través de Internet, y que brinda la posibilidad de utilizarlas sin tener en cuenta la posición geográfica en la que esté el usuario,
la potencia de cálculo de su computador o el sistema operativo que tenga
instalado.
Con este fin, se ha construido una infraestructura web alojada en los
servidores de la Universidad de La Rioja que permite que todo investigador pueda solicitar la inclusión de sus programas y ofrecer su uso abierto.
Dicha infraestructura web, como ya se ha comentado, está siendo aplicada
también por este doctorando al campo de la Bioinformática con importantes
resultados [93].

xxvi

Introducción

Continuación de los trabajos
El doctorando, junto con otros miembros del Grupo de Computación
Científica, ha continuado trabajando en la línea de investigación presentada
en esta Tesis Doctoral con posterioridad a la publicación de los artículos que
incorpora, e incluye en la misma contenidos adicionales de dichos trabajos.
Se está trabajando en dos vías. Por una parte, se continúa con el desarrollo de teorías analíticas de alto orden aplicadas a sistemas keplerianos
perturbados. La determinación de la posición y velocidad de un satélite utilizando cualquiera de los propagadores orbitales de la familia PPKB depende
de la resolución precisa de la ecuación de Kepler. En este sentido, se está
investigando en la ecuación generalizada de Kepler. Al igual que la ecuación
clásica de Kepler, la generalizada tampoco puede ser invertida mediante funciones elementales, debido a que también es trascendente en E. Sin embargo,
se puede obtener una solución analítica aproximada aplicando el teorema de
la función inversa de Lagrange [43, 129], utilizando técnicas de perturbaciones basadas en transformaciones de Lie no canónicas. El objetivo que se
persigue es determinar el grado de precisión de la expresión analítica en
función del valor de la excentricidad, de modo que pueda ser utilizada paragenerar soluciones precisas en el proceso de evaluación de los propagadores
analíticos de la familia PPKB. Además, se está trabajando en la inclusión
de los términos teserales no resonantes m-daily para mejorar las prestaciones
de dichos propagadores. Para abordar el primer problema ha sido necesario
implementar las transformaciones de Lie no canónicas en MathATESAT. El
segundo problema requiere la mejora de los métodos de evaluación de series
de Poisson y la investigación en técnicas de paralelización [135], ya que la
inclusión de los armónicos teserales m-daily incrementa significativamente el
número de términos de las series de Poisson.
Parte de este trabajo ha sido presentado en el 25th AAS/AIAA Space
Flight Mechanics Meeting, que tuvo lugar en Williamsburg, Virginia (USA),
entre el 11 y el 15 de enero de 2015 [137], y nuevos avances serán presentados
en el 2015 AAS/AIAA Astrodynamics Specialist Conference que se celebrará
en Vail, Colorado (USA), entre el 9 y el 13 de agosto de 2015.
Por otra parte, se continúa trabajando para incrementar el número de
aplicaciones disponibles en AstrodyTWeb
ools , así como para la creación del entorno de e-Learning que permita compartir el conocimiento que hay detrás
de cada aplicación. Como ya se ha expuesto, el modelo propuesto en este
proyecto se está aplicando con éxito al ámbito de la Bioinformática en una
colaboración entre el Grupo de Computación Científica (GRUCACI) y el
Centro de Investigación Biomédica de La Rioja (CIBIR). De forma análoga
Web
a AstrodyTWeb
ools , este nuevo proyecto, Bioinf oT ools , está dotando a la Plataforma de Genómica del CIBIR de todas las herramientas necesarias para
automatizar los procesos de análisis bioinformáticos del servicio de ultrase-

Introducción

xxvii

cuenciación mediante el tratamiento computacional y estadístico de los datos
generados por el ultrasecuenciador de un modo totalmente transparente, integrado y eficiente. Un ejemplo de este servicio es el análisis de secuencia que
incluye la realización de alineamientos, la muestra de estadísticas de DNA
y proteínas, la búsqueda de patrones, el análisis de mutaciones, etcétera, lo
cual implica la integración de varios programas informáticos, así como scripts
desarrollados por el propio doctorando.

Estructura del documento
En el Capítulo 1 se introducen algunos conceptos básicos de mecánica hamiltoniana y de teoría de perturbaciones basada en transformaciones de Lie,
junto con MathATESAT, aplicación en la que se implementan los métodos
y algoritmos anteriores, y que permite desarrollar las teorías analíticas necesarias para comprender los tres primeros artículos que integran esta Tesis
Doctoral. Seguidamente, se aborda el problema de las incertidumbres numéricas detectadas en la resolución de la ecuación generalizada de Kepler. Esta
ecuación trascendente, que generaliza la ecuación clásica de Kepler, relaciona
el tiempo con una generalización de la anomalía verdadera, y es una pieza
clave en el correcto funcionamiento de los propagadores orbitales de la familia
PPKB. En el Capítulo 2 se describen brevemente el proyecto AstrodyTWeb
ools
y las aplicaciones que actualmente incorpora. En el capítulo 3, aunque no
es el objeto central de esta Tesis Doctoral, se presenta uno de los módulos
que conforman la plataforma Bioinf oWeb
T ools , que, a modo de ejemplo, permite
ilustrar la aplicación del modelo AstrodyTWeb
ools y, en general, las técnicas de
computación científica, a otras ramas de la Ciencia, en este caso la Biología.
En el Capítulo 4 se procede al resumen y discusión de los resultados más
relevantes, tanto de los artículos incorporados como de las líneas actuales de
trabajo recogidas en los capítulos precedentes. En el Capítulo 5 se presentan
las conclusiones de la investigación realizada, junto con las vías previstas
de continuación. Por último, los Apéndices A, B, C y D recogen los cuatro
artículos que componen esta Tesis Doctoral.

La frase más excitante que se puede oír en Ciencia,
la que anuncia nuevos descubrimientos,
no es ¡Eureka! sino “Es extraño...”

ISAAC ASIMOV

Capítulo 1

Computación científica:
Manipulación algebraica
Resumen
En este capítulo se introducen algunos conceptos básicos de mecánica hamiltoniana y de teoría de perturbaciones basada en transformaciones de Lie
empleados en los tres primeros artículos de esta Tesis Doctoral. Se describe el
método de Lie-Deprit, que ha sido empleado para construir las eliminaciones
de la paralaje y del perigeo, y se introduce el método de Krylov-BogoliubovMitropolsky, que se aplica para integrar el Hamiltoniano transformado. A lo
largo de los tres artículos presentados se han estudiado estas técnicas [134],
se ha revisado y extendido el método de Lie-Deprit, y finalmente todo ello ha
sido aplicado hasta obtener el orden 6 de las eliminaciones clásica y extendida
de la paralaje y del perigeo utilizando MathATESAT [138, 139]. El capítulo
continúa describiendo brevemente MathATESAT, entorno que implementa
y amplía las funcionalidades proporcionadas por ATESAT [124, 125, 126], y
que utiliza Mathematica como motor de computación simbólica de carácter
general. Para finalizar, se aborda el problema de las incertidumbres numéricas detectadas en la resolución de la ecuación generalizada de Kepler. Esta
ecuación trascendente, que generaliza la ecuación clásica de Kepler, relaciona
el tiempo con una generalización de la anomalía verdadera, y constituye una
pieza clave para el correcto funcionamiento de los propagadores orbitales de
la familia PPKB.

1.1.

Introducción

Uno de los campos que ha supuesto un impulso para la computación
científica es el de la manipulación algebraica de expresiones matemáticas.
En particular, se ha aplicado a la búsqueda de soluciones analíticas en los
3

4

Capítulo 1. Computación científica: Manipulación algebraica

problemas de los ámbitos de la Mecánica Celeste y de la Astrodinámica.
En estos problemas, el principal objeto matemático que aparece, aunque no
el único, es la serie de Poisson. Tradicionalmente, una serie de Poisson se
define como una serie de Fourier multivariada cuyos coeficientes son series
de Laurent en la forma
 
X
in−1 sen
j0 ,...,jm−1 i0
(j0 y0 + . . . + jm−1 ym−1 ),
Ci0 ,...,in−1 x0 . . . xn−1
cos
i0 ,...,in−1 ,j0 ,...,jm−1
j ,...,j

m−1
∈ R.
donde Ci00,...,in−1
La necesidad de un tratamiento eficiente de estos objetos matemáticos
por medio del computador llevó al desarrollo de sistemas de cómputo especializados, llamados Procesadores de Series de Poisson, ya que en sus inicios,
los sistemas de carácter general no podían ni manipular ni almacenar las
series de Poisson que se generan a lo largo de la resolución de este tipo de
problemas. Es importante destacar que estas series pueden contener cientos
o miles de términos. Sin embargo, hoy en día, las capacidades tanto de los
sistemas de carácter general como de los computadores permiten resolver estos problemas, y otros que involucran a objetos matemáticos más complejos,
sin demasiado esfuerzo.

1.2.
1.2.1.

Transformaciones de Lie
Conceptos básicos de mecánica hamiltoniana

Definición Un sistema Hamiltoniano es un sistema dinámico definido por
un sistema de ecuaciones diferenciales ordinarias de la forma
∂H
,
∂X
∂H
,
Ẋ = −
∂x
ẋ =

(1.1)

donde x = (x1 , . . . , xn ) ∈ Rn son las coordenadas y X = (X1 , . . . , Xn ) ∈ Rn
los momentos o momentos conjugados. El espacio R2n de coordenadas y
momentos se denomina espacio fásico.
La función H ≡ H(x, X, t) recibe el nombre de función de Hamilton o
Hamiltoniano; cuando H no depende del tiempo se dice que el sistema es
autónomo. El número de grados de libertad del sistema viene representado
por n. Las ecuaciones (1.1) son llamadas ecuaciones de Hamilton.
Las ecuaciones de Hamilton se expresan matricialmente de la siguiente
forma
ż = J ∇z H(z, t),

1.2. Transformaciones de Lie

5

donde z = (x, X) y J es una matriz cuadrada 2n × 2n, formada por submatrices nulas 0 e identidad I de orden n × n

J =

0 I
−I 0


.

La matriz J es una matriz ortogonal y hemisimétrica.
Cabe observar que la derivada de una función F (x, X, t) bajo la acción
del flujo inducido por las ecuaciones de Hamilton de H es
dF
dt

= ∇x F ẋ + ∇X F Ẋ +

∂F
∂t

= ∇x F ∇X H − ∇X F ∇x H +
= {F, H} +

∂F
∂t

∂F
.
∂t

Definición Sean f (x, X) y g(x, X) dos funciones diferenciables en x, X ∈
Rn . Se define el paréntesis de Poisson de f con g, {f, g}, como

n 
X
∂f ∂g
∂f ∂g
{f, g} = ∇x f ∇X g − ∇X f ∇x g =
−
.
∂xi ∂Xi ∂Xi ∂xi
i=1

Propiedades
1. Antisimétrica:
{f, g} = −{g, f }.
2. Linealidad. Sean α y β dos costantes, entonces
{αf + βg, h} = α{f, h} + β{g, h}.
3. Identidad de Jacobi. Sean f, g y h tres funciones arbitrarias, entonces
{{f, g}, h} + {{g, h}, f } + {{h, f }, g} = 0.
4. Regla del producto:
{f, g ∗ h} = {f, g} ∗ h + g ∗ {f, h}.

6

Capítulo 1. Computación científica: Manipulación algebraica

Definición Se dice que F (x, X, t) es una integral primera del sistema Hamiltoniano con Hamiltoniano H si es una constante del movimiento, esto es
si Ḟ = 0 bajo la acción del flujo inducido por H.
Teorema F (x, X, t) es una integral primera del sistema Hamiltoniano con
Hamiltoniano H si {H, F } = 0.
Conviene observar que un Hamiltoniano H describe la evolución de un
sistema dinámico en el espacio de las fases (x, X). Sobre H es posible aplicar
cambios de coordenadas, aunque en un caso general no se puede garantizar
que estos cambios mantengan la forma de las ecuaciones de Hamilton.
Definición Una transformación de coordenadas es canónica si conserva la
estructura de las ecuaciones de Hamilton.
Formalmente, dado el sistema Hamiltoniano
ż = J ∇z H(z, t),
con z = (x, X) y sea Z : zi −→ Zi (zi ) una transformación de coordenadas.
Las ecuaciones de Hamilton transformadas quedan
Ż = (J JJ T )∇Z H(Z, t),
donde J es el Jacobiano de Z. Entonces la estructura de las ecuaciones de
Hamilton se conserva si J JJ T = J.
Teorema El paréntesis de Poisson es invariante bajo transformaciones canónicas.

1.2.2.

Teoría de perturbaciones basada en transformaciones
de Lie

Definición Una transformación de Lie es una transformación canónica
φ : (x0 , X 0 , ε) → (x, X),
definida por la solución del sistema de ecuaciones diferenciales
dx
dε
dX
dε

= ∇X W(x, X, ε),

(1.2)

= −∇x W(x, X, ε),

que satisface las condiciones iniciales x(x0 , X 0 , 0) = x0 y X(x0 , X 0 , 0) = X 0 .
La función W es la generadora de φ y puede ser expresada como el siguiente
desarrollo en serie de potencias en el parámetro ε:

1.2. Transformaciones de Lie

7

W(x, X, ε) =

X εi
i≥0

i!

Wi+1 (x, X).

En el caso Hamiltoniano, la teoría de perturbaciones trata de transformar
el Hamiltoniano
H(x, X, ε) =

X n
n≥1

n!

Hn (x, X) ≡

X n
n≥1

n!

Hn,0 (x, X),

en un nuevo Hamiltoniano
K(x0 , X 0 , ε) =

X n
n≥1

n!

Kn (x0 , X 0 ) ≡

X n
n≥1

n!

H0,n (x0 , X 0 ),

el cual satisface algunos prerrequisitos específicos. Uno de los métodos más
utilizados para construir esta transformación fue propuesto por Deprit [42].
El método de Lie-Deprit proporciona un algoritmo que permite construir
una transformación de Lie. Este método busca una función generatriz W de
φ de modo que los términos Hn , Kn y Wn verifican la siguiente ecuación en
derivadas parciales, llamada ecuación homológica,
e0,n ,
LH0 (Wn ) + Kn = H

(1.3)

donde LH0 es el operador de Lie asociado a H0 , un operador lineal dado en
términos del paréntesis de Poisson por
LH0 : F → {F, H0 }.
e0,n , se calcula a partir de las funciones
La parte derecha de la ecuación (1.3), H
Hn , (Wi )1≤i≤n−1 y (Hp,q )p+q≤n−1 , donde Hp,q es una función que se obtiene
a partir de la formula recursiva
Hi,j = Hi+1,j−1 +

i  
X
i
k=0

k

{Hi−k,j−1 , Wk+1 } ,

con i ≥ 0 y j ≥ 0 (para más detalles, véanse las referencias [42, 69, 76]).
Una vez que la función generatriz W ha sido calculada, las transformaciones directa e inversa de φ pueden ser obtenidas de dos maneras diferentes:
o bien a través de los propios algoritmos clásicos recurrentes [42, 76], o bien
teniendo en cuenta la propia definición de la transformación de Lie, la cual
permite aplicar un método de integración numérica al problema inicial y
calcular una aproximación para las transformaciones directa e inversa, sin
necesidad de usar su expresión explícita [11, 77].

8

1.3.

Capítulo 1. Computación científica: Manipulación algebraica

MathATESAT

En esta sección no se pretende dar una descripción detallada de MathATESAT [133], pero puede ser de utilidad proporcionar algunos detalles de
cómo se ha llevado a cabo su implementación. MathATESAT es un entorno
que incorpora y amplía las funcionalidades proporcionadas por ATESAT
[2, 124, 126, 127] utilizando Mathematica como motor de cálculo. Mathematica no es tan eficiente como PSPC [1], pero a diferencia de los Procesadores
de Series de Poisson clásicos, Mathematica no impone ninguna restricción en
el número y tipo de variables (polinómicas o trigonométricas), en los límites
de los exponentes, en los valores de los coeficientes o en el tipo de aritmética
de los objetos matemáticos que manipula.
MathATESAT permite el desarrollo de teorías analíticas de alto orden
aplicadas a sistemas keplerianos u osciladores armónicos perturbados. Esto es, proporciona la función generatriz, el Hamiltoniano transformado y
los cambios de variables después de aplicar una o varias transformaciones
de Lie, con el objetivo de realizar un análisis cuantitativo o cualitativo, en
combinación con los recursos gráficos de Mathematica.
La inversión de la ecuación de Kepler
E − e sen E = M,

(1.4)

y los desarrollos de los coeficientes
 r n
a

cos mf

y

 r n
a

sen mf,

en función de la anomalía media M y de la excentricidad e son importantes
herramientas analíticas que aparecen en muchos problemas del ámbito de la
Mecánica Celeste y de la Astrodinámica. El problema del satélite artificial y
las teorías planetarias [19, 65, 102] son algunos ejemplos.
Además del interés intrínseco de estas funciones, su cálculo ha sido tradicionalmente utilizado como un test para medir la eficiencia de los sistemas,
tanto generales como especializados, de computación científica. Cabe destacar que, aunque los primeros órdenes de estos desarrollos han sido obtenidos
con anterioridad por muchos autores, en esta sección se ha seguido el trabajo de Deprit y Deprit [47], con el fin de reproducir en MathATESAT los
resultados que estos autores obtuvieron utilizando el Procesador de Series
de Poisson MAO!!.
MAO!! fue una reimplementación de Mechanized Algebraic Operations
(MAO) [123], desarrollado por Miller en 1984. MAO!! fue codificado en una
extensión de Common Lisp, y ejecutado en una Connection Machine modelo
CM-2, con 216 procesadores, perteneciente al U. S. Naval Research Laboratory.

1.3. MathATESAT

9

Así, se ha reproducido la inversión de la ecuación de Kepler y el desarrollo de (r/a)4 cos 5f utilizando el mismo método propuesto por Deprit y
Deprit. En el caso de la ecuación de Kepler, el método propuesto [43] aplica
el teorema de la función implícita de Lagrange, el cual se basa en el uso
de transformaciones de Lie no canónicas y en que cualquier función G(E)
analítica, en un entorno de E = M , se puede expresar como un desarrollo
en serie de potencias de e en la forma

X ej dj−1 
d
j
G(E) = G(M ) +
sen M
G(M ) .
j! dM j−1
dM

(1.5)

j≥1

Aunque en [47] los desarrollos que se muestran son de orden 30, inusualmente altos para las aplicaciones en Mecánica Celeste, se presenta aquí el
desarrollo de orden 200 en el caso de la ecuación de Kepler, y 120 para el desarrollo de (r/a)4 cos 5f , como un test para MathATESAT y, por extensión,
para Mathematica. Los ejemplos han sido desarrollados utilizando exclusivamente aritmética racional, y han sido ejecutados en un computador Mac Pro
2 × 3 GHz Quad-Core Intel Xeon.
La figura 1.1 muestra el coeficiente del término e29 del desarrollo en
serie de potencias de la ecuación de Kepler; como puede comprobarse, este
coeficiente e29 coincide con el mostrado en la figura 5 de la página 193 de
[47].
La figura 1.2 (a) muestra los tiempos empleados por las versiones 6 y
7 de Mathematica en función del orden del desarrollo. Conviene notar que
Mathematica 7 es aproximadamente un 15 % más eficiente que la versión 6
cuando se incrementa el orden. Por otro lado, el tiempo empleado para el
desarrollo de orden n = 30 es de alrededor de 10.13 segundos, mientras que
el tiempo requerido por MAO!!, ejecutado en la Connection Machine, es de
alrededor de 400 segundos (para más detalles véase la figura 8 en la página
198 de [47]). Además, la figura 1.2 (b) muestra la eficacia de Mathematica
para manipular series de Poisson con miles de términos; por ejemplo, para
el caso n = 200 el número de términos es de 10 101.
Por otro lado, para el desarrollo de la función (r/a)n cos mf se siguen los
mismos pasos propuestos en [47]:
1. Por medio de transformaciones de Lie se obtienen los desarrollos de
cos(E − M ) y de sen(E − M ) en series de e y de M .
2. A partir de la relación cos E = cos M cos(E − M ) − sen M sen(E − M )
se obtiene el desarrollo de e cos E en series de e y de M .
3. A continuación se calcula r/a = 1 − e cos E.
4. A partir de la ecuación de Kepler se obtiene que a/r = ∂E/∂M .

10

Capítulo 1. Computación científica: Manipulación algebraica

e29

=

1
sen M
30601861255040514307758489600000
−

129140163
sen 3 M
197426745697337815859200000

+

11920928955078125
sen 5 M
14635087932080914095314829312

−

1341068619663964900807
sen 7 M
200005757089298206477516800000

+

984770902183611232881
sen 9 M
222967968042797603225600000

−

13109994191499930367061460371
sen 11 M
21544421800842254737421107200000

+

1192533292512492016559195008117
sen 13 M
42536422529868041404651929600000

−

1539470708370208740234375
sen 15 M
2746965366287266471739392

+

1667711322168688287513535727415473
sen 17 M
293912381724235269285504614400000

−

33600614943460448322716069311260139
sen 19 M
1051896945118315700600753356800000

+

173185820137589432516494811541
sen 21 M
1644632533959993982976000000

−

5843211045545439551605946764725979847
sen 23 M
28241146243937388918302834688000000

+

88817841970012523233890533447265625
sen 25 M
374138705439682528389675953946624

−

7509466514979724803946715958257547
sen 27 M
51333915282493292190629888000000

+

3053134545970524535745336759489912159909
sen 29 M.
81842841814930553085241614925824000000

Figura 1.1: Coeficiente del término e29 del desarrollo en serie de potencias
de la ecuación de Kepler.
5. Seguidamente se calcula cos f = (a/r)(cos E−e) como la multiplicación
de dos series de Poisson.
Para finalizar, cualquier múltiplo de cos jf , con j ≥ 2, se puede obtener
como la relación de inducción
cos jf = 2 cos f cos(j − 1)f − cos(j − 2)f.
En la figura 1.3 se muestra el tiempo empleado en el proceso de cálculo
en función del orden del desarrollo de (r/a)4 cos 5f . En este caso el tiempo se

1.4. Ecuación generalizada de Kepler

11

10 000

Number of terms

200

Time HsL

150

100

5000

50
10.13 s
0

0

30

50

100

150

0

200

0

50

Order

100

150

200

Order

(a) Tiempo de proceso (segundos). En azul
Mathematica 6 y en rojo Mathematica 7.

(b) Número de términos.

Figura 1.2: Tiempo de proceso y número de términos en función del orden
del desarrollo para la inversión de la ecuación de Kepler.
incrementa notablemente respecto al primer ejemplo. Para el desarrollo de
orden n = 30 el tiempo empleado es de alrededor de 16.86 segundos, mientras
que el tiempo utilizado por MAO!!, ejecutado en la Connection Machine, es
de alrededor de 1200 segundos (para más detalles, véase la figura 10 en la
página 199 de [47]).
4000

Number of terms

Time HsL

20 000

10 000

1000
0

2000

16.86 s
30

60

90

120

0

0

30

Order

(a) Tiempo de proceso (segundos). En azul
Mathematica 6 y en rojo Mathematica 7.

60

90

120

Order

(b) Número de términos.

Figura 1.3: Tiempo de proceso y número de términos en función del orden
del desarrollo para la función (r/a)4 cos 5f .

1.4.

Ecuación generalizada de Kepler

En esta sección se introduce una ecuación trascendente que generaliza a
la ecuación de Kepler (1.4). Esta ecuación aparece cuando se aplica el método
de Krylov-Bogoliubov-Mitropolsky [79] para obtener una solución analítica
aproximada en el problema zonal del satélite artificial [3, 128, 133, 134, 138,
137].
El caso más simple en el que aparece esta ecuación trascendente es el

12

Capítulo 1. Computación científica: Manipulación algebraica

problema principal del satélite artificial. En este problema, el achatamiento
terrestre, representado por el armónico zonal J2 , es la única perturbación
considerada. Esta ecuación, al igual que la ecuación de Kepler, no puede
ser invertida en términos de funciones elementales, debido a que también
es trascendente en la anomalía excéntrica E y, por tanto, es habitualmente
resuelta utilizando métodos numéricos [34, 37, 38, 58, 96, 103, 105, 106, 113,
142, 145, 147]. Es importante destacar que los problemas de convergencia en
la solución de la ecuación generalizada de Kepler se traducen en problemas
de convergencia en la determinación de la posición y velocidad del satélite
en la familia de propagadores orbitales PPKB.
La ecuación de Kepler ha sido estudiada durante más de tres centurias
debido a su importancia en Mecánica Celeste y en Astrodinámica. Durante
este tiempo se han desarrollado multitud de algoritmos para resolver este
problema; una revisión histórica puede verse en [33].
En esta sección se aplican tres métodos numéricos para la resolución de la
ecuación generalizada de Kepler, Newton-Raphson, Halley y uno propuesto
por Danby y Burkardt, así como tres valores para inicializar estos métodos,
dos de ellos propuestos en [37], y que han sido ampliamente utilizados en la
literatura, y el tercero es la propia solución de la ecuación clásica de Kepler.

1.4.1.

Teoría analítica de primer orden

El Hamiltoniano del problema principal del satélite artificial en coordenadas polares nodales (r, θ, ν, R, Θ, N ) viene dado por
1
H=
2



Θ2
µ
µ  α 2
2
R + 2 − + J2
P2 (s sen θ),
r
r
r r

(1.6)

donde P2 es el polinomio de Legendre de grado 2, s es el seno de la inclinación
de la órbita del satélite, µ es la constante gravitacional, α es el radio ecuatorial de la Tierra, y J2 > 0 es una constante que representa el achatamiento
terrestre.
La integración analítica de H comienza aplicando una transformación de
Lie, ϕ, llamada eliminación de la paralaje [45]. El Hamiltoniano transformado, K, de primer orden, tiene un grado de libertad y sólo depende de los
términos de corto periodo a través de las variables (r, R). A continuación, K
se transforma en la ecuación de un oscilador armónico perturbado sustituyendo las variables r y dr/dt por u y v, respectivamente, y el tiempo t por
una nueva variable t∗ :
u=

1 1
− ,
r p

r2

dt∗
= Θ,
dt

v=

du
,
dt∗

(1.7)

donde p = Θ2 /µ. Finalmente, el método de Krylov-Bogoliubov-Mitropolsky
[13, 79] se aplica para integrar la ecuación de este oscilador armónico.

1.4. Ecuación generalizada de Kepler

13

El método de Krylov-Bogoliubov-Mitropolsky considera que la solución
del oscilador perturbado se puede expresar a través de un desarrollo en serie
de la forma
u = δ cos ψ +

X i
i≥1

i!

ui (δ, ψ),

(1.8)

donde ui son funciones 2π-periódicas en la variable ψ, y la relación de δ y ψ
con el tiempo t∗ viene dada por los siguientes desarrollos
X i
dδ
=
An (δ),
dt∗
i!
i≥0

X i
dψ
=
Bn (δ).
dt∗
i!

(1.9)

i≥1

Utilizando la relación de ψ con t∗ y de t∗ con t, se obtiene la relación entre
ψ y t:
r2 dψ = Θ

dψ
dt.
dt∗

(1.10)

A continuación, se introduce la variable auxiliar E, que tiene un significado
similar al de la anomalía excéntrica en el movimiento elíptico, para integrar la
ecuación (1.10). Esta anomalía generalizada se define mediante las relaciones
√
cos ψ =

1 − e2 sen E
,
1 − e cos E

sin ψ =

cos E − e
,
1 − e cos E

(1.11)

donde e = δp. Teniendo en cuenta las relaciones entre u y r dadas en la
ecuación (1.7), se obtiene

M

= E − e sen E
(1.12)
2
2


α (3s − 2) 
2
2
+J2
3 2 e + 2 E − 8e sen E + e sin 2E ,
2
2
4a (1 − e )

con


Θ dψ
dψ

α 2
M=
(t − T ),
=1+
(3s2 − 2),
(1.13)
aη dt∗
dt∗
4 aη 2
√
donde η = 1 − e2 , a = p/η y el tiempo T corresponde al instante en el
que ψ = 0 (véase [133] para más detalles). Esta ecuación puede ser considerada como un caso perturbado de la ecuación clásica de Kepler, y juega el
mismo papel en la determinación precisa de la posición y velocidad en los
propagadores de órbitas de la familia PPKB [134].

14

Capítulo 1. Computación científica: Manipulación algebraica

1.4.2.

La ecuación de Kepler

La expresión de la ecuación de Kepler (EK) viene dada por la ecuación
trascendente
E − e sen E = M,

(1.14)

donde M y E son las anomalías media y excéntrica, respectivamente, y e es
la excentricidad de la órbita. Por otro lado, la anomalía media se relaciona
con el tiempo a través de la expresión
2π
(t − T ),
(1.15)
P
donde P es el periodo orbital y T es la época de paso por el perigeo.
La solución de la ecuación de Kepler en el caso elíptico, 0 ≤ e < 1, se
reduce a, dados un par de valores para e y M , buscar un cero de la función
M=

fk (E) = E − e sen E − M = 0,

(1.16)

con 0 ≤ M ≤ 2π. Es importante destacar que tanto la anomalía media como
la excéntrica pertenecen al mismo intervalo [0, π] o [π, 2π].
Desafortunadamente, invertir la ecuación de Kepler, es decir, encontrar
la anomalía excéntrica como una función de la anomalía media y de la excentricidad, no es una tarea fácil. En la práctica, los métodos numéricos [149]
proporcionan una solución aproximada a este problema. Algunos de los métodos más utilizados para resolver la ecuación de Kepler son los métodos
de Newton-Raphson, Halley y uno propuesto por Danby y Burkardt [37], el
cual es conocido en la literatura como el método de Danby. Los procesos
iterativos que definen estos tres métodos son
xn+1 = xn −

f (xn )
,
f 0 (xn )

(1.17)

para el método de Newton-Raphson (MNR),
xn+1 = xn −

2f (xn )f 0 (xn )
,
2[f 0 (xn )]2 − f (xn )f 00 (xn )

(1.18)

para el método de Halley (MH) y, finalmente,
xn+1 = xn − δn3 ,

(1.19)

donde

δn1 =

f
,
f0

δn2 = −

f

f0

+

,
1
00
2 δn1 f

δn3 = −

f
f0

+

1
00
2 δn2 f

2 f 000
+ 61 δn2

,

1.4. Ecuación generalizada de Kepler

15

para el método de Danby (MD). El orden de convergencia de estos métodos
es cuadrático, cúbico y cuártico, respectivamente.

1.4.3.

La ecuación generalizada de Kepler

El primer orden de la ecuación generalizada de Kepler (EGK) [137] es

M

= E − e sen E



ε∗
2 e2 + 2 E − 8e sen E + e2 sen 2E ,
+
3
(1 − e2 )

(1.20)

donde ε∗ es un pequeño parámetro que depende del achatamiento terrestre,
J2 , del radio ecuatorial de la Tierra, α, de la inclinación (s = sen i) y del
semieje mayor de la órbita, a:
ε∗ = J2

 α 2

3s2 − 2 .
2a

(1.21)

Para más detalles acerca de la obtención de la ecuación generalizada de
Kepler se puede consultar [4, 134].
La figura 1.4 (a) representa el parámetro ε∗ en función del semieje mayor
y la inclinación. Las unidades de a y de i son respectivamente el radio medio
terrestre y el radián. Como se puede observar, el valor de ε∗ puede aumentar
o disminuir cuando el valor del semieje mayor, a, crece, aunque ello nunca
supone un cambio en el signo de ε∗ . Sin embargo, el signo del ε∗ sí depende
de la inclinación: ε∗ toma valores positivos cuando la inclinación pertenece
al intervalo (r1 , r2 ), alcanzando su máximo, J2 /4, para i = π/2, toma valores
negativos para inclinaciones pertenecientes a los intervalos [0, r1 ) y (r2 , π],
alcanzando su mínimo, −J2 /2, para
p i = 0 e i = π, y toma
p el valor cero
para las inclinaciones r1 = arcsin( 2/3) y r2 = π − arcsin( 2/3), es decir,
para las raíces de la ecuación ε∗ = 0. Esto es, para los valores r1 y r2 , se
recupera la ecuación de Kepler. En la figura 1.4 (b) se muestra la gráfica del
parámetro ε∗ para a = α. Los valores positivos de ε∗ están representados en
rojo y los negativos en azul.
Finalmente, como en el caso de la ecuación de Kepler, la solución de la
generalizada para el caso elíptico consiste en, dados un par de valores para
e y M , buscar un cero de la función

fgk (E) = E − e sen E − M
(1.22)
∗



ε
2
2
+
3 2 e + 2 E − 8e sen E + e sen 2E = 0.
2
(1 − e )

16

Capítulo 1. Computación científica: Manipulación algebraica

Ε*
0.0002
0.0001

r1

0.0002
0.5

0.0000

1.0

r2
1.5

2.0

2.5

3.0

i

-0.0001

-0.0002

i

0 1
2

-0.0004
1

2

a 3

4

-0.0002
3
5

-0.0003

(a) ε∗ (a, i).

(b) ε∗ (a = α, i).

Figura 1.4: Representación gráfica de ε∗ (−J2 /2 ≤ ε∗ ≤ J2 /4).

1.4.4.

Resultados numéricos

En este apartado se estudia el comportamiento de los métodos de NewtonRaphson, Halley y Danby aplicados a la resolución de la ecuación generalizada de Kepler. En la tabla 1.1 se muestran los valores tomados para inicializar
estos procesos iterativos. S1 es una simple función de M que ha sido frecuentemente utilizada en la resolución de la ecuación Kepler, S2 ofrece dos modos
de determinación del valor inicial para distintas regiones de M (véase la referencia [37] para más detalles), mientras que S3 es la solución de la propia
ecuación de Kepler.
Tabla 1.1: Valores seleccionados para inicializar los métodos de NewtonRaphson, Halley y Danby.
Valores iniciales
(S1 )

E0 = M

(S2 )

√
E0 = M + e2 ( 3 6M − M )
E0 = M + 0.85e

(S3 )

E0 = solución de la EK

si M < 0.1
si M ≥ 0.1

A continuación, los métodos de Newton-Raphson, Halley y Danby son
empleados para resolver la EGK en una malla de puntos equidistantes en el
plano M –e (0 ≤ M ≤ π, 0 ≤ e < 1). Los puntos se encuentran a una distancia entre sí de ∆M = 1/1000 rad y de ∆e = 1/1000; el número de puntos
considerado en la malla es de 3 142 000. El número máximo permitido de
iteraciones es 20, y se considera que el proceso converge si el error es inferior
a 10−14 . Los valores de α y J2 corresponden a los de la Tierra, el semieje
mayor de la órbita es igual a 7 200 km, el cual corresponde a una órbita de
tipo LEO (Low Earth Orbit), mientras que para la inclinación se consideran cinco valores que pertenecen al intervalo [0, π/2], como puede verse en

1.4. Ecuación generalizada de Kepler

17

la figura 1.5. Los dos primeros valores, i1 = 0◦ e i2 = 53◦ , corresponden a
cantidades negativas del parámetro ε∗ , el tercer valor es r1 , para el que la
ecuación generalizada se reduce a la clásica de Kepler, y los dos últimos valores son i4 = 55◦ e i5 = 90◦ , los cuales corresponden a cantidades positivas
de ε∗ . Conviene recordar que los valores máximo y mínimo de ε∗ se alcanzan en i5 e i1 , respectivamente. Finalmente, se necesita un criterio adicional
de convergencia para determinar la relación entre las anomalías E y M : el
proceso iterativo converge, al igual que en la ecuación clásica de Kepler, si
la raíz de la ecuación (1.22) pertenece al intervalo [0, π]. El resultado de este
estudio se muestra representando sobre el plano M –e las regiones en las que
el número de iteraciones del método numérico es el mismo, y analizando qué
cantidad de iteraciones es predominante en cada caso.
Ε*
0.0002

5

0.0001
0.5
-0.0001

4
3
2 1.0

1.5

2.0

2.5

3.0

i

-0.0002
-0.0003

1
Figura 1.5: Parámetro ε∗ (a = 7 200, i).
La figura 1.6 muestra los resultados cuando se utiliza el valor de S1 para inicializar el método de Newton-Raphson. En la figura 1.6 (c) se pueden
observar los resultados para i3 = r1 , este valor de la inclinación hace que el
parámetro ε∗ se anule, y por lo tanto la ecuación generalizada se reduce a la
clásica. En el 94.05 % de los casos el método utiliza entre 2 y 6 iteraciones
para converger. Como se puede observar, el número de iteraciones se incrementa cerca de M ≈ 0 y e ≈ 1; esta región representa el 0.08 % de los casos.
Para un análisis más detallado de esta combinación, véase [37]. Las figuras
1.6 (a) y (b) ilustran el caso ε∗ < 0. Los valores de inclinación considerados
son i1 = 0◦ e i2 = 53◦ . El porcentaje de los casos en los que MNR converge a la solución utilizando entre 2 y 6 iteraciones es del 86.72 % y 91.72 %
para i1 e i2 , respectivamente. Es importante destacar que aparecen dos regiones donde el método diverge (regiones de color rojo en las figuras); estas
regiones alcanzan su tamaño máximo, que representa el 10.48 % de los casos,
para i1 = 0◦ , aunque van disminuyendo a medida que crece la inclinación,
desapareciendo al alcanzar el valor i3 = r1 . Para i2 = 53◦ , la región en la
que el método diverge representa el 3.58 % de los casos. Las figuras 1.6 (d) y
(e) muestran los casos en los que el parámetro ε∗ es positivo. Los valores de
inclinación analizados son i4 = 55◦ e i5 = 90◦ , respectivamente. El porcentaje de los casos en los que MNR converge a la solución utilizando entre 2

18

Capítulo 1. Computación científica: Manipulación algebraica

y 6 iteraciones es del 93.80 % y 92.49 % para i4 e i5 , respectivamente. Para
el valor i4 = 55◦ , MNR no converge en el 0.1 % de los casos, también comprendidos en la región cercana a M ≈ 0 y e ≈ 1, mientras que para i5 = 90◦
los casos en los que el método diverge representan el 0.09 %. Para valores
elevados de excentricidad, e > 0.9, es posible detectar pequeños cambios en
la forma de las regiones en el plano M –e respecto al caso de la ecuación
de Kepler. Finalmente, la figura 1.6 (f) muestra los porcentajes de casos en
los que el método de Newton-Raphson converge, en función del número de
iteraciones; los colores rojo, verde, azul, negro y magenta representan las inclinaciones 0◦ , 53◦ , r1 , 55◦ y 90◦ , respectivamente. Como se puede observar,
el comportamiento cualitativo para las cinco inclinaciones consideradas es
aproximadamente el mismo; el máximo porcentaje se encuentra alrededor
del 37 %, que corresponde a la cuarta iteración.
El uso de S1 como valor inicial en el método de Newton-Raphson presenta
algunos problemas de convergencia para las inclinaciones i1 = 0◦ e i2 = 53◦ .
Sin embargo, cuando estos problemas son eliminados, las regiones en las que
MNR diverge (en color rojo) no desaparecen. Los casos que permanecen en
esa región corresponden a raíces de la ecuación generalizada que no verifican
la restricción impuesta de pertenecer al intervalo [0, π], como puede verse
en la figura 1.7. En esta figura se resuelve la EGK para i1 = 0◦ , M = π y
varios valores de excentricidad, 0.91, 0.92 y 0.925. El valor de la anomalía
excéntrica para e = 0.925 es 5.19 radianes, y por lo tanto no verifica la
restricción impuesta en este estudio por la que el método iterativo converge
si la raíz de la ecuación (1.22) pertenece al intervalo [0, π].
En la figura 1.8 se muestra el comportamiento del método de Halley
cuando se utiliza el valor de S1 para inicializar el proceso iterativo. La figura
1.8 (c) muestra el plano M –e para i3 = r1 . MH es convergente en todo el
plano para este valor de la inclinación; en el 97.99 % de los casos el método
de Halley utiliza entre 4 y 5 iteraciones para converger a la solución de la
ecuación de Kepler. Las figuras 1.8 (a) y (b) representan el caso ε∗ < 0,
para el que el método converge a la solución utilizando mayoritariamente
entre 4 y 5 iteraciones. Para las inclinaciones i1 = 0◦ e i2 = 53◦ el método
converge en un 86.09 % y 93.40 % de los puntos del plano, respectivamente.
Las regiones en las que el método diverge son ligeramente menores que para
el método de Newton-Raphson, alrededor del 10.42 % de los puntos del plano
para la inclinación i1 = 0◦ , y el 3.52 % para i2 = 53◦ . Las figuras 1.8 (d)
y (e) ilustran el caso ε∗ > 0. El método converge a la solución utilizando
entre 4 y 5 iteraciones en el 97.16 % de los puntos del plano para i4 =
55◦ , y en el 94.30 % de los casos para i5 = 90◦ . Para valores elevados de
excentricidad, e > 0.9, se observa un cambio en la forma de las regiones
en el plano M –e respecto al caso de la ecuación de Kepler, como en MNR.
Finalmente, la figura 1.8 (f) muestra los porcentajes de casos en los que el
método de Halley converge, en función del número de iteraciones; los colores

1.4. Ecuación generalizada de Kepler

19

(b) i2 = 53◦ .

(c) i3 = r1 .

(d) i4 = 55◦ .

%

(a) i1 = 0◦ .

35
30
25
20
15
10
5
0
0

(e) i5 = 90◦ .

5

10
15
Number of iterations

20

(f) Número de iteraciones.

Figura 1.6: El método de Newton-Raphson utilizando S1 como valor inicial
del proceso iterativo.

20

Capítulo 1. Computación científica: Manipulación algebraica
1.0
e=0.91

fHEL

0.5

e=0.92

0.0
-0.5
-1.0
0.0

e=0.925

0.5

1.0

1.5
2.0
E HradL

2.5

3.0

Figura 1.7: Gráficas de fgk (E) para i1 = 0◦ , M = π y tres valores de excentricidad: 0.91, 0.92 y 0.925.
rojo, verde, azul, negro y magenta representan las inclinaciones 0◦ , 53◦ , r1 ,
55◦ y 90◦ , respectivamente. Como se puede observar, el comportamiento
cualitativo para las cinco inclinaciones consideradas es aproximadamente el
mismo; entre el 16 % y el 19 % de los puntos del plano utilizan 4 iteraciones
para que el proceso iterativo converja, y entre el 68.95 % y el 79.81 % emplean
5 iteraciones.
La figura 1.9 ilustra la combinación del método de Danby y S1 . La figura
1.9 (c) representa el plano M –e para i3 = r1 . MD es convergente en todo el
plano para este valor de la inclinación; en el 95.91 % de los casos el método
converge utilizando entre 3 y 4 iteraciones. Para un análisis más detallado
de este caso, véanse las referencias [37, 38]. El caso ε∗ < 0 se muestra en
las figuras 1.9 (a) y (b). Para la mayoría de los puntos del plano el método
converge a la solución utilizando entre 4 y 5 iteraciones, lo cual sucede en
un 87.44 % de los casos para i1 = 0◦ y en un 93.04 % para i2 = 53◦ . El
tamaño de las regiones en las que el método diverge es el mismo que para el
método de Halley. Las figuras 1.9 (d) y (e) representan el caso ε∗ > 0. En
el 95.63 % de los puntos del plano, para el valor i4 = 55◦ , y en el 94.22 %,
para i5 = 90◦ , el método utiliza entre 3 y 4 iteraciones para converger a
la solución. El cambio en las formas de las regiones en el plano M –e con
respecto al caso de la ecuación de Kepler también se produce para valores
altos de excentricidad (e > 0.9). Finalmente, la figura 1.9 (f) muestra los
porcentajes de casos en los que el método de Danby converge, en función
del número de iteraciones; los colores rojo, verde, azul, negro y magenta
representan las inclinaciones 0◦ , 53◦ , r1 , 55◦ y 90◦ , respectivamente. Como
se puede observar, el comportamiento cualitativo para las cinco inclinaciones
consideradas es aproximadamente el mismo; entre el 76.01 % y el 82.12 % de
los puntos del plano utilizan 3 iteraciones, y entre el 11.43 % y el 14.28 %
utilizan 4 iteraciones.
Los resultados de las combinaciones de los tres métodos numéricos y la
condición inicial S2 se muestran en las figuras 1.10, 1.11 y 1.12. Los planos

1.4. Ecuación generalizada de Kepler

21

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i3 = r1 .

(d) i4 = 55◦ .

80

%

60
40
20
0
0

(e) i5 = 90◦ .

5

10
15
Number of iterations

20

(f) Número de iteraciones.

Figura 1.8: El método de Halley utilizando S1 como valor inicial del proceso
iterativo.

22

Capítulo 1. Computación científica: Manipulación algebraica

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i3 = r1 .

(d) i4 = 55◦ .

80

%

60
40
20
0
0

(e) i5 = 90◦ .

5

10
15
Number of iterations

20

(f) Número de iteraciones.

Figura 1.9: El método de Danby utilizando S1 como valor inicial del proceso
iterativo.

1.4. Ecuación generalizada de Kepler

23

M –e para el caso de la ecuación de Kepler, i3 = r1 , se pueden ver en las
figuras 1.10, 1.11 y 1.12 (c). Los tres métodos siempre convergen: el método
de Newton-Raphson emplea entre 3 y 5 iteraciones para el 99.67 % de los
puntos del plano, el método de Halley entre 4 y 5 iteraciones en el 85.16 %
de los puntos del plano y el método de Danby entre 2 y 3 iteraciones en el
93.36 % de los puntos del plano. Los casos en los que ε∗ < 0 se presentan en
las figuras 1.10, 1.11 y 1.12 (a) y (b). El tamaño de las regiones en las cuales
los métodos divergen para la condición S2 es aproximadamente el mismo
que el obtenido para S1 . El método de Newton-Raphson necesita entre 3 y
5 iteraciones para converger en el 89.25 % de los casos para i1 = 0◦ , y en el
96.13 % para i2 = 53◦ . El método de Halley utiliza entre 4 y 5 iteraciones
para converger en el 80.77 % de los casos para i1 = 0◦ , y en el 83.42 % para
i2 = 53◦ . El método de Danby emplea entre 2 y 3 iteraciones para converger
en el 89.25 % de los casos para i1 = 0◦ , y en el 96.35 % para i2 = 53◦ . Para
finalizar, en las figuras 1.10, 1.11 y 1.12 (d) y (e) se analiza el caso ε∗ > 0.
El cambio en las formas de las regiones en el plano M –e con respecto al
caso de la ecuación de Kepler también tiene lugar para valores elevados de
excentricidad (e > 0.9). El método de Newton-Raphson necesita entre 3 y
5 iteraciones para converger en el 98.53 % y en el 94.62 % de los casos para
i4 = 55◦ e i5 = 90◦ , respectivamente. El método de Halley utiliza entre 4 y
5 iteraciones para converger en el 85.15 % y en el 84.53 % de los casos para
i4 = 55◦ e i5 = 90◦ , respectivamente. El método de Danby emplea entre
2 y 3 iteraciones para converger en el 99.86 % y en el 98.63 % de los casos
para i4 = 55◦ e i5 = 90◦ , respectivamente. Las figuras 1.10, 1.11 y 1.12 (f)
muestran los porcentajes de casos en los que los tres métodos convergen,
en función del número de iteraciones; los colores rojo, verde, azul, negro y
magenta representan las inclinaciones 0◦ , 53◦ , r1 , 55◦ y 90◦ , respectivamente.
El comportamiento es aproximadamente similar para todas las inclinaciones:
entre el 63.38 % y el 67.73 % de los casos converge en la cuarta iteración para
MNR; MH converge entre el 53.00 % y el 56.45 % de las ocasiones en la cuarta
iteración, y entre el 27.77 % y el 28.99 % en la quinta iteración; para MD entre
el 82.84 % y el 93.36 % de los casos convergen en la tercera iteración. Para
finalizar, hay que destacar que los tres métodos presentan serios problemas
de convergencia para excentricidades superiores a 0.99.
Para concluir este estudio, la propia solución de la ecuación clásica de
Kepler, S3 , es utilizada para inicializar los tres procesos iterativos. Este valor
constituye una condición intuitiva, ya que la ecuación generalizada de Kepler
puede ser considerada como una versión perturbada de la ecuación clásica.
Los resultados se muestran en las figuras 1.13, 1.14 y 1.15, en las que no se ha
considerado el caso i3 = r1 por corresponder a la ecuación clásica de Kepler,
cuya solución está siendo precisamente utilizada en la inicialización de los
procesos iterativos. Las regiones en las que los métodos divergen para el caso
ε∗ < 0 representan unos porcentajes globales similares a los obtenidos con S1

24

Capítulo 1. Computación científica: Manipulación algebraica

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i3 = r1 .

(d) i4 = 55◦ .

70
60
50
%

40
30
20
10
0
0

(e) i5 = 90◦ .

5

10
15
Number of iterations

20

(f) Número de iteraciones.

Figura 1.10: El método de Newton-Raphson utilizando S2 como valor inicial
del proceso iterativo.

1.4. Ecuación generalizada de Kepler

25

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i3 = r1 .

(d) i4 = 55◦ .

50

%

40
30
20
10
0
0

(e) i5 = 90◦ .

5

10
15
Number of iterations

20

(f) Número de iteraciones.

Figura 1.11: El método de Halley utilizando S2 como valor inicial del proceso
iterativo.

26

Capítulo 1. Computación científica: Manipulación algebraica

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i3 = r1 .

(d) i4 = 55◦ .

80

%

60
40
20
0
0

(e) i5 = 90◦ .

5

10
15
Number of iterations

20

(f) Número de iteraciones.

Figura 1.12: El método de Danby utilizando S2 como valor inicial del proceso
iterativo.

1.4. Ecuación generalizada de Kepler

27

y S2 : un 10.42 % para i1 = 0◦ y un 3.52 % para i2 = 53◦ . MNR utiliza para
converger entre 2 y 4 iteraciones en el 88.05 %, 95.98 %, 97.88 % y 90.67 %
de los casos para i1 = 0◦ , i2 = 53◦ , i4 = 55◦ e i5 = 90◦ , respectivamente.
MH necesita entre 3 y 4 iteraciones para converger en un 84.64 %, 94.62 %,
95.86 % y 90.27 % de los casos para i1 = 0◦ , i2 = 53◦ , i4 = 55◦ e i5 = 90◦ ,
respectivamente. MD requiere para converger entre 2 y 3 iteraciones en un
89.25 %, 96.34 %, 98.92 % y 95.33 % de los casos para i1 = 0◦ , i2 = 53◦ ,
i4 = 55◦ e i5 = 90◦ , respectivamente.

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i4 = 55◦ .

(d) i5 = 90◦ .

Figura 1.13: El método de Newton-Raphson utilizando S3 como valor inicial
del proceso iterativo.
En la tabla 1.2 se compara el número de iteraciones ( %) requerido por
los tres métodos numéricos para converger, utilizando como valores iniciales
S2 y S3 , para los casos en los que la inclinación toma los valores 0◦ , 53◦ , 55◦
y 90◦ . Como se puede observar, empleando S3 los tres métodos convergen

28

Capítulo 1. Computación científica: Manipulación algebraica

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i4 = 55◦ .

(d) i5 = 90◦ .

Figura 1.14: El método de Halley utilizando S3 como valor inicial del proceso
iterativo.

1.4. Ecuación generalizada de Kepler

29

(a) i1 = 0◦ .

(b) i2 = 53◦ .

(c) i4 = 55◦ .

(d) i5 = 90◦ .

Figura 1.15: El método de Danby utilizando S3 como valor inicial del proceso
iterativo.

30

Capítulo 1. Computación científica: Manipulación algebraica

en una iteración menos. En general, MD es el método que menos iteraciones
requiere, seguido por MNR, que necesita una iteración más, y por MH, que
resulta algo más lento que MNR en número de iteraciones.
Tabla 1.2: Número de iteraciones ( %) empleado por los métodos MNR, MH
y MD, utilizando como valores iniciales S2 y S3 , para las inclinaciones 0◦ ,
53◦ , 55◦ y 90◦ .
i

3

MNR
4

3

MH
4

5

2

3

V. inic.

MD

0◦

S2
S3

11.85
52.92

65.44
34.81

2.77
25.18

53.00
59.46

27.77
4.30

6.31
50.27

82.94
38.98

53◦

S2
S3

11.90
84.45

67.73
9.63

3.56
83.62

54.96
11.00

28.46
1.35

6.57
86.87

89.78
9.47

55◦

S2
S3

11.89
85.81

67.51
4.90

3.51
89.93

56.45
5.93

28.70
1.33

6.50
93.38

93.36
5.54

90◦

S2
S3

11.88
64.99

66.74
25.24

3.61
45.58

55.77
44.69

28.76
6.03

6.58
66.85

92.05
28.48

En la figura 1.16 se muestra el tiempo requerido por los tres métodos
iterativos para converger a la solución con un error de 10−14 , para valores
de inclinación 0◦ , 53◦ , 55◦ y 90◦ , haciendo uso tanto de S2 como de S3
para su inicialización. La CPU utilizada ha sido un Intel Core i7 a 1.7 GHz.
Como puede observarse, la utilización del valor S2 para la inicialización de
los procesos iterativos reduce el tiempo de cómputo alrededor de un 20 %
respecto del uso de S3 en todos los casos, aun a pesar de requerir en general
una iteración más.
1.25 à

à

1.55

1.20

à
à

1.15

à

ì
æ

1.10

ì

ì

1.05

æ

1

2

3
Case

(a) S2 .

æ
ì

4

Time Hs x 10-6 L

Time Hs x 10-6 L

æ

1.50 æ

ì

1.45
1.40

à
æ
ì

1.35

à
ì
æ

1.30
1

2

3

à
ì
æ

4

Case

(b) S3 .

Figura 1.16: Tiempo empleado en la convergencia del método con un error
de 10−14 (MNR en verde, MH en azul y MD en rojo). Los casos 1, 2, 3 y 4
corresponden a las inclinaciones 0◦ , 53◦ , 55◦ y 90◦ , respectivamente.

Hay una fuerza motriz más poderosa que
el vapor, la electricidad y la energía
atómica: la voluntad

ALBERT EINSTEIN

Capítulo 2

El proyecto AstrodyTWeb
ools
Resumen
En este capítulo se presenta el proyecto de investigación Astrodynamics
Web Tools, AstrodyTWeb
ools , una infraestructura web diseñada para apoyar el
uso y la difusión a través de Internet de herramientas de computación científica no comerciales en los campos de la Mecánica Celeste y de la Astrodinámica. A continuación se describe brevemente el proyecto, su diseño y las
herramientas disponibles en este momento.

2.1.

Introducción

Internet ha abierto nuevas posibilidades y ha incrementado el número de
vías de colaboración en prácticamente todos los campos de la Ciencia y de
la Tecnología [64, 141], permitiendo la ejecución de aplicaciones sofisticadas
como servicios web [35, 80], así como la participación en proyectos de código abierto en los que se desarrolla software altamente especializado para la
resolución de determinados tipos de problemas, con el soporte de extensas
comunidades de desarrolladores y usuarios. Este tipo de iniciativas está siendo especialmente bien valorado por parte de la comunidad científica, debido
a las evidentes ventajas que aporta para el avance del conocimiento.
Es habitual que los distintos grupos de investigación desarrollen software
para la resolución de problemas muy concretos en los que centran su actividad. Las condiciones en las que se lleva a cabo esta labor no son las más
apropiadas para lograr el mejor rendimiento a partir del esfuerzo invertido.
En primer lugar, el software desarrollado se encuentra diseminado entre
los distintos grupos investigadores, de modo que existen equipos que trabajan en temáticas comunes y desconocen la existencia de aplicaciones ya
desarrolladas por otros colegas, herramientas que les permitirían contrastar
resultados o avanzar más rápidamente en ciertos detalles de sus estudios. La
33

34

Capítulo 2. El proyecto AstrodyTWeb
ools

consecuencia es la innecesaria multiplicidad de esfuerzos para el desarrollo
de herramientas ya existentes, o bien la falta de avance por carencia de las
mismas, siendo ambas alternativas igualmente negativas.
La multiplicidad de esfuerzos mencionada no sólo se refiere a los recursos humanos, sino también a los materiales. Es frecuente que los cálculos
habituales en determinados ámbitos científicos requieran ser llevados a cabo
en un entorno HPC (High Performance Computing), obligando a los equipos investigadores a invertir una buena parte de sus recursos económicos
en costosos servidores de cálculo. Un uso compartido de los mismos no sólo
permitiría optimizar las dotaciones económicas de los proyectos de investigación, sino que también liberaría a los usuarios de sus tareas de gestión y
mantenimiento.
Por otra parte, las herramientas informáticas desarrolladas por los diversos grupos científicos presentan ciertas características que dificultarían su
uso compartido. Por ejemplo, muchas de ellas fueron implementadas en lenguajes hoy obsoletos, de los que no existe ya soporte. Dado que la prioridad
suele ser la efectividad del software en la resolución del problema para el
que se diseña, frente a los aspectos formales, estas herramientas suelen estar
desarrolladas en un entorno de comandos, con rudimentarios procedimientos de entrada y salida de datos, sin capacidades gráficas para el análisis de
los resultados, y sin una documentación de los algoritmos y modos de utilización. En estas condiciones no resulta sencillo hacer uso de herramientas
distintas de las desarrolladas en el seno de cada equipo.
Los campos de la Mecánica Celeste y de la Astrodinámica son ejemplos
de ramas de la Ciencia en las que sucede cuanto se ha expuesto. Los cálculos
que se llevan a cabo en estas disciplinas, cuando se desean resultados muy
precisos, son extremadamente complejos y computacionalmente intensivos,
y no siempre están al alcance de quien los necesita.
En este contexto surge AstrodyTWeb
ools [130, 132], un proyecto web enfocado
a facilitar el acceso de investigadores y estudiantes a herramientas especializadas, a través de Internet, bien sea con fines investigadores o educativos.
La infraestructura web ha sido desplegada con los medios informáticos de la
Universidad de La Rioja. Si bien inicialmente se ha orientado hacia las áreas
de la Mecánica Celeste y de la Astrodinámica, cabe señalar que el modelo
de dicha infraestructura está siendo aplicado a otros campos de la Ciencia
[99], concretamente a la Bioinformática.
Este entorno permite alojar en un servicio web aplicaciones científicas
desarrolladas por distintos grupos de investigación, con mínimos cambios
sobre el código original, facilitando así el acceso por parte de investigadores y
estudiantes localizados en cualquier lugar del mundo, con el simple uso de un
navegador web, y sin importar la potencia de cálculo de su computador ni su
sistema operativo que éste use. La infraestructura oculta toda la complejidad
algorítmica de las aplicaciones al usuario, quien simplemente las percibe en

2.2. AstrodyTWeb
ools : proyecto colaborativo

35

términos de entradas y salidas.
La única condición que se requiere para que una aplicación pueda ser
alojada en AstrodyTWeb
ools es que sea ejecutada desde una entrada de comandos
UNIX, independientemente del lenguaje en el que haya sido programada.
Esta flexibilidad permite que puedan coexistir nuevas aplicaciones basadas en
sofisticados diseños orientados a objetos junto con herramientas programadas
en lenguajes que han quedado ya obsoletos.
El portal AstrodyTWeb
ools permite que los usuarios registrados seleccionen
cualquiera de las aplicaciones alojadas para ejecutarla a través de una interfaz web, en la que se introducen los datos necesarios, que posteriormente son
convertidos al formato específico requerido por la aplicación. A continuación,
el servidor de aplicaciones ejecuta los cálculos y guarda los resultados en ficheros. Posteriormente, estos resultados pueden ser procesados por otros módulos capaces de generar gráficos e informes, los cuales se integran finalmente en la página web, mostrándose al usuario. Adicionalmente, AstrodyTWeb
ools
también almacena todas estas salidas, haciendo posible su descarga a través
de un fichero comprimido.

2.2.

AstrodyTWeb
ools : proyecto colaborativo

El proyecto AstrodyTWeb
ools surge del interés por desarrollar una plataforma Open-Science [6] que proporcione acceso abierto a la investigación y al
conocimiento para promover así el trabajo colaborativo en las comunidades
científicas de la Mecánica Celeste y de la Astrodinámica. El doctorando y su
director constituyen el equipo de soporte que articula la colaboración entre
los autores de las aplicaciones y los usuarios registrados. Los servicios de
soporte prestados incluyen todas las operaciones necesarias para alojar las
aplicaciones en el entorno, así como los procesos de reingeniería cuando son
necesarios. Cabe señalar que el proyecto AstrodyTWeb
ools no modifica los derechos de propiedad intelectual de las distintas aplicaciones, que permanecen
en manos de sus propietarios originales, tan solo se cede su uso.
La figura 2.1 muestra los distintos roles y modos de colaboración del proyecto. La integración de una nueva aplicación es bastante directa, y sólo se
requiere de un ejecutable de la aplicación si ésta proviene de un lenguaje
compilado (C, C++, Fortran,...), o de un script o paquete de scripts procedentes de un lenguaje interpretado (Perl, Python,...). Todos ellos deben
poder ser ejecutados desde una shell UNIX. Inicialmente, en el proceso de
integración de una aplicación en el sistema se deben definir con precisión las
entradas y salidas. A partir de ellas, el equipo de soporte, en coordinación
con el desarrollador de la aplicación, lleva a cabo cualquier operación de reingeniería que pudiera ser necesaria, y diseña e implementa los componentes
web que permitan la introducción de los datos y la obtención de los resultados, gráficos e informes. Finalmente se comprueba y valida todo el proceso

36

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.1: Roles y modos de colaboración en el proyecto AstrodyTWeb
ools .
de integración. A partir de ese momento, la aplicación queda a disposición
de investigadores y estudiantes.
El servicio de reingeniería ofrece también la adaptación de las aplicaciones
obsoletas a los entornos de computación actuales cuando resulta posible. En
los casos en los que se estime conveniente, también se podrán llevar a cabo
otras modificaciones más profundas, como la paralelización del código para
su ejecución sobre arquitecturas GPU y multiprocesador [135].
Otro de los objetivos del proyecto es la creación de comunidades de usuarios de las aplicaciones alojadas en AstrodyTWeb
ools , de forma que puedan establecerse colaboraciones basadas en la interacción con los investigadores
responsables de las mismas. De este modo, los desarrolladores de las aplicaciones pueden aconsejar a los usuarios e intercambiar con ellos datos e
información, e incluso ofrecer la posibilidad de adaptar el código de sus programas si se desea dar respuesta a problemas concretos no contemplados
previamente en la aplicación.

2.3.

Arquitectura básica del sistema

La figura 2.2 muestra un esquema de la arquitectura básica de uso del
sistema, que incluye los componentes principales y su modo de interactuar.
El entorno se compone de un servidor web, un servidor de aplicaciones y
diversas herramientas software de código libre. Los usuarios registrados pueden utilizar tanto las aplicaciones disponibles como las herramientas software
de código libre, como por ejemplo Gnuplot, Octave, R, LATEX, etcétera. Se
trata de un diseño genérico, por lo que puede ser aplicado a otros campos
científicos.

2.3. Arquitectura básica del sistema

User interface

37

Web
Application server
ZERGOF
AOPP
DSST
…

End
user
Open source tools
GNUPLOT
OCTAVE
R
LATEX
…

Figura 2.2: Esquema de la arquitectura de AstrodyTWeb
ools .
El servidor web ha sido desarrollado utilizando Drupal [52, 114], un CMS
(Content Management System) que proporciona recursos avanzados para la
gestión de la seguridad, la conectividad con bases de datos, la gestión de
contenidos y los sistemas de menús. Drupal puede ser utilizado bajo los términos de la GNU Public License, y puede descargarse gratuitamente desde
http://drupal.org. Se trata de un CMS programado en el lenguaje de
propósito general PHP, que es desarrollado y mantenido por una activa comunidad de usuarios y desarrolladores de código abierto a nivel mundial.
El contenido de un portal web basado en Drupal, junto con sus configuraciones, se almacena en bases de datos y se presenta al usuario en un
front-end mediante la construcción dinámica de cada página.
Merece la pena destacar la notable popularidad de Drupal, derivada entre
otros factores de su flexibilidad y capacidad de adaptación. Existen miles de
módulos adicionales que permiten que un desarrollador de contenidos pueda
integrar la funcionalidad deseada para su web.
Actualmente, Drupal es uno de los CMS más profesionales, altamente valorado por la calidad de su codificación, de fácil configuración e instalación y,
como se ha mencionado, con incontables funcionalidades, módulos, plugins y
temas con los que poder diseñar lo que se necesite. Es de valorar, igualmente, la completa documentación existente, así como el soporte ofrecido por la
comunidad.
Es interesante destacar que Drupal dispone de su propio equipo de seguridad1 , así como una sección2 encargada de informar a la comunidad de Drupal
acerca de las vulnerabilidades descubiertas, así como de las actualizaciones
recomendadas [50].
Las webs de instituciones o empresas tan representativas como el Go1
2

http://drupal.org/security-team
http://drupal.org/security

38

Capítulo 2. El proyecto AstrodyTWeb
ools

bierno de Bélgica, MTV, Discovery Magazine, Warner Brothers, New York
Observer, The Economist, Examiner.com, o The White House están basadas
en Drupal, de ahí que se haya optado por este CMS para la realización de
este proyecto.
Haciendo uso de este framework se ha implementado un servicio que
proporciona una interfaz web para cada una de las aplicaciones integradas
en AstrodyTWeb
ools . Cada interfaz es capaz de recibir las solicitudes y enviarlas para su procesamiento al servidor de aplicaciones, el cual las procesa
y devuelve los resultados, incluyendo un post-procesado e interpretación a
través de otros componentes software. Por ejemplo, se utiliza Gnuplot [61]
para la representación gráfica y visualización de los datos, Octave [60] para
los cómputos numéricos, R [148] para los cálculos estadísticos, LATEX [87]
para el procesado de los textos y la generación de informes, así como otras
aplicaciones cuyas salidas también se integran en la página web resultante.
Finalmente, las gráficas, los informes en formato pdf y otros resultados de
cada cálculo pueden ser descargados por cada usuario en un archivo comprimido.

2.4.

Aplicaciones integradas en AstrodyTWeb
ools

Actualmente hay cuatro aplicaciones disponibles en AstrodyTWeb
ools (http:
//tastrody.unirioja.es), a las cuales tiene acceso cualquier usuario registrado. Estas aplicaciones pueden ser utilizadas en modo individual o combinado; por ejemplo, los propagadores de la suite OPP o el propagador semianalítico DSST pueden combinarse con ZERGOF para estudiar la evolución
a largo plazo de las órbitas que repiten la traza. A continuación se describen
las aplicaciones integradas en AstrodyTWeb
ools .

2.4.1.

Orbit Propagator Programs

Orbit Propagator Programs (OPP) es una suite que incluye doce propagadores orbitales analíticos que permiten calcular la posición y velocidad
de un orbitador en cualquier instante, mediante una función del tiempo, a
partir de su posición y velocidad en un instante inicial [126, 128]. Sus modelos implementan una aproximación analítica mediante transformaciones
de Lie y métodos clásicos de promedios. La suite de propagadores ha sido
generada por medio de MathATESAT [133]. OPP, que ha sido desarrollada
en C/C++, no ha requerido de ningún proceso de reingeniería para ser integrada en el proyecto AstrodyTWeb
ools . Como puede verse en la figura 2.3, los
doce propagadores se muestran ordenados en función del tipo de coeficientes,
zonales o teserales, del número de coeficientes considerados, y finalmente del
orden de la aproximación analítica utilizada.
Cada modelo implementa una aproximación analítica a la solución del

2.4. Aplicaciones integradas en AstrodyTWeb
ools

39

Figura 2.3: Suite OPP alojada en AstrodyTWeb
ools .
sistema de ecuaciones diferenciales
ẍ = −∇x V,
donde V es el campo de gravedad del planeta y se expresa mediante el desarrollo en serie

X  α n
µ
Jn Pn (sen β)
V = − 1 +
r
r
n≥2

X  α n X
+
(Cn m cos mλ + Sn m sin mλ)Pn m (cos β) ,
r
n≥2

1≤m≤n

donde los parámetros Jn , Cn m y Sn m describen la forma del planeta.
La figura 2.4 muestra la interfaz web que permite operar sobre cada uno
de los propagadores incluidos en OPP.

40

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.4: Interfaz web de la suite OPP.

En la figura 2.5 se muestra la aplicación del modelo ppkbj2or3 a un satélite de tipo Quasi-Spot. El usuario introduce los datos solicitados en los
campos de entrada del formulario y selecciona el modelo que quiere aplicar.
La solución es facilitada al usuario una vez finaliza la propagación.

Figura 2.5: Ejecución del modelo ppkbj2or3 de la suite OPP para un satélite
de tipo Quasi-Spot.

2.4. Aplicaciones integradas en AstrodyTWeb
ools

41

La figura 2.6 muestra los resultados, así como una serie de enlaces que
permiten visualizar gráficamente, por un lado, los resultados obtenidos (figuras 2.7, 2.8, 2.9 y 2.10), y por otro, el error cometido por la aproximación
analítica al compararla con la integración numérica del problema original
(figuras 2.11 y 2.12). Al final de la interfaz web, el usuario dispone de un
enlace para la descarga de todos los resultados, tanto las efemérides como
los gráficos.

Figura 2.6: Resultado de la ejecución del modelo ppkbj2or3 de la suite OPP
para un satélite de tipo Quasi-Spot.

42

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.7: Traza de la órbita para un satélite de tipo Quasi-Spot.

Figura 2.8: Test de la energía para un satélite de tipo Quasi-Spot.

Figura 2.9: Evolución del semieje mayor para un satélite de tipo Quasi-Spot.

Figura 2.10: Evolución de los términos de largo periodo (e cos g, e sen g) para
un satélite de tipo Quasi-Spot.

2.4. Aplicaciones integradas en AstrodyTWeb
ools

43

Figura 2.11: Error del semiejemayor (km) para un satélite de tipo QuasiSpot.

Figura 2.12: Error de posición (km) para un satélite de tipo Quasi-Spot.

2.4.2.

Zonal Earth Repeating Ground-track Orbit Finder

Zonal Earth Repeating Ground-track Orbit Finder (ZERGOF) [82] es
un programa creado por el Dr. Martín Lara para ayudar a los diseñadores
de misión de satélites artificiales en la búsqueda automática de órbitas que
repiten la traza en el caso de planetas similares a la Tierra, en una determinada proporción fijada por el usuario entre el número de revoluciones del
satélite en su órbita y el número de periodos nodales. Este tipo de órbitas se
caracterizan por mantener la excentricidad y el argumento del perigeo casi
constantes, o congelados, y son muy convenientes como órbitas nominales
para ciertas misiones de satélites artificiales.
Este tipo de órbitas se clasifican en:
1. Cuasi-circulares, con inclinación seleccionada por el usuario.
2. En las proximidades de la inclinación crítica, con excentricidad seleccionada por el usuario.
3. Heliosíncronas, bien cuasi-circulares, bien en las proximidades de la
inclinación crítica.
El modelo de fuerzas utilizado por ZERGOF considera un modelo zonal
de potencial gravitatorio:

Capítulo 2. El proyecto AstrodyTWeb
ools

44


µ
V = − 1 +
r


X  α n
n≥2

r

Jn Pn (sen β) .

El sistema dinámico se formula en un sistema de referencia inercial, en
el que el problema es biparamétrico: la energía determina el tamaño (y periodo) de la órbita, mientras que la componente polar del vector momento
angular está relacionada con su inclinación. En el caso de la inclinación crítica, las variaciones en la componente polar del vector momento angular van
asociadas a variaciones en la excentricidad con la inclinación fija.
La búsqueda de la órbita deseada comienza con el cálculo de una solución
aproximada empleando técnicas analíticas. Posteriormente se refina mediante
técnicas numéricas de continuación de familias de órbitas periódicas.
En la figura 2.13, ZERGOF busca las condiciones iniciales de una órbita cuasi-circular, con una inclinación de 54◦ , que repite la traza cada tres
periodos nodales.

Figura 2.13: Ejecución de ZERGOF para una órbita cuasi-circular.
En la figura 2.14 se recoge el resultado de la ejecución del programa.

2.4. Aplicaciones integradas en AstrodyTWeb
ools

45

Se obtiene información sobre la convergencia del método numérico, y si es
posible encontrar unas condiciones iniciales que cumplan las especificaciones
solicitadas.

Figura 2.14: Resultado de la ejecución de ZERGOF para una órbita cuasicircular.

Como se puede observar en la figura 2.15, junto a la solución se incorpora
un enlace que permite la representación gráfica de la órbita calculada, así
como de la evolución de los términos de largo periodo (e sen g, e cos g), como
se muestra en la figura 2.16.
El código original de esta aplicación fue escrito en Fortran 77 por el Dr.
Martín Lara, si bien el código integrado en AstrodyTWeb
ools es una reimplementación en C que ha sido realizada por el equipo de soporte de AstrodyTWeb
ools .

46

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.15: ZERGOF: traza de una órbita cuasi-circular.

Figura 2.16: ZERGOF: evolución de los términos de largo periodo
(e cos g, e sen g) para una órbita cuasi-circular.

2.4.3.

Repeating Ground-track Orbit Finder

Repeating Ground-track Orbit Finder [83] es otro paquete software creado por el Dr Martín Lara para facilitar a los diseñadores de misión de satélites
artificiales la búsqueda de órbitas que repiten la traza, u órbitas congeladas,
en el caso de un satélite planetario. La búsqueda de la órbita comienza mediante la obtención de una solución aproximada mediante técnicas analíticas.
Seguidamente, el usuario selecciona las características de la órbita, y la solución se refina mediante métodos de continuación numérica. Esta aplicación
también fue desarrollada en Fortran 77, y no cuenta con interfaz gráfica de
usuario, por lo que no ha necesitado ningún proceso de reingeniería para
poder ser integrada en el proyecto AstrodyTWeb
ools .

2.4. Aplicaciones integradas en AstrodyTWeb
ools

2.4.4.
2.4.4.1.

47

DSST
Antecedentes

La Draper Semianalytical Satellite Theory (DSST) [21, 101] es un propagador de órbitas semianalítico desarrollado por P. Cefola, W. McClain,
L. Early, R. Proulx, M. Slutsky y otros colegas, inicialmente en Computer Sciences Corporation (CSC), y más tarde en el Charles Stark Draper
Laboratory (CSDL), a finales de los años 70 y principios de los 80. Durante la etapa en el CSDL, DSST fue mejorado mediante las aportaciones de
estudiantes graduados en el Massachusetts Institute of Technology, bajo la
dirección del personal del CSDL. La teoría semianalítica de DSST utiliza
una estrategia de parámetros medios no singulares, que ofrece significativas
mejoras tanto en la velocidad de cómputo frente a los enfoques puramente
numéricos, como en la precisión frente a las aproximaciones de tipo analítico.
Se han desarrollado modelos de fuerzas muy completos para las ecuaciones
de movimiento en parámetros medios, así como para el movimiento de corto
periodo [56]. Esta teoría semianalítica ha sido ampliamente utilizada tanto
en propagación orbital a largo plazo para el análisis de misión, como para
el modelizado del movimiento orbital en procesos de determinación orbital
[55]. En la actualidad, el código fuente de DSST es mantenido por Z. Folcik
y P. Cefola. En [21] se muestra con mayor detalle la evolución histórica de
DSST.
Existen dos versiones de DSST: una de ellas está incluida como opción
en el Goddard Trajectory Determination System (GTDS), mientras que la
otra, DSST Standalone, constituye una herramienta individual de propagación de órbitas. Ambas versiones están en continua evolución y actualización,
lo cual permite a DSST tener en cuenta una amplia variedad de perturbaciones, que pueden ser seleccionadas a través de un sistema de opciones no
trivial en tiempo de ejecución. De este modo, DSST constituye una potente
herramienta tanto para la determinación orbital precisa a corto plazo como
para la evolución a largo plazo.
DSST es la primera de una serie de aplicaciones que han sido incluidas en
la Open Source Software Suite for Space Situational Awareness (SSA) and
Space Object Catalog Work, propuesta en [22]. En este documento se plantean dos grandes retos: el problema de adaptar viejas aplicaciones utilizadas
en SSA a los entornos actuales de computación, y la necesidad de incluir técnicas analíticas entre las herramientas destinadas a SSA. Cabe destacar que
la adaptación de aplicaciones informáticas complejas del campo científico a
los entornos actuales de computación puede requerir de múltiples procesos
de reingeniería, como por ejemplo el encapsulado no invasivo de las aplicaciones obsoletas, la migración a plataformas de programación con tecnología
orientada a objetos, como Java y C++, o la creación de aplicaciones Web
2.0 para las funciones SSA.

Capítulo 2. El proyecto AstrodyTWeb
ools

48

DSST Standalone, programado en Fortran 77 para ser ejecutado mediante comandos, fue integrado en un prototipo inicial de AstrodyTWeb
ools en 2011
[132]. De este modo, se le dotó de una interfaz web amigable que contribuyó
a simplificar su modo de uso tanto para usuarios expertos como no expertos,
y marcó el camino para hacer DSST más accesible a las comunidades que
trabajan en dinámica de vuelo espacial. En [91, 131] se describe el prototipo
inicial de AstrodyTWeb
ools , que fue la base para la integración de DSST. A su
vez, ese mismo año el equipo de OREKIT (Orbit Extrapolation Kit) llevaba
a cabo una implementación de DSST en Java [24, 23, 107]. En nuestro caso,
la integración de DSST en este proyecto no ha sido complicada, aunque ha
requerido de un estudio intensivo de la aplicación, así como de sus entradas
y salidas, para poder enmascarar su complejidad inherente y facilitar su uso.
Tanto la aplicación web para DSST como la migración de DSST a una
plataforma software moderna orientada a objetos fueron reconocidas como
demostraciones tecnológicas en Open Source Software for Space Situational
Awareness (OS4A) en [22]. Asimismo, Vallado [150] recoge la integración de
DSST en el proyecto AstrodyTWeb
ools , a través de http://tastrody.unirioja.
es, en las páginas 699 y 1060 de su obra de referencia para la comunidad
espacial.
2.4.4.2.

DSST Standalone

DSST Standalone se basa en una teoría semianalítica formulada en elementos equinocciales no singulares, que permite desacoplar los efectos de
largo y corto periodo mediante la teoría de perturbaciones, y por tanto manejarlos por separado. De este modo, se aúna la precisión de las teorías
especiales de perturbaciones con la eficiencia de las teorías generales de perturbaciones.
La teoría semianalítica reemplaza las ecuaciones convencionales del movimiento por dos grupos de fórmulas [21, 95]: las ecuaciones del movimiento
en elementos medios
N

dāi X j
=
ε Ai,j (āi ) + O(εN +1 ),
dt

(i = 1, . . . , 5)

j=1

y las expresiones de las variaciones de corto periodo
ai = āi +

N
X

εj ηi,j (āi , λ̄) + O(εN +1 ),

(i = 1, . . . , 5).

j=1

Con ello se logra poder utilizar un paso de integración del orden de una o dos
evaluaciones por día, mucho más largo y eficiente que el requerido por las
teorías especiales de perturbaciones. Además, el uso de elementos medios en
coordenadas equinocciales no singulares conlleva una evolución más lineal,

2.4. Aplicaciones integradas en AstrodyTWeb
ools

49

lo cual resulta ventajoso en procesos de determinación orbital basados en
la teoría semianalítica. La forma concreta de los parámetros equinocciales
utilizados en DSST se describe en [20], y constituye la opción (g) de [71]. La
teoría semianalítica incluye una completa estrategia de interpolación.
Tabla 2.1: Modelo de movimiento medio en DSST.
Perturbación

Ecuaciones del movimiento

Armónicos zonales
Segundo orden en J2
Armónicos teserales lm
(2 < l < 50, 1 ≤ m < 50)
Atracción del Sol y de la Luna

Términos lineales
Términos de segundo orden J22 e

Frenaje atmosférico

Presión de radiación solar
Efecto de marea

Términos lineales y resonantes
Términos lineales
Términos lineales y combinados
con J2 . Las variaciones son evaluadas
por cuadraturas (Harris-Priester,
Jacchia-Roberts, MSISE-90)
Términos lineales. Las variaciones
son evaluadas por cuadraturas
Número de Love

Tabla 2.2: Modelo de movimiento de corto periodo en DSST.
Perturbación

Ecuaciones del corto periodo

Armónicos zonales
Segundo orden en J2
Armónicos teserales lm
(2 < l < 50, 1 ≤ m < 50)
Atracción del Sol y de la Luna

Términos lineales
Términos de segundo orden J22 e

Frenaje atmosférico
Presión de radiación solar
Efecto de marea

Términos lineales
Términos lineales
Términos lineales. Los coeficientes
son evaluados por cuadraturas
Términos lineales. Las coeficientes
son evaluados por cuadraturas
No

Las tablas 2.1 y 2.2 recogen los modelos de fuerzas actualmente incluidos
en la teoría de DSST para las ecuaciones del movimiento medio y para las
variaciones de corto periodo, respectivamente. En ellas se hace referencia a
los modelos concretos, incluyendo descripciones de los algoritmos junto con

Capítulo 2. El proyecto AstrodyTWeb
ools

50

información acerca de su implementación. Tras el desarrollo original, Don
Danielson, Beny Neta y Leo Early publicaron un documento resumen de
DSST [39].
DSST Standalone es una aplicación programada en Fortran 77 que no
incorpora ningún tipo de interfaz gráfica de usuario3 y que se ejecuta, por
tanto, mediante comandos. Este modo de ejecución, que podría denominarse paradigma de caja negra, constituye, como ya se ha expuesto, un patrón
clásico en programación científica. La aplicación lee, por una parte, los ficheros que contienen el modelo físico, en los cuales se especifican las constantes
astrodinámicas, las efemérides solares/lunares/planetarias en coordenadas
J2000 o como datos verdaderos, los coeficientes de conversión del tiempo y
de movimiento polar, los modelos del geopotencial 50x50, los índices geomagnéticos planetarios cuasi-logarítmicos y las temperaturas mínimas exosféricas
nocturnas para el modelo de densidad atmosférica de Jacchia-Roberts. Por
otra parte, también se leen los ficheros con los datos de usuario, que contienen las condiciones iniciales del satélite y los parámetros de configuración
de DSST, así como los tiempos de salida deseados. Una vez almacenados en
memoria datos y constantes, DSST lleva a cabo los cálculos y las salidas se
guardan en dos ficheros. La figura 2.17 muestra el estricto formato Fortran
del fichero de datos de entrada a DSST denominado pmef.txt.

3

A mediados de los años 90, el Draper Laboratory desarrolló el Radarsat Flight Dynamics System (FDS) para la misión Radarsat 1 SAR. Este sistema accedía tanto a GTDS
como a DSST Standalone a través de una interfaz de usuario. El Radarsat FDS fue implementado en la estación de trabajo VAXstation 4000/90. El sistema proporcionaba
un entorno multiprocesador a través del uso de módulos (ejecutables) de tipo singleinput/single-output, con comunicación entre procesos implementada mediante buzones de
correo VAX/VMS e indicadores de eventos. Este sistema aún se utiliza en la actualidad,
ya que Radarsat 1 está en fase de prolongación de su misión. Posteriormente se extendió el diseño del sistema para ser aplicado a los requerimientos de gestión orbital de la
constelación de satélites Iridium, pero no llegó a implementarse en software.

2.4. Aplicaciones integradas en AstrodyTWeb
ools

51

C
C
PMEF FILE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
0.2012020700000000D+08 PME_DATE
1
0.0000000000000000D+06 PME_TIME
2
0.8000000000000000D+04 ELS_KEP(1)
3 ! 8000 Km
0.1000000000000000D+00 ELS_KEP(2)
4
0.6000000000000000D+02 ELS_KEP(3)
5
0.0000000000000000D+03 ELS_KEP(4)
6
0.0000000000000000D+03 ELS_KEP(5)
7
0.0000000000000000D+03 ELS_KEP(6)
8
0.0000000000000000D+00 ELS_EQUIN(1)
9
0.0000000000000000D+00 ELS_EQUIN(2)
10
0.0000000000000000D+00 ELS_EQUIN(3)
11
0.00000000000000000+00 ELS_EQUIN(4)
12
0.0000000000000000D+00 ELS_EQUIN(5)
13
0.0000000000000000D+00 ELS_EQUIN(6)
14
0.0000000000000000D+00 POSVEL(1)
15
0.0000000000000000D+00 POSVEL(2)
16
0.0000000000000000D+00 POSVEL(3)
17
0.0000000000000000D+00 POSVEL(4)
18
0.0000000000000000D+00 POSVEL(5)
19
0.0000000000000000D+00 POSVEL(6)
20
0.2000000000000000D+01 PME_CD
21
0.0000000000000000D+00 PME_RHO_ONE
22
0.5000000000000000D-04 SMA_SIGMA
27
0.5000000000000000D-04 INC_SIGMA
28
0.5000000000000000D-04 ASC_SIGMA
29
0.2100000000000000D+03 PME_SCMASS
30
0.4000000000000000D-03 PME_SCAREA
31
0.4320000000000000D+05 PME_STEPSIZE
34
0.1400000000000000D+02 DP_SPARE1
35
0.1130000000000000D+03 DP_SPARE2
36
0.0000000000000000D+00 DP_SPARE3
37
0.0000000000000000D+00 DP_SPARE4
38
0.0000000000000000D+00 DP_SPARE5
39
0.0000000000000000D+00 DP_SPARE6
40
1
PME_RETRO
41
12
PME_KEP_SYS
42
12
POS_VEL_SYS
43
1
GEN_METHOD
44
1
ATMOS_MODEL
45
840401
JACRB_DATE
46
123
JACRB_SSS
47
840401
SLP1950_DATE
48
456
SLP1950_SSS
49
840401
SLPTOD_DATE
50
789
SLPTOD_SSS
51
840401
TIMECF_DATE
52
123
TIMECF_SSS
53
2
HARRIS_MODEL
54
6
POTNTL_MODEL
55
30
PME_NMAX
56
0
PME_MMAX
57
1
PME_IZONAL
58
1
PME_IJ2J2
59 1=0n 2=0ff
0
PME_NMAXRS
60
0
PME_MMAXRS
61
3
PME_ITHIRD
62
2
PME_INDDRG
63 2 = DRAG OFF
2
PME_ISZAK
65 1 = on ,2 = off
2
PME_INDSOL
66 2 = SOLRAD OFF
2
PME_JSHPER
67
3
PME_JZONAL
68
3
PME_JMDALY
69
2
PME_INP_TYPE
70
12
PME_EQUI_SYS
71
12
INTEG_FRAME
72
12
OUTPUT_FRAME
73
0
PME_NSTATE
74
1
PME_SPSHPER
75
1
PME_KSPCF
76
4
PME_INDSET
77

Figura 2.17: Fichero pmef.txt.
La configuración de este fichero de datos de usuario no es nada trivial
para usuarios no expertos. Por esta razón, ciertas opciones de GTDS DSST

Capítulo 2. El proyecto AstrodyTWeb
ools

52

no están disponibles en la versión DSST Standalone.
2.4.4.3.

DSST Web

El proyecto AstrodyTWeb
ools mantiene DSST Standalone en su estado original, y lo conecta de forma dinámica al entorno web. El código permanece
como fue programado por sus autores y sólo ha sido necesaria la creación de
una interfaz web que simplifique la comunicación del usuario con la aplicación, que enmascare los detalles de complejidad en la implementación de la
misma, así como que relegue a un segundo plano el lenguaje de programación
en que fue desarrollada. La figura 2.18 muestra el proceso de encapsulado
desarrollado para integrar DSST.

Figura 2.18: Encapsulado de DSST en AstrodyTWeb
ools .
Se ha optado por el diseño e implementación de dos formas distintas de
uso de DSST Web.
La primera, dirigida quizás a usuarios no experimentados, ha sido la
creación de una interfaz web que, mediante formularios, permita de una
manera intuitiva y gráfica la introducción de toda la información que necesita
DSST para su ejecución. Parte de esta información es controlada a través de
la selección de opciones en combos desplegables en algunos casos; en otros
se ofrecen valores por defecto para algunos campos de texto, e igualmente
se informa al usuario del rango de valores permitidos. De este modo, se
guía al usuario en la selección y validación del modelo físico que se quiere
integrar, así como de las condiciones iniciales del satélite y tiempo de salida,
para proceder finalmente a su ejecución. Las figuras 2.19, 2.20, 2.21 y 2.22
muestran los citados formularios web.

2.4. Aplicaciones integradas en AstrodyTWeb
ools

53

Figura 2.19: Interfaz web del propagador semianalítico DSST (parte 1 de 3).

La segunda, dirigida a usuarios expertos, ha sido la creación de un nuevo
formato reducido del fichero de datos de entrada que requiere la aplicación.
Este nuevo fichero pmef, en formato csv (cuyos campos están separados por
“;”), resulta más amigable y fácil de usar y puede ser fácilmente creado con
cualquier procesador de texto plano. Se trata de hacer uso del lenguaje natural para la definición de todas las variables que constituyen el modelo a
integrar. Además, como puede apreciarse en la figura 2.23, se ha reducido el número de parámetros y su configuración respecto al fichero original
pmef.txt. La información que falta es calculada internamente a partir de los
datos contenidos en pmef.csv. De esta forma, un usuario experto podrá trabajar directamente en este nuevo formato, crear el fichero pmef.csv y subirlo
a través de la interfaz web, a falta únicamente de introducir en el correspon-

54

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.20: Interfaz web del propagador semianalítico DSST (parte 2 de 3).

diente formulario la información que describe las condiciones iniciales para
la ejecución del modelo.
Cuando el usuario utiliza la interfaz web de DSST y sube el fichero
pmef.csv, el sistema valida la información que contiene y rellena todos los
campos del formulario que hayan pasado la validación. Aquellos campos no
validados o no cumplimentados se resaltan al usuario para su cumplimentación manual. Una vez validada toda la información, se procede a la ejecución

2.4. Aplicaciones integradas en AstrodyTWeb
ools

55

Figura 2.21: Interfaz web del propagador semianalítico DSST (parte 3 de 3).

Figura 2.22: Página de ejecución de DSST Web.

del modelo en DSST (figura 2.22).

56

Capítulo 2. El proyecto AstrodyTWeb
ools

numVarPmef;NameVar;Value
1; Date; 20120207
2; Time; 000000.0000
3; Reference frame; True of reference (J2000)
4; Kep semimajor axis; 7200.25689
5; Kep eccentricity; 0.00124
6; Kep inclination; 11.6
7; Kep ascending node; 90.0
8; Kep argument of perigee; 100.0
9; Kep mean anomaly; 359.999
10; Potential models; Grace gravity model GGM01
11; Max degree of central body; 2
12; Max order of central body; 0
13; Max degree of resonance; 0
14; Max order of resonance; 0
15; Atmospheric density model; Harris-Priester
16; F10.7; 100
17; Drag coefficient; 0.2
18; Spacecraft mass; 2.1
19; Spacecraft area; 4.0
20; Iszak J2 height correction; Yes
21; Third body averaging; Off
22; Solar radiation pressure; Yes
23; Solid earth tide indicator; No tidal effects
24; Integration frame; True of reference (J2000)
25; Integration stepsize (secs); 45000.0
26; Integration central body zonal harmonic; Off
27; Integration J22 efect; Off
28; Short-periodic model; 12 Hour high eccentricity Molniya Orbit (moderate accuracy)
29; Output reference; Mean of J2000

Figura 2.23: Nuevo formato .csv del fichero de datos de usuario de DSST
Web.
Finalmente, se ha diseñado también un paso intermedio entre estas dos
formas de usar DSST Web. Para usuarios no del todo experimentados, o que
simplemente deseen ahorrar parte del tiempo que requieren las tres interfaces
que conforman el formulario de datos, se ha creado una plantilla en formato
Excel (figuras 2.24 y 2.25), descargable desde la página Web de la aplicación,
que resulta mucho más rápida de usar. Así, de manera interactiva, como si
de la Web se tratara, se va guiando al usuario para una correcta cumplimentación de los campos. Esta forma de uso puede resultar interesante, ya que
permite al usuario guardar en su equipo las distintas configuraciones creadas,
pudiendo reutilizarlas en otro momento y cambiar tan solo los parámetros
que desee. Una vez que se ha completado la plantilla en Excel, se debe guardar el documento en formato csv para poder subir después este fichero a la
interfaz de la aplicación DSST Web.

2.4. Aplicaciones integradas en AstrodyTWeb
ools

57

Figura 2.24: Plantilla Excel para la creación del fichero pmef.csv (1 de 2).

En cualquiera de los dos modos descritos, la información suministrada es
transformada para construir la entrada a la aplicación, que a continuación se
ejecuta y genera unos resultados (ficheros de texto y una serie de gráficos).
Cabe mencionar que DSST Web puede ejecutar simultáneamente varias instancias de DSST, como se puede apreciar en la figura 2.22, lo cual resulta
de gran utilidad en escenarios de vuelos en formación o en propagación de
catálogos espaciales.
Dos son los ficheros de salida generados por DSST: dsst.output y SPGOUT. El primero contiene los elementos keplerianos y equinocciales para el
instante final seleccionado por el usuario. El segundo es un fichero de texto
que alberga algunos de los parámetros del modelo de fuerzas utilizado durante la ejecución, así como algunas de sus salidas intermedias: elementos
promediados y parámetros de las derivadas parciales, junto con opciones del
modelo y coeficientes de Fourier de corto periodo.
Los resultados son post-procesados a través de herramientas de código
abierto; por ejemplo, se usa Gnuplot para el diseño de gráficos, LATEX para
la creación de informes en pdf, etcétera. El post-procesado se efectúa en la

58

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.25: Plantilla Excel para la creación del fichero pmef.csv (2 de 2).
misma interfaz web, y se crea un enlace que permite descargar todos los
resultados en un fichero zip (figura 2.26).

2.5. Ejemplos de utilización

59

Figura 2.26: Página de salida de resultados de DSST Web.

2.5.

Ejemplos de utilización

A continuación se describe el modo de utilización de dos de las aplicaciones disponibles, junto con algunos detalles de su integración en AstrodyTWeb
ools .

2.5.1.
2.5.1.1.

PPKBJ6 OPP
Algoritmo

PPKBJ6 [126, 128] es uno de los doce propagadores de la suite OPP de
AstrodyTWeb
ools . Se trata de una implementación en C de una teoría analítica de
segundo orden en forma cerrada, que proporciona la posición y velocidad de
un orbitador en cualquier instante, utilizando directamente una función del
tiempo junto con su posición y velocidad inicial. El principal objetivo de una
teoría analítica, en el caso del problema del satélite artificial, es la reducción
del problema original mediante teorías de perturbaciones, de tal modo que
el problema transformado resulte lo suficientemente simple como para que
pueda ser integrado. PPKBJ6, al igual que el modelo PPKBJ9 [134], se basa
en el formalismo Hamiltoniano y utiliza teorías de perturbaciones basadas

Capítulo 2. El proyecto AstrodyTWeb
ools

60

en transformaciones de Lie y el método de Krylov-Bogoliubov-Mitropolsky.
El Hamiltoniano para un satélite artificial perturbado por los cinco primeros coeficientes armónicos zonales del potencial gravitatorio terrestre viene
dado, en variables polares-nodales (r, θ, ν, R, Θ, N ), por
H=

1
2



R2 +

Θ2
r2

6


−

µ µ X  α n
Jn
Pn (sen β),
+
r
r
r

(2.1)

n≥2

donde Pn es el polinomio de Legendre de grado n, sen β = sen i sen θ, i es la
inclinación de la órbita del satélite, µ es la constante gravitacional, α es el
radio ecuatorial de la Tierra, y Jn son los coeficientes armónicos zonales.
El proceso de integración analítica comienza mediante la división de H
en distintas componentes, distribuidas de un modo concreto de acuerdo con
su orden de magnitud e importancia relativa, para, a continuación, aplicar
las teorías de perturbaciones. Los términos de largo periodo se eliminan mediante la combinación de dos transformaciones de Lie, la eliminación de la
paralaje [45] y la eliminación del perigeo [7], obteniéndose así un Hamiltoniano con un grado de libertad, que sólo depende de las variables (r, R).
Finalmente se integra el Hamiltoniano transformado mediante el método
de Krylov-Bogoliubov-Mitropolsky [13, 79]. Debe resaltarse que esta teoría
analítica ha sido desarrollada hasta segundo orden en forma cerrada de la
excentricidad, y es válida incluso para pequeños valores de excentricidad e
inclinación, aunque no para la inclinación crítica. El número de términos de
las expresiones matemáticas implicadas en este proceso ronda los 300 000.
A partir de esta teoría analítica se construye el propagador de órbitas
PPKBJ6. Este programa comienza con la lectura de dos ficheros ASCII de
entrada, que contienen los parámetros físicos y las condiciones iniciales (elementos keplerianos osculatrices) para el instante t0 . A continuación, se modifican las condiciones iniciales mediante las transformaciones inversas de las
eliminaciones de la paralaje y el perigeo. Seguidamente, PPKBJ6 proporciona los valores de las variables polares-nodales en el instante t mediante
la aplicación del método de Krylov-Bogoliubov-Mitropolsky. Por último, se
aplican las transformaciones directas de las eliminaciones del perigeo y la
paralaje, y se determinan los elementos keplerianos osculatrices y el vector
de estado, los cuales se almacenan en ficheros separados. Con el fin de comprobar la precisión de los resultados, se evalúa la energía y se comparan sus
valores con H(t0 ) en cada instante t. La figura 2.27 describe el proceso de
evaluación del propagador PPKBJ6.

2.5. Ejemplos de utilización

61


 (a0 , e0 , g0 , ν0 , i0 , l0 )
o
Entrada : µ, α, ω, J2 , . . . , J6 , t0 , tf , ∆t,

(x0 , y0 , z0 , x˙0 , y˙0 , z˙0 )
↓
(t0 , r0 , θ0 , ν0 , R0 , Θ0 , N0 )
↓ Transformaciones inversas: paralaje y perigeo
(t0 , r000 , θ000 , ν000 , R000 , Θ000 , N000 )
↓
for (t = t0 ; t ≤ tf ; t = t + ∆t) {
Integración: KBM → Salida : (t, r00 , θ00 , ν 00 , R00 , Θ00 , N 00 )
}
↓ Transformaciones directas: perigeo y paralaje
(t, r, θ, ν, R, Θ, N ) → Salida : (t, a, e, g, ν, i, l)
(t, x, y, z, ẋ, ẏ, ż)
Test de la energía: kH(t0 ) − H(t)k

Figura 2.27: Proceso de evaluación del propagador PPKBJ6.
2.5.1.2.

Modo de utilización

La interfaz de OPP consiste en un formulario web a través del cual se
introducen los parámetros de entrada y se selecciona uno de los propagadores
de la suite OPP disponibles. La tabla 2.3 muestra los símbolos, unidades y
rangos válidos para las distintas variables consideradas por todos los OPPs,
no obstante, la propia interfaz web comprueba las entradas e informa al
usuario en caso de que los valores introducidos no sean válidos. Hasta el
momento, los parámetros físicos y el modelo de geopotencial no se han hecho
accesibles al usuario; el valor tomado para la constante gravitacional µ es
398 600.47 km3 s−2 , el radio ecuatorial de la Tierra α es 6 378.137 km, y el
modelo de geopotencial empleado es el EGM96 [88].
Como ya se ha comentado, se pueden combinar diferentes aplicaciones
que aparecen en AstrodyTWeb
ools . Así, en este ejemplo (figura 2.28), el usuario
introduce a través del formulario web las condiciones iniciales de una órbita
sun-synchronous cuasi-circular, que ha sido calculada mediante ZERGOF
(a = 7 266.466 km, e = 0.00114, i = 99.0028◦ , ω = 90◦ ) en el instante t0 ,
y establece su propagación durante un periodo de un día. A continuación,
solicita la ejecución del propagador PPKBJ6 mediante la pulsación del botón
Execute.
La aplicación genera entonces, a partir de los datos recopilados en el for-

Capítulo 2. El proyecto AstrodyTWeb
ools

62

Tabla 2.3: Parámetros de entrada a cualquiera de los OPPs.
Símbolo
a
e
ω
Ω
i
ν
t0
tf
∆t

Elemento

Unidad

Rango

Semieje mayor
Excentricidad
Argumento del perigeo
Argumento del nodo
Inclinación
Anomalía media
Tiempo inicial
Tiempo final
Paso

Kilómetro
–
Grado
Grado
Grado
Grado
Segundo
Segundo
Segundo

a>α
0<e<1
0◦ ≤ ω < 360◦
0◦ ≤ Ω < 360◦
0◦ ≤ i < 180◦
0◦ ≤ M < 360◦
t0 ≥ 0
tf > t0
∆t ≤ tf − t0

Figura 2.28: Ejemplo de cómo se muestra OPP tras introducir los datos.
mulario web, el input necesario para que el servidor de aplicaciones ejecute
una instancia de PPKBJ6 y muestre los resultados al usuario. Como resultado de la ejecución se generan tres ficheros, que contienen los elementos
orbitales, las coordenadas cartesianas y el test de energía. Simultáneamente
se ejecuta otro programa en C para la integración numérica del problema
original, a efectos de validación del cálculo analítico realizado. El integrador
numérico utilizado corresponde a un método Runge-Kutta de orden elevado
[49].
Cuando la propagación requiere de un tiempo de cálculo prolongado, lo

2.5. Ejemplos de utilización

63

cual sucede cuando se seleccionan pasos pequeños, que implican un elevado
número de evaluaciones, el entorno permite al usuario dejar ejecutando el
proceso en segundo plano, de modo que pueda utilizar otras aplicaciones, o
incluso cerrar su sesión y acceder más tarde a los resultados a través de un
número de referencia.
Una vez han finalizado ambos cálculos, el analítico y el numérico para la
validación, se realiza un tratamiento de los resultados y se lleva a cabo un
estudio del error. Entre estos resultados se ofrecen los siguientes gráficos:
A partir de las salidas del propagador:
• Traza de la órbita.
• Test de energía.
• Elementos orbitales.
• Comportamiento de largo periodo (e sen g, e cos g).
A partir del estudio del error cuando el propagador es comparado con
la integración numérica del mismo problema:
• Errores en los elementos orbitales.
• Errores en distancia, tangencial (along-track), normal (cross-track)
y binormal (radial).
Finalmente, las salidas y gráficos son enviados al servidor web y mostrados al usuario, a la vez que se permite su descarga. La figura 2.29 muestra
la información proporcionada por PPKBJ6 a través de la interfaz web para
el caso de la órbita considerada. Como se puede comprobar, se facilitan en
la misma ventana los enlaces a los gráficos de datos y errores, junto con los
elementos orbitales generados por el OPP. Pulsando sobre el enlace Download results, el usuario puede descargar todas las salidas de la ejecución de
la aplicación.
Las condiciones iniciales empleadas en este ejemplo corresponden a una
órbita que casi repite la traza, como puede comprobarse en la figura 2.30, que
analiza el comportamiento de la evolución de los términos de largo periodo
mediante la representación de (e sen g, e cos g).

Capítulo 2. El proyecto AstrodyTWeb
ools

64

Figura 2.29: Ejemplo de salida para la órbita sun-synchronous cuasi-circular
calculada mediante ZERGOF (a = 7 266.466 km, e = 0.00114, i = 99.0028◦ ,
ω = 90◦ ).

Figura 2.30: Comportamiento de la evolución de los términos de largo periodo
obtenida a través del gráfico (e sen g, e cos g) para el caso de una órbita sunsynchronous cuasi-circular.

2.5.2.

DSST Web

En este apartado se utiliza una órbita GTO (Geosynchronous Transfer
Orbit) de baja inclinación con el fin de ilustrar las capacidades de DSST
Web.
Antes de comenzar con el ejemplo, conviene mencionar algunas peculiaridades de la órbita utilizada, cuyos elementos keplerianos medios se muestran
en la tabla 2.4. En primer lugar, el periodo es aproximadamente 12.5 horas,
por lo que deben tenerse en cuenta las resonancias, aunque no cabría esperar
una clásica resonancia profunda. En segundo lugar, debe considerarse como

2.5. Ejemplos de utilización

65

caso de elevada excentricidad. En tercer lugar, la inclinación es muy baja,
como podría suceder si el lugar de lanzamiento se encontrara cerca del Ecuador. En cuarto lugar, el nodo ascendente está prácticamente alineado con el
eje x del sistema de referencia J2000. Por último, el perigeo queda cerca del
plano ecuatorial.
Tabla 2.4: Elementos keplerianos medios.
Dato

Valor

Semieje mayor
Excentricidad
Inclinación
Argumento del perigeo
Argumento del nodo
Anomalía media
Sistema de coordenadas
Época

27350.08190032765 km
0.5236949314607066
5.999758529224882◦
177.9874079699957◦
1.505656591611563◦
162.1064920392727◦
J2000
21 de junio de 2011, 22:03:00.0

Figura 2.31: Condiciones iniciales en DSST Web para el caso de una órbita
GTO (parte 1 de 3).

66

Capítulo 2. El proyecto AstrodyTWeb
ools

El modelo de fuerzas considerado en DSST incluye los ármonicos zonales
hasta el orden 15, términos teserales resonantes, el efecto de J22 y el producido
por el Sol y la Luna. Las figuras 2.31, 2.32 y 2.33 muestran la introducción
de los datos del ejemplo mencionado.

Figura 2.32: Condiciones iniciales en DSST Web para el caso de una órbita
GTO (parte 2 de 3).
La figura 2.34 muestra los resultados obtenidos por la aplicación DSST
web. La figura 2.35 muestra la evolución temporal de la excentricidad, inclinación y argumento del perigeo durante un horizonte temporal de 20 años
calculados mediante DSST Web.

2.5. Ejemplos de utilización

67

Figura 2.33: Condiciones iniciales en DSST Web para el caso de una órbita
GTO (parte 3 de 3).

68

Capítulo 2. El proyecto AstrodyTWeb
ools

Figura 2.34: Resultado de la ejecución de DSST Web para el caso de una
órbita GTO.

2.5. Ejemplos de utilización

69

(a) e.

(b) i.

(c) ω.

Figura 2.35: Evolución temporal de la excentricidad, inclinación y argumento
del perigeo en DSST Web.

Antes pensábamos que nuestro futuro
estaba en las estrellas. Ahora
sabemos que está en nuestros genes.

JAMES WATSON

Capítulo 3

De las estrellas al conocimiento
del genoma humano
Resumen
En general, la decodificación del mapa genético del hombre es un hito
comparable a la llegada del hombre a la Luna o al hallazgo de la energía
atómica. El objetivo de este capítulo es poder mostrar cómo la aplicación del
modelo AstrodyTWeb
ools al campo de la Bioinformática no sólo ha sido posible,
de hecho existen numerosos ejemplos de uso de aplicaciones bioinformáticas
como servicios Web, sino que se ha convertido en un proyecto totalmente
diferenciador respecto de lo ya existente en este campo.

3.1.

Introducción

El genoma humano está constituido por el conjunto de todos los cromosomas presentes en el cuerpo humano, esto es, todo su DNA (ácido desoxirribonucleico), que integra los genes que contienen la información para la
elaboración de las proteínas que el organismo requiere, las cuales determinan
el aspecto físico, el funcionamiento de los órganos, el metabolismo, así como
la resistencia a infecciones y otras enfermedades.
En otras palabras, es el código que hace que seamos como somos. Un gen
es la unidad física y funcional de la herencia. Es una secuencia de nucleótidos ordenada y ubicada en una posición especial de un cromosoma. Un gen
contiene el código específico de un producto funcional.
Muchas de las enfermedades tienen una componente genética, tanto las
hereditarias como las resultantes de las respuestas corporales al medio ambiente, de ahí la importancia de conocer el genoma al completo.
El Proyecto Genoma Humano ha sido una investigación internacional
que ha buscado seleccionar un modelo de organismo humano por medio del
73

74

Capítulo 3. De las estrellas al conocimiento del genoma humano

mapeo genético de la secuencia de su DNA, localizando los genes en cada uno
de los veintitrés pares de cromosomas del ser humano. Se inició oficialmente
en 1990 como un programa de quince años con el que se pretendía identificar
los casi 40 000 genes que codifican la información necesaria para construir y
mantener la vida. Los rápidos avances tecnológicos han acelerado los tiempos
y ya se dispone de un mapeo del genoma casi completo. La información
contenida en los genes ha sido decodificada y permite a la Ciencia conocer,
mediante tests genéticos, qué enfermedades podría desarrollar una persona
a lo largo de su vida.
Durante los últimos años estamos asistiendo a un importante avance en el
conocimiento del genoma humano y su papel en la génesis y el desarrollo de
las enfermedades. Seremos capaces de mejorar nuestro conocimiento acerca
de los riesgos de sufrir enfermedades futuras en base al análisis del DNA.
Tras distintos intentos por descifrar su base genética, actualmente la investigación en este campo se centra, por un lado, en los estudios de asociación
de genoma completo (Genome-Wide Association Studies o GWAS [16]), que
permiten rastrear varios miles o millones de variaciones comunes del genoma
por individuo en forma de SNPs (polimorfismos de nucleótido único), indels,
etcétera, con el fin de establecer asociaciones entre estas variantes frecuentes
y fenotipos concretos, y por otro, en estudios de familias y ligamiento o, más
recientemente, la secuenciación genómica.
La secuenciación genómica identifica todas las variaciones presentes en
el genoma del individuo, permitiendo relacionarlas con posibles enfermedades sin necesidad de hipótesis previas o muestras amplias. El problema de
esta técnica ha sido el de sus limitaciones por coste y duración, lo que había restringido su uso a estudios aislados en los que se secuenciaban áreas
concretas y pequeñas del genoma. Ahora, el desarrollo de las técnicas de
secuenciación masiva paralela, o de nueva generación, establecen un salto
de varios órdenes de magnitud en cuanto a la longitud de los fragmentos
secuenciados, permitiendo la secuenciación del DNA a gran velocidad y con
un coste progresivamente menor [66, 98].
Como el coste actual de la secuenciación de un genoma humano completo
todavía es elevado, se han planteado estrategias para minimizarlo sin perder
eficiencia. Ng et al. [104] publicaron en 2009 el primer estudio en el que secuenciaban exclusivamente el exoma (parte codificante del genoma), unas 30
megabases (el 1 % del total del genoma), ya que la inmensa mayoría de las
mutaciones relacionadas con las enfermedades conocidas actualmente se encuentran en esta parte codificante. Este acercamiento supone un importante
ahorro de tiempo y, principalmente, de coste.
De forma simplificada, la secuenciación del exoma completo consiste en
identificar, seleccionar y enriquecer las secuencias que corresponden al exoma, desechando el resto del material genético, y después secuenciarlas con
las técnicas de segunda generación.

3.2. Bioinf oWeb
T ools : secuenciación masiva paralela

3.2.

75

Bioinf oWeb
T ools : secuenciación masiva paralela

Los proyectos para el estudio de genomas parten de una fase de secuenciación en la cual se generan, en el laboratorio, lo que podría denominarse
datos brutos, originados por un ultrasecuenciador, que son los datos sin analizar. Estos datos son secuencias de DNA o RNA. Estas moléculas poseen un
papel fundamental en todos los organismos, y se espera que el entendimiento
de este tipo de código se traduzca en una revolución en varias áreas como
la medicina, la biología y la agricultura, entre otras. El gran desafío de los
investigadores consiste en analizar estas secuencias y obtener información
biológicamente relevante. Estos análisis requieren del uso de diversas herramientas bioinformáticas, programas y grandes volúmenes de información
almacenada en bases de datos con las que comparar los resultados.
Es en este contexto en el que puede decirse que el modelo AstrodyTWeb
ools
ha sido aplicado con éxito, creándose Bioinf oWeb
T ools [93], un proyecto de colaboración entre el Grupo de Computación Científica (GRUCACI) y el Centro
de Investigación Biomédica de La Rioja (CIBIR). Este proyecto consiste en
la automatización de los servicios de análisis bioinformáticos que se llevan a
cabo en la plataforma de genómica del CIBIR. No se trata de un proyecto
cerrado sino que se continúan incorporando nuevos modelos de análisis y sus
variantes. Al automatizar sus procesos se consigue un ahorro en los tiempos
de ejecución del análisis, así como también se evitan los errores humanos en
la tediosa ejecución por consola tipo UNIX de cada una de las aplicaciones.
Dependiendo del análisis bioinformático que se realice (análisis mRNA,
RNA total, DNA exoma, etcétera) intervienen unas herramientas u otras
y el proceso varía. Manualmente puede ser largo e incluso no estar exento
de errores. Si a ello se une que el análisis se realiza para cada muestra,
para el caso de una plataforma como Illumina/Solexa, en la que se pueden
analizar hasta 96 muestras por canal para cada uno de los 8 canales, el
proceso puede ser bastante largo. Y, si además se tiene en cuenta que no
todas estas muestras tienen por qué requerir el mismo tipo de análisis, se
complica un poco más la labor del bioinformático a la hora de manejarlas,
teniendo que cambiar de protocolo de análisis en función de la muestra.
Bioinf oWeb
T ools consiste en un sistema web que permite, a partir de la información suministrada a través de una interfaz web, generar los scripts
necesarios para la ejecución interna de las aplicaciones asociadas a cada análisis. De este modo, un bioinformático sólo necesita intervenir al principio
del proceso, para facilitar los datos, y al final, para recoger los resultados.
Por otro lado, no sólo se trata de una aplicación que resulta muy útil para
la gestión de los centros que dispongan de un ultrasecuenciador, sino que,
como se publicará en breve, constituirá un servicio externalizado a disposición del investigador, en el que él mismo, sin necesidad de conocimientos
bioinformáticos, podrá llevar a cabo sus análisis (a partir de los datos en un

76

Capítulo 3. De las estrellas al conocimiento del genoma humano

formato internacional) y repetirlos tantas veces como desee.
Actualmente se pueden encontrar en Internet muchas plataformas especializadas en el área de Bioinformática que proveen, a través de sus páginas, servicios para el trabajo con secuencias. Se podrían destacar algunas bases de datos como la del Centro Nacional para Información Biotecnológica, NCBI (de sus siglas en inglés National Center for Biotechnology Information), disponible en http://www.ncbi.nlm.nih.gov/, Expasy
(de sus siglas en inglés, Expert Protein Analysis System), disponible en
http://expasy.org/), y la del Instituto Europeo de Bioinformática, EBI
(del inglés European Bioinformatics Institute) en http://www.ebi.ac.uk.
EMBOSS (http://emboss.sourceforge.net/), por ejemplo, contiene herramientas muy útiles para la edición de secuencias, tales como pasteseq,
que permite copiar una secuencia dentro de otra, extractseq o cutseq para extraer o eliminar regiones. Galaxy (https://galaxyproject.org/), por
ejemplo, es una colección de herramientas bioinformáticas destinadas a la
conversión y manipulación de datos moleculares, análisis estadísticos, análisis de datos de secuenciación de nueva generación, etcétera.
Existen muchas otras que han sido desarrolladas desde una perspectiva
meramente computacional, dada la necesidad principal de la implementación
de algoritmos para resolver problemas especificos normalmente ligados a métodos de análisis, donde la ingeniería de software ha tenido poca relevancia
[110].
Lo que diferencia a este proyecto es que, aunque existen portales web
que hacen uso de interfaces para ejecutar herramientas bioinformáticas, obviando la interfaz de comandos, son aplicaciones para ser usadas de manera
independiente. En ellas el usuario envía el fichero de datos y ejecuta una sola
aplicación, recoge los resultados y los vuelve a enviar para ser usados por
otra aplicación que puede estar alojada o no en el mismo portal web.
En Bioinf oWeb
T ools se realiza el análisis bioinformático completo para cada
muestra, ejecutándose de manera automática y totalmente transparente para el usuario. Para el caso de la interconexión con un ultrasecuenciador, se
llevan a cabo de manera automática todos los análisis de todas las muestras,
permitiendo un óptimo aprovechamiento de todos los recursos computacionales.
Por otro lado, al igual que en AstrodyTWeb
ools , las interfaces han sido diseñadas para que sean lo más cercanas posible al investigador, el cual no tiene
por qué conocer los términos en los que hay que comunicarse con cada aplicación, ya que muchas de ellas requieren de un alto grado de conocimientos
para su correcta ejecución.

3.3. Ejemplo de análisis bioinformático: análisis de DNA exoma

3.3.

77

Ejemplo de análisis bioinformático: análisis de
DNA exoma

Antes de comenzar a describir el protocolo de análisis bioinformático para
DNA exoma, se recoge brevemente el proceso previo:
1. Extracción del DNA mediante un kit comercial.
2. Comprobación de la pureza y concentración de la muestra. Se realiza entonces un análisis en un espectrofotómetro. Igualmente se lleva
a cabo una electroforesis, que debe reflejar un alto peso molecular,
indicativo de la calidad de la muestra.
3. Finalmente se prepara la muestra [98, 151] para su secuenciación con
los kits necesarios (figura 3.1), dependiendo del modelo de ultrasecuenciador y del tipo de análisis que vaya a realizarse. Una vez que el
ultrasecuenciador termina el proceso, que puede durar días o hasta una
semana, se obtienen unos ficheros denominados OLB con los cuales se
procede a realizar el tratamiento bioinformático.
En este momento comienza la fase de análisis bioinformático. Para ilustrar esta fase se muestra un ejemplo de un análisis de exoma humano, y se
citan brevemente las aplicaciones implicadas, su funcionalidad y el momento
en que son utilizadas.
De manera ilustrativa, la figura 3.2 recoge el proceso de análisis de exoma
que se describe a continuación:
1. El primer paso es la conversión de los ficheros de extensión .olb, procedentes del ultrasecuenciador, a un formato internacional que acepten
las herramientas bioinformáticas. En nuestro caso son transformados
a formato .fastq, aunque existen otros formatos también estándar como .fq, .sra, .fa, etcétera. El propio ultrasecuenciador incorpora rutinas
programadas en Perl para llevar a cabo esta conversión.
2. La calidad de los datos se puede comprobar con el programa FastQC
(http://www.bioinformatics.babraham.ac.uk/projects/), el cual
describe el tipo de archivo, codificación, número total de secuencias
procesadas, secuencias filtradas, longitud de las secuencias, porcentaje
de GC (áreas ricas de codificación), calidad de la secuencia por base,
distribución de la longitud de secuencias, etcétera.
3. La comprobación de la cobertura se realiza con el programa Bedtools (http://bedtools.readthdocs.org), y para representarla gráficamente se utilizan programas como el paquete estadístico R (http:
//cran.r-project.org/).

78

Capítulo 3. De las estrellas al conocimiento del genoma humano

Figura 3.1: Esquema del proceso de análisis de ultrasecuenciación.
4. El siguiente paso consiste en la alineación de las lecturas producidas por
el secuenciador contra un genoma de referencia para obtener la secuencia de DNA original. Existen varios algoritmos de alineación (MAQ,
BWA y Bowtie)1 . Para un ejemplo de análisis de exoma se suele utilizar el algoritmo BWA (Burrows-Wheeler Aligner ) implementado en
el programa BWA. El genoma de referencia se encuentra en la web del
UCSC Genome Browser (genome.ucsc.edu) y se indexa y compila con
la sentencia bwa index -a bwtsw -p hg38/hg38 hg38/hg38.fa en Linux.
5. El alineamiento con BWA genera un archivo en formato .sai. Este fichero debe ser convertido a formato .sam (Sequence Alignment/Map).
6. Utilizando el programa Picard (http://picard.sourceforge.net), se
1

MAQ (sourceforge.net/projects/maq), BWA (http://bio-bwa.sourceforge.
net/) y Bowtie(http://bowtie-bio.sourceforge.net/).

3.3. Ejemplo de análisis bioinformático: análisis de DNA exoma

79

Figura 3.2: Proceso de análisis de exoma.
transforma el .sam a un formato binario denominado .bam. Este formato se está convirtiendo en un estándar en los estudios de secuenciación,
siendo el más utilizado por la mayoría de las herramientas de análisis
bioinformático.
7. Seguidamente la herramienta MarkDuplicates del programa Picard localizará las secuencias duplicadas. Los ficheros resultantes .marked.bam
y metrics contienen todas las lecturas e identifican de qué tipo son (lecturas no alineadas –marcadas como unmapped –, lecturas duplicadas
–marcadas como duplicates– y lecturas non-PF –aquellas que no pasan el filtro de calidad– [89]).
8. Comienza ahora la identificación de todas las variaciones presentes en
cada exoma. Para ello se emplea la aplicación de software libre Genome
Analysis Tool Kit o GATK (desarrollado por el Broad Institute, Cambridge, http://www.broadinstitute.org/gatk/). El programa realiza un mapeo inicial utilizando la herramienta RealignerTargetCreator
para identificar regiones que requieren un re-alineamiento, normalmen-

80

Capítulo 3. De las estrellas al conocimiento del genoma humano
te debido a la presencia de indels que no existen en el genoma de referencia. El archivo resultante suele ser nombrado .bam.list.
9. Con el mismo GATK se utiliza seguidamente la herramienta IndelRealigner que permite realinear las lecturas alrededor de estos indels, lo
que minimiza el riesgo de falsos positivos al buscar después las variantes. Se generan así los ficheros .marked.realigned.bam.

10. Se utiliza más tarde TableRecalibration para recalibrar las puntuaciones asignadas por los secuenciadores. Se obtiene un fichero en formato
.csv que contiene la lista de variantes encontradas, la tabla de calidades cuantificadas, la tabla de recalibración por grupo de lectura y por
puntuación de calidad.
11. Las variaciones encontradas se extraen del archivo anterior utilizando
la herramienta Unified Genotyper. Para ello se utiliza un archivo de
referencia con el que se compara. Este fichero está disponible en las
bases de datos habituales (NCBI) y suele ser un dbSNP que varía según
la versión. En este momento está activa la versión 135 para humano.
Dará lugar, finalmente, a un archivo .vcf (Variant Call Format), que
muestra las variantes localizadas y la puntuación de calidad de cada
una de ellas. Se suele llevar a cabo una comparativa contra bases de
datos que codifican estas variantes como verdaderas o falsos positivos,
con el objetivo de permitir al investigador que identifique si la variación
encontrada obedece a una mutación auténtica o no es más que un
error de secuenciación o de procesamiento de los datos. Para afinar aún
más en este proceso se utilizan las herramientas VarianRecalibration y
ApplyRecalibration, y se obtiene un archivo snp.vcf.recalibrated donde
se muestra el score de las variantes encontradas y otras características
de interés.
12. Finalmente se realiza un filtrado de las variantes, eliminando lo que se
considera que son falsos positivos (posiblemente defectos de la técnica)
y obteniendo un archivo .vcf definitivo, que incluye las variantes de
interés junto con información de cada una de ellas.
Al comparar cada exoma individual con un genoma de referencia se encuentran entre 15 000 y 25 000 variaciones. Muchas de ellas son SNPs sin
significado patológico. Otras variaciones (SNPs no frecuentes, variaciones
estructurales, inserciones o delecciones) son de significado incierto. Determinar cuáles son las responsables de un fenotipo concreto representa una tarea
compleja.
Para facilitar la anotación de variantes se utiliza también el programa
ANNOVAR (http://www.openbioinformatics.org/annovar/). El archivo
resultante se puede leer en formato excel e incluye los siguientes datos, entre

3.3. Ejemplo de análisis bioinformático: análisis de DNA exoma

81

otros, de cada variación encontrada: localización de la variante en las diferentes partes del gen, función del exón, cambio de aminoácido, puntuación
de predicción de efecto de la variante en la función de la proteina que codifica, duplicaciones de segmentos, frecuencia en la que el alelo aparece en
la base de datos de los 1000 genomas, referencia dbSNP y puntuaciones de
predicción (según programas como PolyPhen y AVSIFT). Otros programas
de análisis de variantes pueden encontrarse en la plataforma KGGSeq [90].
En Bioinf oWeb
T ools se ha integrado también la herramienta ANNOVAR y se
ha perfeccionado un script que contempla otras bases de datos de referencia
más actualizadas, diseñando y generando un .csv adaptado a las necesidades
del usuario.
Para facilitar todavía más la tarea, normalmente el investigador sólo
necesita conocer las variantes encontradas en algunos genes relacionados con
una o varias enfermedades; es por ello que, a través de la interfaz web, se
le solicitan aquellos genes o enfermedades que pueden ser de su interés para
poder filtrar así la información contenida en el fichero .csv.
Para finalizar, se suele utilizar el programa IGV (Integrative Genomics
Viewer ) [121], que muestra de forma gráfica los datos obtenidos y permite
diferenciar con mayor facilidad las verdaderas variaciones frente a los artefactos. IGV también puede ser utilizado para la comparación entre varias
muestras.

3.3.1.

Protocolo de análisis de exoma

En este apartado se describe el protocolo completo para el análisis de
DNA exoma, incluyendo los comandos a ejecutar [62] para las distintas herramientas bioinformáticas.
Es importante resaltar que Bioinf oWeb
T ools verifica y valida las entradas y
salidas a lo largo de todo el proceso para asegurar que el resultado obtenido
cumple con los criterios de calidad de ejecución exigidos.
#Script para un analisis de exoma en una muestra de tipo
#paired-end en formato .fastq.
#1. Analisis de la calidad del fichero fastq.
#Programa FastQC
./fastqc
#Observar la cobertura con el programa bedtools.
PATH=~/Public/bedtools/bin:$PATH
./bedtools/bin/coverageBed -abam bedtools/file.bam -b
bedtools/exome.bed -d > bedtools/out.txt

#Cortar las columnas 3-7 y quitar los 3 primeros caracteres
(chr) del fichero out1.txt.

82

Capítulo 3. De las estrellas al conocimiento del genoma humano

cut -f 1-2,8 bedtools/out.txt > bedtools/out1.txt
cat bedtools/out1.txt | sed ’s/^...//’ > bedtools/out2.txt
#Seleccion de muestra de datos para graficos tipo Manhattan.
shuf bedtools/out2.txt > bedtools/out3.txt
head -n 40000 bedtools/out3.txt > bedtools/out4.txt
#2. Alinear con genoma de referencia.
#Abrir una Shell de Linux (.sh). Incluir en el path los distintos
#programas.
PATH=~/Public/gatk:$PATH
PATH=~/Public/picard:$PATH
PATH=~/Public/bwa:$PATH
PATH=~/Public/annovar:$PATH
#Compilar e indexar el genoma de referencia. Bajarlo de la web.
bwa index -a bwtsw -p hg38/hg38 hg38/hg38.fa
#Alinear el archivo .fastq con el genoma de referencia. Da como
#resultado un archivo .sai.
bwa aln -t 4 -f 1/1_R1.sai hg38/hg38 1/1_R1.fastq.gz
#Quitar -I si no es Illumina 1.3. 1/1.sai es la ruta y archivo
#de salida; 1/1_R1.fastq.gz el de entrada. Hacemos lo mismo
#con el segundo archivo (mate pair ends).
bwa aln -t 4 -f 1/1_R1.sai hg38/hg38 1/1_R1.fastq.gz
#Transformar los archivos .sai en un unico archivo .sam
bwa sampe -f 1/1.sam r"@RG\tID:1\tLB:1\tSM:1\tPL:ILLUMINA" hg38/hg38
1/1_R1.sai 1/1_R2.sai 1/1_R1.fastq.gz 1/1_R2.fastq.gz
#Transformar el archivo .sam en .bam. #java -Xmx16G -jar. es
#una orden que amplia la memoria RAM que puede utilizar java,
#haciendo que el programa pueda ir mas rapido. Se utiliza LENIENT
#para que reporte los errores y que el programa no se pare
#cuando los encuentre.
java -Xmx16G -jar picard/SortSam.jar \SO=coordinate
\INPUT=1/1.sam \OUTPUT=1/1.bam
\VALIDATION_STRINGENCY=LENIENT \CREATE_INDEX=true
#Marcar duplicados. Los archivos .marked.bam y metrics resultantes
#contienen todas las lecturas e identifican de que tipo son.
java -Xmx16G -jar picard/MarkDuplicates.jar \INPUT=1/1.bam
\OUTPUT=1/1.marked.bam \METRICS_FILE=1/metrics
\CREATE_INDEX=true \VALIDATION_STRINGENCY=LENIENT
#3. Localizacion de variantes.
#Se identifican regiones que requieren un re-alineamiento,
#habitualmente por presencia de indels que no existen en el genoma

3.3. Ejemplo de análisis bioinformático: análisis de DNA exoma

83

#de referencia. El archivo resultante lo denominamos .bam.list.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar \-T
RealignerTargetCreator \-R hg38/hg38.fa \-o 1/1.bam.list \I 1/1.marked.bam
#El programa re-alinea las lecturas alrededor de estos indels, lo
#que minimiza el riesgo de falsos positivos al buscar posteriormente
#variantes.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar \ -I
1/1.marked.bam \ -R hg38/hg38.fa \-T IndelRealigner \targetIntervals 1/1.bam.list \ -o 1/1.marked.realigned.bam
#Comprobacion de que la informacion esta sincronizada entre cada
#lectura y su pareada (mate pair ends).
java -Xmx16G -jar picard/FixMateInformation.jar
\INPUT=1/1.marked.realigned.bam
\OUTPUT=1/1.marked.realigned.fixed.bam \SO=coordinate
\VALIDATION_STRINGENCY=LENIENT \CREATE_INDEX=true
#Correccion de la calidad de las lecturas. Generacion de la tabla de
#covariantes. Recoge como comparador la base de datos de SNPs
#(dbSNP), la version 135, que es la compatible con el hg38.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar -I
1/1.marked.realigned.fixed.bam -R hg38/hg38.fa -T
CountCovariates -cov ReadGroupCovariate -cov
QualityScoreCovariate -cov CycleCovariate -cov DinucCovariate recalFile 1/1.recal_data.csv -knownSites:dbsnp,VCF
dbsnp144.hg38.vcf
#Correccion de la calidad de las lecturas. Recalibracion de las
#puntuaciones.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar \-l INFO \-R
hg38/hg38.fa \-I 1/1.marked.realigned.fixed.bam \-T
TableRecalibration \--out
1/1.marked.realigned.fixed.recal.bam \-recalFile
1/1.recal_data.csv
#Localizacion de las variaciones presentes en la muestra (SNPs e
#indels).
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar -glm BOTH -R
hg38/hg38.fa -T UnifiedGenotyper -I
1/1.marked.realigned.fixed.recal.bam -D dbsnp135.hg38.vcf -o
1/1.snps.vcf -metrics 1/snps.metrics -stand_call_conf 50.0 stand_emit_conf 10.0 -dcov 1000 \-A DepthOfCoverage -A
AlleleBalance -L exome.bed
#Recalibracion de la puntuacion de la calidad de las variantes.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar \-T
VariantRecalibrator \-R hg38/hg38.fa \-input 1/1.snps.vcf \resource:hapmap,known=false,training=true,truth=true,prior=15.0
hapmap.vcf \resource:omni,known=false,training=true,truth=false,prior=12.0
1000G_omni2.5.hg38.sites.vcf \-

84

Capítulo 3. De las estrellas al conocimiento del genoma humano

resource:dbsnp,known=true,training=false,truth=false,prior=8.0
dbsnp135.hg38.vcf \-an QD -an HaplotypeScore -an MQRankSum -an
ReadPosRankSum -an FS -an MQ \-recalFile 13/13M.recal \tranchesFile 13/13M.tranches \-rscriptFile 13/13M.plots.R \-maxGaussians 4 --percentBadVariants 0.05
#Se aplica la recalibracion.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar \-T
ApplyRecalibration \-R hg38/hg38.fa \-input 13/13.snps.vcf \-ts_filter_level 99.0 \-tranchesFile 1/1.tranches \-recalFile
1/1.recal \-o 1/1.snp.vcf.recalibrated
#Se filtran las variables encontradas segun los parametros
#seleccionados.
java -Xmx16G -jar gatk/GenomeAnalysisTK.jar \-R hg38/hg38.fa
\-T VariantFiltration \--variant 1/1.snp.vcf.recalibrated \-o
1/1.snp.recalibrated.filtered.vcf \--clusterWindowSize 10 \-filterExpression "MQ0 >= 4 && ((MQ0 / (1.0 * DP)) > 0.1)" \-filterName "HARD_TO_VALIDATE" \--filterExpression "DP < 5 " \-filterName "LowCoverage" \--filterExpression "QUAL < 30.0 " \-filterName "VeryLowQual" \--filterExpression "QUAL > 30.0 &&
QUAL < 50.0 " \--filterName "LowQual" \--filterExpression "QD <
1.5 " \--filterName "LowQD" \--filterExpression "SB > -10.0 " \-filterName "StrandBias"
#Abrir ANNOVAR y convertir el formato.
perl annovar/convert2annovar.pl --format vcf4 --includeinfo
1/1.snp.recalibrated.filtered.vcf > 1/1.snp.annovar
cd annovar
mkdir 1
cd ..
cp 1/1.snp.annovar annovar/1/
cd annovar
cd ..
#Incluye las puntuaciones de frecuencias en bases de datos.
./summarize_annovar.pl --buildver hg38 1/1.snp.annovar -verdbsnp 137 --ver1000g 1000g2012apr --veresp 6500 ./humandb outfile 1/1.snps -remove -alltranscript
#Para pasar de un formato delimitado por comas a un formato tabulado.
#Transforma en txt.
perl -pe ’while (s/(,"[^"]+),/\1<COMMA>/g) Difu; s/"//g;
s/,/\t/g; s/<COMMA>/,/g’ < 1/1.snps.exome_summary.csv >
1/1.exome_summary.txt

Las figuras 3.3 y 3.4 muestran las interfaces de creación/edición y la de
visualización para el tipo de análisis ejemplificado en este Capítulo.

3.4. Limitaciones en la secuenciación de exoma

85

Figura 3.3: Interfaz de creación/edición para un análisis de DNA exoma.

3.4.

Limitaciones en la secuenciación de exoma

Es deseo de este doctorando finalizar este Capítulo argumentando que la
secuenciación masiva no puede ser vista como la panacea. Para aplicar la secuenciación de exoma completo en la búsqueda de mutaciones potencialmente patógenas hay que aceptar como ciertas las asunciones que se describen
en [104]. En primer lugar, para encontrar una mutación, debe encontrarse
en áreas codificantes del genoma, es decir, si estuviera en una área intrónica
no sería posible encontrarla, ya que no la estaríamos secuenciando. Se sabe
que hay áreas reguladoras, cuyas mutaciones podrían estar relacionadas con
enfermedades, que se pueden encontrar a muchas kilobases de distancia del
gen, fuera de las áreas exómicas [10, 122]. Es más, hay que tener en cuenta
que los loci que constituyen el exoma no están completamente bien definidos.
Habitualmente se utilizaban para crear las bibliotecas todas las secuencias
incluidas en la base de datos CCDS (Consensus Coding Sequence). Posteriormente se comprobó que no era completa, y más recientemente se están
utilizando otras bases que incluyen más fragmentos, como RefSeq, Ensembl,

86

Capítulo 3. De las estrellas al conocimiento del genoma humano

Figura 3.4: Interfaz de visualización para un análisis de DNA exoma.

GENCODE o los genes de la UCSC browser [31, 54, 81, 120].
Otras limitaciones están relacionadas con las propias técnicas empleadas.
La captura de las áreas de interés, independientemente de la técnica que se
aplique, no es perfecta, quedando aproximadamente un 8 % de secuencias
exómicas sin capturar.
Algunas mutaciones, como las variaciones por número de tripletes, no se
identifican, y con otras, como las variaciones de número de copia, pueden
presentarse problemas [9, 144]. Por otro lado, la propia secuenciación puede
introducir errores de lectura, especialmente en áreas complicadas o de baja
cobertura, lo que podría dificultar el hallazgo de resultados.
Finalmente, también se pueden cometer errores debidos al elevado número de variantes encontradas, asignando la enfermedad a una variante no

3.4. Limitaciones en la secuenciación de exoma

87

causante, o filtrando en exceso y obviando la mutación causal.
Siendo conscientes de todo ello, las nuevas herramientas de estudio del
genoma (estudios de secuenciación de genoma completo, GWAS, modelos
animales, estudio directo del mRNA en los tejidos, estudios de expresión
de proteínas) van permitiendo ampliar el conocimiento sobre la compleja
regulación de la expresión de los genes, lo que permitirá en el futuro ser
capaces de utilizar la información genética de forma eficiente.

En el punto en el que se detiene la Ciencia
empieza la imaginación

HEYENDHAL

Capítulo 4

Resultados
En este capítulo se recogen los resultados más importantes alcanzados en
la presente Tesis Doctoral. Todos ellos están relacionados con la aplicación
de técnicas de computación científica al ámbito de la Mecánica Celeste y de
la Astrodinámica. Inicialmente se presentan dos propagadores de órbitas que
implementan la misma solución analítica del problema zonal del satélite artificial (artículo primero de esta Tesis Doctoral). Esta teoría analítica combina
técnicas de perturbaciones basadas en transformaciones de Lie junto con el
método generalizado de promedios. El primer propagador es completamente
analítico, mientras que el segundo calcula las transformaciones directa e inversa de forma numérica. A continuación se revisa el método que es utilizado
para la construcción de las transformaciones de Lie, el método de Lie-Deprit
(artículo segundo), el cual presenta una cierta arbitrariedad que, utilizada de
forma adecuada, permite mejorar los efectos derivados de la aplicación de las
nuevas transformaciones de Lie resultantes. Utilizando este método se reimplementa la eliminación de la paralaje y se extiende su efecto hasta eliminar
completamente el argumento de latitud, esto es, con una única transformación se obtiene el mismo efecto que el producido por la combinación de la
eliminación de la paralaje y la eliminación del perigeo (artículo tercero).
Estos dos propagadores, junto con otros de la suite OPP, han sido integrados en una interfaz gráfica web flexible, amigable al usuario y extensiWeb
ble, denominada AstrodyTWeb
ools (artículo cuarto). AstrodyT ools es, por tanto,
una plataforma basada en las herramientas derivadas de la investigación en
Mecánica Celeste y en Astrodinámica en las que el grupo de investigación
GRUCACI lleva años trabajando. Asimismo se han ido incorporando herramientas de otros investigadores de reconocido prestigio internacional, con lo
que se ha conseguido crear un nivel de abstracción que facilita la inclusión
de herramientas futuras y omite la tediosa ejecución y especificación de parámetros mediante línea de comandos en entornos UNIX. Este servicio web
cede el uso de las herramientas, de forma gratuita, a expertos y a la comunidad científica en general a través de Internet, con el objetivo de constituir
91

92

Capítulo 4. Resultados

un espacio abierto para compartir conocimientos y dar solución a problemas
de los ámbitos de la Mecánica Celeste y de la Astrodinámica.
Web
Junto a AstrodyTWeb
ools se ha presentado el proyecto Bioinf oT ools que,
aunque no es el objeto central de esta Tesis Doctoral, sirve de ejemplo para
comprobar cómo las técnicas de computación científica son llevadas a otro
campo, en este caso la Bioinformática, y concretamente al análisis bioinformático de secuencias biológicas. Se trata de un proyecto web basado en el
mismo modelo que AstrodyTWeb
ools , trasladado a una disciplina en la que las
técnicas cuantitativas de análisis son aplicadas al modelado de sistemas biológicos, concretamente a la generación masiva de datos de secuencias. A este
respecto se ha presentado la plataforma y uno de sus módulos de análisis
bioinformático, analizando las características particulares para uno de sus
sistemas de flujos de trabajo, el análisis de DNA exoma.

4.1.

PPKBZ9A,SA : dos propagadores analíticos

La teoría general de perturbaciones permite construir expresiones analíticas para calcular la posición y velocidad de un satélite o de un resto de
basura espacial en un instante tf a partir de su posición y velocidad en un
instante inicial t0 . PPKBZ9A,SA son dos propagadores de órbitas basados
en una teoría analítica en la que se combinan dos transformaciones de Lie,
la eliminación de la paralaje [45] y la eliminación del perigeo [7], y el método the Krylov-Bogoliubov-Mitropolsky [13, 79]. El primer propagador, A, es
completamente analítico, mientras que el segundo, SA, calcula las transformaciones directa e inversa de forma numérica.
La combinación de las dos transformaciones de Lie permite eliminar los
términos de largo periodo producidos por el argumento del perigeo, de tal forma que el Hamiltoniano transformado sólo depende de las variables (r00 , R00 ).
Este tipo de Hamiltoniano es conocido en la literatura como intermediario
radial. A continuación, mediante el cambio de la variable r00 y del tiempo por
la inversa de r00 y por la anomalía verdadera perturbada, respectivamente,
el nuevo Hamiltoniano se trasforma en la ecuación de un oscilador armónico perturbado. El método de Krylov-Bogoliubov-Mitropolsky es utilizado
entonces para integrar este Hamiltoniano. Esta teoría analítica es válida para excentricidades e inclinaciones pequeñas aunque no para la inclinación
crítica.
El método de Krylov-Bogoliubov-Mitropolsky ha sido ampliamente utilizado para resolver la ecuación ü + ω 2 u = F (u, u̇; ). En el ámbito de la
teoría del satélite artificial, este método fue aplicado por primera vez en [18]
al problema principal del satélite artificial, después de eliminar el argumento
de latitud utilizando el método de von Zeipel. Seguidamente, aplicando el
mismo procedimiento en [17], la teoría fue extendida a J3 y J4 . Más recientemente, utilizando ATESAT [1, 124, 125, 126], se ha desarrollado una teoría

4.1. PPKBZ9A,SA : dos propagadores analíticos

93

analítica de tercer orden en forma cerrada de la excentricidad, así como un
programa en FORTRAN para el cálculo de efemérides, según un modelo que
incluye los armónicos zonales desde J2 hasta J6 . Este propagador fue desarrollado por requerimiento del Centre National d’Études Spatiales (CNES)
para el caso de un orbitador alrededor de Marte [128].
En este trabajo [134] se amplía el modelo de perturbaciones al incluir los
armónicos zonales J7 , J8 y J9 , como en [30]. A continuación, se construye una
teoría analítica de segundo orden que elimina los términos de largo periodo
mediante las eliminaciones de la paralaje y del perigeo, mientras que integra
los términos de corto periodo utilizando el método de Krylov-BogoliubovMitropolsky. La teoría analítica ha sido desarrollada utilizando el entorno
simbólico-numérico llamado MathATESAT [133]. A partir de la teoría analítica se generan dos propagadores de órbitas y un conjunto de funciones en
Mathematica que permiten estudiar los términos de largo periodo de este
sistema dinámico. Para finalizar, en este trabajo se analiza la precisión de
ambos propagadores para los casos de la Tierra y de Marte.

4.1.1.

La ecuación generalizada de Kepler

La exactitud en la determinación de la posición y de la velocidad de
un satélite utilizando cualquiera de los propagadores orbitales de la familia
PPKB depende de la resolución precisa de la ecuación de Kepler [137].
En este trabajo, incluido en el Capítulo 1, se estudia la resolución de la
ecuación generalizada de Kepler utilizando tres de los métodos iterativos más
frecuentes en la resolución de la ecuación clásica de Kepler: los métodos de
Newton-Raphson, Halley y el propuesto por Danby y Burkardt. Las condiciones iniciales empleadas para inicializar estos métodos son S1 ≡ (E0 = M ),
S2 ≡ (E0 = M +((6M )1/3 −M )e2 si M < 0.1, y E0 = M +0.85e si M ≥ 0.1)
y S3 , que utiliza como valor inicial la propia solución de la ecuación de Kepler. La ecuación generalizada es función de la excentricidad, de las anomalías
media y excéntrica y, además, de un pequeño parámetro ε∗ , el cual depende
del semieje mayor de la órbita, de la inclinación y de los parámetros físicos
α y J2 . El signo del parámetro ε∗ depende de la inclinación, pudiendo ser
negativo, cero o positivo; para ε∗ = 0, la ecuación generalizada de Kepler se
reduce a la clásica.
Al analizar el número de iteraciones necesarias para lograr la convergencia, se comprueba que el comportamiento es similar para los casos de la
ecuación generalizada de Kepler y la clásica, tanto para los tres métodos iterativos como para las dos condiciones iniciales S1 y S2 (no tiene sentido hacer
comparaciones utilizando S3 , al tratarse de la propia solución de la ecuación
clásica), siempre y cuando la excentricidad permanezca por debajo de 0.9.
Para valores de excentricidad superiores a 0.9, con valores negativos del pequeño parámetro, aparecen regiones de no convergencia en todos los casos.
Ello es debido a que la solución de la ecuación generalizada no pertenece al

94

Capítulo 4. Resultados

intervalo [0, π] para excentricidades próximas a 1, condición que sí satisface
la ecuación clásica. La condición inicial que conduce a una convergencia más
rápida es S3 , que consigue reducir en una unidad, por término medio, el
número de iteraciones necesarias. Si, además, se utiliza el método de Danby
y Burkardt, se obtienen los mejores resultados, logrando la convergencia del
proceso en 2 ó 3 iteraciones en un 95 % de los casos.

4.2.

El método de Lie-Deprit revisado

Los métodos de perturbaciones constituyen una de las herramientas más
potentes para el estudio de los sistemas dinámicos. Estas técnicas son frecuentemente utilizadas en varios campos de la mecánica no lineal. El método
de promedios, el cual fue rigurosamente formulado en [79], y los métodos basados en transformaciones canónicas, tales como los métodos de von Zeipel
[59], Hori [72, 73] y Deprit [42], son algunos de los métodos derivados del
trabajo de Poincaré [119]. La demostración de la equivalencia de estos métodos [5, 97, 100, 143, 152] está basada en ciertas arbitrariedades relacionadas
con las ecuaciones promediadas. Sin embargo, estas arbitrariedades pueden
ser también aprovechadas durante el proceso de obtención de la función generatriz, para así lograr un nuevo sistema de ecuaciones diferenciales más
ventajoso [7, 78, 85, 86, 100].
En este trabajo [138] se revisa el método propuesto por Deprit para
construir una transformación de Lie, con el objetivo de identificar dónde
aparece esta arbitrariedad, cómo y bajo qué condiciones puede ser utilizada
y, finalmente, cuál es su relación con otros métodos de perturbaciones. Para
ello se reexamina el proceso desarrollado en este método cuando es aplicado
a un sistema Hamiltoniano de la forma
H = H0 (I1 ) +

X εn
n≥1

n!

Hn (I, ϕ),

(4.1)

donde ε es un pequeño parámetro y ϕ = (ϕ1 , . . . , ϕm ) e I = (I1 , . . . , Im )
son las variables de ángulo-acción. En este trabajo se asume que la parte no
perturbada de la ecuación (4.1) se puede expresar como H0 = ωI1 , que es lo
que Arnol’d caracteriza como degeneración propia [8], mientras que la parte
perturbada puede ser expresada como una serie trigonométrica en la forma

Hn =

X
j1 ,...,jm ∈Z

 
sen
Cj1 ,...,jm
(j1 ϕ1 + · · · + jm ϕm ),
cos

(4.2)

donde Cj1 ,...,jm son funciones de los parámetros físicos y de las acciones
I1 , . . . , Im . Es importante destacar que el sistema dinámico definido por un

4.3. Revisión de la eliminación de la paralaje

95

Hamiltoniano, cuya parte no perturbada H0 está formada por un número finito de osciladores armónicos, se puede expresar en la forma (4.1) por medio
de un cambio de variable [48]. Además, este tipo de Hamiltoniano aparece
frecuentemente en una amplia clase de problemas en Mecánica Celeste y en
Mecánica Clásica.
Para un Hamiltoniano de la forma (4.1), el método de Deprit permite
obtener el Hamiltoniano transformado y la función generatriz de la transformación de Lie, orden por orden, como la solución de una ecuación en
derivadas parciales. La solución de esta ecuación se obtiene eligiendo como
Hamiltoniano transformado una función del núcleo del operador de Lie asociado a H0 , y como función generatriz una función de la imagen del operador.
Esto es, el Hamiltoniano transformado no depende de la variable angular,
ϕ1 , y la función generatriz se obtiene a partir del cálculo de la inversa del
operador de Lie. Este proceso implica frecuentemente integración, es decir,
que una función Fn , que pertenece al núcleo del operador de Lie, puede ser
añadida a la función generatriz en cada orden. Usualmente estas funciones
se toman igual a cero. Sin embargo, para el caso Fn 6= 0, la función se puede
determinar del siguiente modo: si se considera en el mismo orden, el efecto
afecta directamente a la función Wn ; si, por el contrario, se pospone a un
orden superior, Fn se puede utilizar para obtener un Hamiltoniano transformado más simple que el que resulta cuando se considera Fn = 0. En este
último caso, bajo ciertas condiciones de degeneración, Fn se convierte en la
función generatriz de una nueva transformación, la cual puede ser utilizada
para eliminar otras variables angulares. Es importante destacar que el método llamado de la doble normalización [109, 111, 112] es el mismo algoritmo
de Lie-Deprit considerando Fn 6= 0.

4.3.

Revisión de la eliminación de la paralaje

En el trabajo anterior [138] se ha estudiado el efecto de la arbitrariedad
que introduce el método de Lie-Deprit, de modo que en este otro trabajo [139]
se ha podido utilizar esta extensión del método de Lie-Deprit para revisar
la eliminación de la paralaje [45] en el problema principal de la teoría del
satélite artificial. Las funciones del núcleo del operador de Lie asociado a H0
consideradas son de la forma Fn (C, S, Θ) y son calculadas en el orden n+1. El
efecto que produce esta versión extendida de la eliminación de la paralaje es
equivalente al producido por la eliminación de la latitud [18, 26, 27, 28, 46] o
al causado por los efectos combinados de la eliminación clásica de la paralaje
y la eliminación del perigeo [7].
Se ha llegado a obtener el orden 6 de las eliminaciones clásica y extendida
de la paralaje y del perigeo utilizando MathATESAT. Asimismo, se han realizado comparaciones de las expresiones analíticas y de la precisión numérica
de estas transformaciones de Lie.

96

4.4.

Capítulo 4. Resultados

AstrodyTWeb
ools : un proyecto de e-Ciencia

El acelerado desarrollo de las tecnologías de la información y la comunicación, TIC, ha propiciado el auge de Internet como plataforma internacional
de intercambio de información, abriendo nuevas vías de colaboración en casi
todos los campos científicos y tecnológicos. Conceptos como Open-Science,
e-Research, e-Collaboration han arraigado en la comunidad científica e investigadora, permitiendo aunar esfuerzos, optimizar recursos y establecer nuevas
vías de colaboración para el desarrollo de la Ciencia.
Internet ofrece además otros recursos a los investigadores. El desarrollo
de herramientas basadas en la web brinda la posibilidad de utilizarlas sin
restricciones asociadas a la potencia de cálculo del computador del usuario,
al sistema operativo que tenga instalado, a su ubicación geográfica o a su
disponibilidad horaria. Poco a poco los programas que en un principio necesitaban estar instalados en cada equipo particular se han ido transladando
a la red de redes, donde son compartidos y gozan de una mayor visibilidad,
con el consiguiente incremento en el impacto de las investigaciones. Es, en
definitiva, un claro avance en favor de la Ciencia.
Con el fin de difundir el uso y conocimiento de los propagadores y aplicaciones creadas por el Gupo de Computación Científica (GRUCACI), surge AstrodyTWeb
ools [130, 132], un entorno de servicio web que permite poner
herramientas científicas, desarrolladas por investigadores del campo de la
Mecánica Celeste y de la Astrodinámica, al servicio de otros investigadores y estudiantes con fines educativos o científicos. Se han incluido, por el
momento, cuatro aplicaciones distintas. La primera, una suite de propagadores, entre los que se encuentra PPKBZ9, mejorado por este doctorando tras
implementar el desarrollo de las teorías descritas en el artículo [134]. Para
otras herramientas como ZERGOF, RGOFinder y DSST se han diseñado las
interfaces web y los mecanismos de conexión e integración que facilitan su
uso externo y abierto a través de Internet. El usuario realizará una petición,
utilizando un navegador web, a través de la interfaz de la aplicación seleccionada. Esta petición es manejada por los servicios web, que haciendo uso
de librerías, se conectan al servidor de aplicaciones enviándole la solicitud
de trabajo. En este servidor se gestiona la conexión con la aplicación a ejecutar así como los recursos necesarios para su procesamiento y validación.
Cuando la ejecución de la aplicación finaliza se obtienen los resultados, que
son enviados al servidor, el cual se encarga de completar la respuesta, que es
finalmente mostrada y ofrecida al usuario para su descarga.

4.5.

El proyecto Bioinf oWeb
T ools

El desarrollo propiciado por Internet tampoco presenta una excepción en
el campo de la Bioinformática. Así, bajo el mismo paradigma que AstrodyTWeb
ools ,

4.5. El proyecto Bioinf oWeb
T ools

97

se ha creado Bioinf oWeb
T ools , una plataforma web que incluye diferentes servicios de análisis bioinformático (para el alineamiento de secuencias, análisis
de expresión génica, construcción de redes de rutas moleculares, etcétera),
ayudando así a la Plataforma de Genómica del Centro de Investigación Biomédica de La Rioja, CIBIR, en sus tareas de gestión y servicio al investigador.
El sistema está ya siendo utilizado internamente para diferentes servicios
completos de análisis, y se continúan integrando otros protocolos. Asimismo, una versión de estos servicios pronto estará a disposición de cualquier
investigador a través de la Plataforma de Servicios Bioinformáticos de la
Universidad de La Rioja y del CIBIR.
El objetivo de esta plataforma externa es el de permitir a especialistas
en Bioinformática, así como a investigadores y facultativos, la utilización de
herramientas del ámbito de la Bioinformática para realizar alineamientos de
secuencia y análisis completos de diversa índole, todo ello sin necesidad de
conocer cómo funcionan estas herramientas, ni los comandos que requieren
para ser ejecutadas fuera del entorno Web. Los investigadores podrán, de
este modo, centrarse en su gran desafío, que no es otro que analizar estas
secuencias y obtener la información biológicamente relevante.
Debido a la gran variedad de herramientas implicadas en un mismo análisis, como ha quedado patente en el ejemplo expuesto en el Capítulo 3, la
plataforma Bioinf oWeb
T ools constituye una demostración de la flexibilidad del
modelo desarrollado en AstrodyTWeb
ools .
La plataforma está diseñada para gestionar internamente la incorporación de otras herramientas de análisis y parametrizaciones diversas, así como
nuevas versiones de genomas contra los cuales alinear la secuencia. De este
modo se consigue que el usuario pueda elegir, en diferentes puntos del flujo
del proceso, qué herramienta de análisis usar, qué parámetros adaptar a su
tipo de análisis, y qué versión de organismo utilizar, así como qué filtrado
de los datos quiere obtener. Esta toma de decisiones sobre flujos alternos ha
sido considerada en la implementación, creando un sistema abierto y flexible,
adaptable por tanto a las necesidades del investigador.

Uno no advierte jamás lo que está hecho,
solo puede ver lo que falta por hacer

MARIE CURIE

Capítulo 5

Conclusiones y trabajos futuros
5.1.

Conclusiones

El desarrollo de la Ciencia y de la Tecnología, aparejado con la innovación, ha logrado que el hombre, en el devenir de la historia, haya evolucionado
hasta llegar a la sociedad actual, una sociedad donde los avances tecnológicos marcan nuevos paradigmas en todas sus ramas y avanzan a velocidades
vertiginosas.
Las tecnologías de la información y la comunicación son aplicables en casi
todos los sectores de la sociedad, reportando mejoras y eficiencia. La Ciencia
se ha apoyado en los avances tecnológicos para aplicar los conocimientos y
aprovecharlos para el progreso de la humanidad. Disciplinas como la Física, la
Química y la Ingeniería encuentran en las TIC la posibilidad de incrementar,
mejorar y compartir su repertorio de conocimientos, y por ende, de contribuir
a su desarrollo.
El aprovechamiento de los recursos tecnológicos en el mundo científico
constituye un gran instrumento en el campo de la computación científica, facilitando la construcción de modelos matemáticos y la aplicación de técnicas
numéricas en la resolución de problemas científicos.
La presente Tesis Doctoral constituye una disertación acerca de cómo la
computación científica contribuye a la mejora de la aplicación de las técnicas
de manipulación algebraica a los ámbitos de la Mecánica Celeste y de la
Astrodinámica.
Se han incorporado nuevas teorías en MathATESAT, un sistema de computación numérica y simbólica desarrollado inicialmente por el Dr. Juan Félix
San Juan, que permite el desarrollo de teorías analíticas de orden elevado
aplicadas a sistemas keplerianos u osciladores armónicos perturbados.
Se han implementado en MathATESAT las funcionalidades de ATESAT
que permiten integrar en forma cerrada el problema zonal del satélite artificial. A partir de estas teorías analíticas se han generado dos propagadores
de órbitas, PPKBZ9A,SA . El modelo de perturbaciones considerado tiene en
101

102

Capítulo 5. Conclusiones y trabajos futuros

cuenta los ocho primeros armónicos zonales del potencial gravitatorio de un
planeta como la Tierra. El primer propagador, A, es completamente analítico, mientras que el segundo, SA, calcula las transformaciones directa e
inversa de forma numérica. En la teoría analítica se combinan dos transformaciones de Lie, la eliminación de la paralaje y la eliminación del perigeo,
para eliminar los términos de largo periodo producidos por el argumento
del perigeo, junto con el método the Krylov-Bogoliubov-Mitropolsky para
integrar los términos de corto periodo. Esta teoría analítica es válida para
excentricidades e inclinaciones pequeñas, pero no para la inclinación crítica.
Se han validado los programas de propagación orbital con un extenso
catálogo de condiciones iniciales para satélites orbitando alrededor de Marte
y de la Tierra. Todas las pruebas muestran que el error máximo al cabo de
30 días de propagación está por debajo de los 300 metros en el caso de la
Tierra, aunque es mayor para el caso de Marte. También se ha construido un
conjunto de funciones en Mathematica que permiten estudiar los términos
de largo periodo de este sistema dinámico. Estas funciones pueden ser combinadas con los programas de evaluación de la teoría analítica. Finalmente,
estos programas se han aplicado a la constelación de satélites de la Agencia
Espacial Europea (ESA) Swarm y al Mars Global Surveyor.
Se ha estudiado la ecuación generalizada de Kepler, pieza clave en la
determinación precisa de la posición y velocidad de un satélite cuando se
emplean los propagadores orbitales de la familia PPKB. Se ha estudiado el
comportamiento de los métodos de Newton-Raphson, Halley y el propuesto
por Danby y Burkardt, así como varias condiciones iniciales empleadas para
inicializar estos procesos iterativos, aplicados a la resolución de la ecuación
clásica de Kepler. Los mejores resultados se han obtenido al combinar el
método de Danby y Burkardt con la solución de la ecuación clásica de Kepler
como valor inicial del método. Asimismo se ha encontrado que para valores
negativos del pequeño parámetro, la solución de la ecuación generalizada no
tiene por qué pertenecer al intervalo [0, π].
Por otro lado, al igual que en todos los métodos de perturbaciones, el
método de Lie-Deprit presenta una cierta arbitrariedad. En esta Tesis Doctoral se ha revisado este método y se ha identificado dónde aparece esta
arbitrariedad, cómo y bajo qué condiciones puede ser utilizada y cuál es
su relación con otros métodos de perturbaciones. El método de Lie-Deprit
permite obtener el Hamiltoniano transformado y la función generatriz de la
transformación de Lie, orden por orden, como la solución de una ecuación en
derivadas parciales. El proceso implica frecuentemente integración, es decir,
que una función Fn puede ser añadida a la función generatriz en cada orden. Usualmente estas funciones son tomadas igual a cero. Sin embargo, la
selección de unas funciones Fn apropiadas permite eliminar otras variables
angulares en el proceso.
Además, la eliminación de la paralaje ha sido reconstruida utilizando la

5.1. Conclusiones

103

extensión del método de Deprit descrita. Esta nueva versión amplía la que
propuso Deprit al diferenciarse en una función Fn . La versión clásica supone
Fn = 0, mientras que nuestra extensión propone una función Fn (C, S, Θ).
El efecto añadido consiste en permitir la eliminación de los términos dependientes del argumento del perigeo, lo cual, sumado al efecto de la eliminación
de la paralaje, elimina el argumento de latitud. En el problema principal del
satélite artificial, el nuevo Hamiltoniano coincide con el obtenido después de
aplicar la eliminación clásica de la paralaje y la eliminación del perigeo hasta el sexto orden. También se han realizado comparaciones numéricas entre
ambos esquemas.
Con el fin de difundir este conocimiento y el uso de los propagadores y
aplicaciones creadas por el grupo de investigación GRUCACI se ha creado
AstrodyTWeb
ools , una plataforma de servicios Web que permite el uso de estas
herramientas de manera gratuita a través de Internet.
Las herramientas habitualmente utilizadas en los ámbitos de la Mecánica Celeste y de la Astrodinámica adolecen de cierta heterogeneidad en los
lenguajes de programación empleados, así como de un diseño poco intuitivo
basado en el uso de la línea de comandos sobre sistemas operativos de tipo
UNIX. La plataforma desarrollada permite paliar estos inconvenientes, pues
ha sido diseñada de modo que cualquier investigador pueda acceder a las
herramientas que integra a través de interfaces gráficas intuitivas, ejecutar
los cálculos en equipos de computación de altas prestaciones, y aprovechar
la capacidad de análisis de la que ha sido dotada.
Además se ha conseguido unificar en un solo proceso la ejecución de la
aplicación seleccionada y su interconexión con otras herramientas como Octave, LATEX, etcétera, con el fin de hacer un tratamiento final de los resultados.
La integración de todas estas herramientas ha requerido de un estudio de las
entradas y salidas de las aplicaciones, con el fin de poder enlazar la entrada
de cada herramienta con la salida de su predecesora, y de modo que, para
cada ejecución, los parámetros necesarios estén explícitamente definidos y
hayan sido correctamente solicitados al usuario al inicio del proceso. Se une
a todo ello la implementación de un sistema de control que evalúa y verifica
todo el flujo de ejecución.
Los avances tecnológicos y la computación científica han dado origen a
nuevas ramas dentro de la Ciencia, como es el caso de la Bioinformática. Así,
Web
aplicando el mismo modelo que en AstrodyTWeb
ools , se ha creado Bioinf oT ools ,
una plataforma de servicios Web de análisis bioinformáticos, de la que se ha
seleccionado para la presente Tesis Doctoral, a modo de ejemplo, sólo uno
de los servicios que ofrece al investigador desde el Centro de Investigación
Biomédica de la Rioja: el análisis de DNA exoma.
A través del conjunto de datos solicitados en la interfaz web para un
tipo de análisis particular, se realiza un encadenamiento de varios algoritmos de análisis y herramientas implicadas. Como ya se ha indicado para

104

Capítulo 5. Conclusiones y trabajos futuros

AstrodyTWeb
ools , automatizar este proceso ha supuesto un análisis exhaustivo
de los parámetros que hay que solicitar al usuario inicialmente para que estén
disponibles para cada una de las herramientas que intervienen en el flujo de
proceso.
Se han incluido entre las actividades de análisis aquéllas relativas a operaciones sobre bancos de datos que permiten la comparación de los resultados
con grandes repositorios, realizándose el análisis sobre miles de registros bibliográficos basados en ciertas reglas, y utilizando medidas específicas para
obtener frecuencias, tendencias, cruces y relaciones, que ayuden al investigador a analizar e interpretar los datos.
Ambas plataformas son proyectos ambiciosos que no se desea que queden limitados a repositorios de software en Internet, sino que sean espacios
abiertos de colaboración e intercambio de conocimiento científico.

5.2.

Líneas de trabajo futuras

La mejora de la precisión y del modelo de perturbaciones en los propagadores de la familia PPKB implica el desarrollo de las técnicas de manipulación algebraica, y por tanto, su desarrollo en MathATESAT. En este sentido,
se está investigando en la aplicación del teorema de la función inversa para
obtener un desarrollo en serie de potencias de la excentricidad y de la anomalía media en el caso de la ecuación generalizada de Kepler, pieza clave en
la determinación precisa de la posición y velocidad de un satélite en el caso
de la teoría PPKB.
Otra línea en la que se está trabajando es la inclusión de los armónicos
teserales m-daily en el modelo PPKB. La contribución a segundo orden de
estos términos se encuentra en la función generatriz, y la integración del
intermediario radial no se ve afectada.
Entre las vías que están ya en proceso de desarrollo, relacionadas con
las aplicaciones alojadas en AstrodyTWeb
ools , figuran los métodos para la determinación de los elementos equinocciales medios en DSST a partir de las
observaciones, los cuales se basan en mínimos cuadrados ponderados (WLS),
Extended Kalman Filter (EKF), Square Root Information Filter (SRIF), y
Backward Smoothing Extended Kalman Filter (BSEKF). Todos estos métodos constituirán una sólida base para una futura plataforma Web dedicada
al Space Situational Awareness (SSA).
Las mejoras en las capacidades actuales de DSST Web se centrarán en
las funciones necesarias para la determinación orbital: los interpoladores, el
movimiento de corto periodo, las derivadas parciales, y las transformaciones
de coordenadas. Los modelos de observaciones a considerar incluirán datos
de radar y ópticos, procedentes tanto de sensores ubicados en tierra como en
el espacio.
La arquitectura web para una nueva plataforma centrada en Space Si-

5.2. Líneas de trabajo futuras

105

tuational Awareness (SSA) será una generalización de la arquitectura web
basada en Drupal mostrada en la figura 2.2. Drupal proporciona una capa de abstracción de bases de datos que permitirá la gestión de los datos
procedentes de las observaciones.
Finalmente, además de ampliar y mejorar el repositorio de aplicaciones
disponibles en AstrodyTWeb
ools , también se pretende habilitar los medios para
que todas las herramientas incorporadas en la plataforma puedan ser convenientemente documentadas, permitiendo, de este modo, el conocimiento
de los algoritmos aplicados y el rigor en la interpretación de los resultados
obtenidos que debe presidir toda actuación científica.
Otra ambiciosa e interesante vía de trabajo que se plantea es la de convertir AstrodyTWeb
ools en un entorno de encuentro, formación y colaboración entre
los investigadores en los campos de la Astrodinámica y la Mecánica Celeste.
La plataforma AstrodyTWeb
ools ofrecerá, además de las aplicaciones software, un
entorno de Ciencia abierta para la creación de materiales formativos dirigidos
a investigadores noveles en los campos de la Astrodinámica y la Mecánica
Celeste, y un punto de encuentro para la cooperación, el intercambio de ideas
y la colaboración en el desarrollo de nuevas herramientas.
De la misma forma, se seguirá desarrollando la plataforma Bioinf oWeb
T ools
para que continúe aglutinando en servicios de análisis completos las tareas
que un biólogo o bioinformático tiene que realizar. Ya se han automatizado
servicios de transcriptómica como mRNA-Seq, totalRNA-Seq y microRNASeq, se seguirá trabajando en la incorporación de otros protocolos y en la
creación de soluciones ad-hoc para la resolución de problemas puntuales. El
objetivo en este campo es ofrecer las herramientas necesarias para permitir
que los procesos bioinformáticos puedan llevarse a cabo con agilidad, facilitando de este modo la tarea de investigación y permitiendo que se pueda
avanzar más rápido en la generación del conocimiento.
Manteniendo siempre como horizonte las necesidades del investigador,
en un entorno global y virtual, sin barreras geográficas, ambas plataformas,
Web
AstrodyTWeb
ools y Bioinf oT ools , contienen hoy en día un repositorio de software
que supone un servicio a la carta, por cuanto está a disposición de los investigadores que quieran utilizarlo como plataforma de trabajo, pero en un futuro
próximo constituirá un espacio para la construcción del nuevo conocimiento
científico.

La Ciencia viene, la sabiduría se queda

ALFRED TENNYSON

Apéndice A

Artículo I

PPKBZ9A,SA Two Orbit
Propagators Based on
an Analytical Theory
San-Juan, J. F., Gavín, A.
López-Ochoa, L. M. and López, R.

The Journal of the Astronautical Sciences
2011
http://dx.doi.org/10.1007/BF03321535

109

Apéndice B

Artículo II

A Note about Certain Arbitrariness
in the Solution of the Homological
Equation in Deprit’s Method
San-Juan, J. F., López, R.
Pérez, I. and San-Martín, M.

Mathematical Problems in Engineering
2015
http://dx.doi.org/10.1155/2015/982857

111

113

Hindawi Publishing Corporation
Mathematical Problems in Engineering
Volume 2015, Article ID 982857, 10 pages
http://dx.doi.org/10.1155/2015/982857

Research Article
A Note about Certain Arbitrariness in the Solution of the
Homological Equation in Deprit’s Method
Juan Félix San-Juan,1 Rosario López,2 Iván Pérez,1 and Montserrat San-Martín1
1

Scientific Computing Group (GRUCACI), University of La Rioja, 26004 Logroño, Spain
Center for Biomedical Research of La Rioja (CIBIR) and Scientific Computing Group (GRUCACI),
26006 Logroño, Spain

2

Correspondence should be addressed to Juan Félix San-Juan; juanfelix.sanjuan@unirioja.es
Received 1 September 2014; Accepted 2 January 2015
Academic Editor: Jun Jiang
Copyright © 2015 Juan Félix San-Juan et al. This is an open access article distributed under the Creative Commons Attribution
License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly
cited.
Deprit’s method has been revisited in order to take advantage of certain arbitrariness arising when the inverse of the Lie operator
is applied to obtain the generating function of the Lie transform. This arbitrariness is intrinsic to all perturbation techniques and
can be used to demonstrate the equivalence among different perturbation methods, to remove terms from the generating function
of the Lie transform, or to eliminate several angles simultaneously in the case of having a degenerate Hamiltonian.

1. Introduction
Perturbation methods represent one of the most important
and powerful tools for the study of dynamical systems.
These techniques are frequently used in several fields of
nonlinear mechanics. The method of the averaging, which
was rigorously formulated in [1], and the methods based on
canonical transformations, such as the methods of von Zeipel
[2, 3], Hori [4, 5], and Deprit [6], are some of the analytical
perturbation methods derived from the work of Poincaré
[7]. The demonstration of the equivalence of these methods
[8–12] is based on certain arbitrariness closely related to
the averaged equations. Moreover, this arbitrariness can also
be included during the process of obtaining the generating
function and determining the new system of differential
equations [10, 13–16].
The purpose of this paper is to review the algorithm
proposed by Deprit to perform a Lie transform so as to
identify where this arbitrariness appears, how and under what
conditions this can be used, and, finally, what is its relation to
another method derived from the one proposed by Deprit,
such as the so-called double normalization [17–19]. In order

to do that, we will reexamine the processes carried out by
Deprit’s method when it is applied to the normalization of
Hamiltonian systems of the form
𝜀𝑛
H𝑛 (I, 𝜑) ,
𝑛≥1 𝑛!

H = H0 (𝐼1 ) + ∑

(1)

where 𝜀 is a small parameter and I = (𝐼1 , . . . , 𝐼𝑚 ), 𝜑 =
(𝜑1 , . . . , 𝜑𝑚 ) are action-angle variables. More precisely, we
will assume that the unperturbed part of (1) can be expressed
in the simple form H0 = 𝜔𝐼1 , which is what Arnold
characterizes as proper degeneracy [20], while the perturbed
part can be represented as a trigonometric series in the form
H𝑛 =

∑

sin
C𝑗1 ,...,𝑗𝑚 ( ) (𝑗1 𝜑1 + ⋅ ⋅ ⋅ + 𝑗𝑚 𝜑𝑚 ) ,
cos

𝑗1 ,...,𝑗𝑚 ∈Z

(2)

where C𝑗1 ,...,𝑗𝑚 are functions depending on physical parameters and the actions 𝐼1 , . . . , 𝐼𝑚 . It is worth noting that all
dynamical systems defined by a Hamiltonian function whose
unperturbed part H0 is made of a finite number of harmonic
oscillators can be brought to the form (1) by means of a

114

Apéndice B. Artículo II

2

Mathematical Problems in Engineering

suitable change of variables [21, 22]. Moreover, this type of
Hamiltonian frequently appears in a large class of problems
in celestial mechanics and classical mechanics.
For a Hamiltonian of the form (1), Deprit’s method allows
one to obtain the transformed Hamiltonian and the generating function of the Lie transform, order by order, as a solution
of a partial differential equation. The solution of this equation
is obtained by choosing the transformed Hamiltonian in the
null space and the generating function in the range of the
Lie operator associated to H0 . Therefore, the transformed
Hamiltonian does not depend on the angular variable 𝜑1 and
the generating function is obtained by computing the inverse
of the Lie operator. This is a procedure that usually involves
integration. This fact implies that a function F𝑛 , belonging to
the null space of the Lie operator, can be added to the generating function at each order. Usually, these functions are chosen
to be equal to zero. This inherent arbitrariness introduced
by this method is analogous to the gauge freedom [23–25].
It is worth noting that Morrison [10], using the von Zeipel
method, considers a generating function 𝑆1 = 𝑆̂1 + 𝑆1∗ , where
𝑆1∗ is an arbitrary 2𝜋-periodic function defined as the average
of 𝑆1 with respect to the fast variable. The determination of
𝑆1∗ can be made at the same order or postponed until next
order, in which case, under certain conditions, it is possible
to consider 𝑆1∗ as the generating function of a new transformation, which can be used to remove other angular variables.
Another example of using Deprit’s method with a zeroaverage generator can be seen in Metris and Exertier [26].
In Section 2, we make a brief review of some basic
elements of the Lie transform perturbation theory and
identify where the arbitrary function appears in Deprit’s
method. The process whereby Deprit’s method is applied,
and how explicit analytical solutions can be obtained when
the arbitrary function is considered nonnull, is outlined in
Section 3. The special case of degenerated first-order normalized Hamiltonians and their relation with other method
derived from Deprit’s method is presented in Section 4.
Finally, in Section 5, an example of the normalization, when
the arbitrary function is nonnull, is presented.

2. Lie Transforms
Let P be a Poisson algebra of functions, that is, an algebra of
real or complex value functions in (x, X), where (x, X) belongs
to R𝑛 × R𝑛 or C𝑛 × C𝑛 , and such that for any 𝑓 and 𝑔 in P the
Poisson bracket, defined by
{𝑓, 𝑔} = ∇x 𝑓 ⋅ ∇X 𝑔 − ∇X 𝑓 ⋅ ∇x 𝑔,

(3)

also belongs to P.
A Lie transform is a uniparametric family of mappings
𝜙 : (x󸀠 , X󸀠 , 𝜀) → (x, X) defined by a solution of the system of
differential equations,
𝑑x
= ∇X W (x, X, 𝜀) ,
𝑑𝜀
𝑑X
= −∇x W (x, X, 𝜀) ,
𝑑𝜀

that satisfies the initial conditions x(x󸀠 , X󸀠 , 0) = x󸀠 and
X(x󸀠 , X󸀠 , 0) = X󸀠 . The function W is the generator of 𝜙
and can be expressed as the following power series in the
parameter 𝜀:
𝜀𝑖
W (x, X, 𝜀) = ∑ 𝑊𝑖+1 (x, X) .
𝑖≥0 𝑖!

In the Hamiltonian case, perturbation theories are based
on transforming the analytical Hamiltonian function,
𝜀𝑛
𝜀𝑛
H𝑛 (x, X) ≡ ∑ H𝑛,0 (x, X) ,
𝑛!
𝑛≥1
𝑛≥1 𝑛!

H (x, X, 𝜀) = ∑

(6)

into the new one
𝜀𝑛
𝜀𝑛
K𝑛 (x󸀠 , X󸀠 ) ≡ ∑ H0,𝑛 (x󸀠 , X󸀠 ) ,
𝑛!
𝑛≥1
𝑛≥1 𝑛!
(7)

K (x󸀠 , X󸀠 , 𝜀) = ∑

which satisfies some specific prerequisites. One of the most
useful methods to build this transform was proposed by
Deprit in [6].
The Lie-Deprit method looks for a generating function
W of 𝜙 so that the terms H𝑛 , K𝑛 , and W𝑛 satisfy the partial
differential equation, called Homological equation:
̃ 0,𝑛 ,
LH0 (W𝑛 ) + K𝑛 = H

(8)

where LH0 is the Lie operator (or derivative) associated to
H0 , a linear operator given in terms of a Poisson bracket by
LH0 : 𝐹 󳨀→ {𝐹, H0 } .

(9)

̃ 0,𝑛 , is computed from H𝑛 ,
The right-hand side of (8), H
(W𝑖 )1≤𝑖≤𝑛−1 and (H𝑝,𝑞 )𝑝+𝑞≤𝑛−1 , where the latter are obtained
by means of the recursive formula:
𝑖

𝑖
H𝑖,𝑗 = H𝑖+1,𝑗−1 + ∑ ( ) {H𝑖−𝑘,𝑗−1 , W𝑘+1 } ,
𝑘

(10)

𝑘=0

with 𝑖 ≥ 0 and 𝑗 ≥ 0 (for more details, see [6]).
In the case of the Hamiltonian (1), the algebra P can be
decomposed into the direct sum
P = ker (LH0 ) ⊕ im (LH0 ) ,

(11)

where ker(LH0 ) denotes the null space (or kernel) of LH0
and im(LH0 ) the range of LH0 .
̃ 0,𝑛 can be uniquely split into
By (11), H
̃ 0,𝑛 = H
̃∗ + H
̃ ∗∗ ,
H
0,𝑛
0,𝑛

(12)

̃ ∗ belongs to the null space of LH and H
̃ ∗∗
where H
0,𝑛
0,𝑛
0
to the range of LH0 . According to (12), a solution of the
Homological equation (8) is given when the new Hamiltonian
is chosen to be
̃∗ .
K𝑛 = H
0,𝑛

(4)

(5)

(13)

Then the generating function, W𝑛 , has to satisfy the identity
̃ ∗∗ .
LH0 (W𝑛 ) = H
0,𝑛

(14)

115

Mathematical Problems in Engineering

3

Finally, W𝑛 is obtained by solving (14). This solution is
not uniquely determined by (14) since the addition of any
function F𝑛 ∈ ker(LH0 ) to W𝑛 is also a solution to the above
equation. Usually, a natural choice for F𝑛 would seem to be
to take it identically zero, although this does not necessarily
have to be the most convenient choice. On the other hand, in
the case of F𝑛 ≠ 0 there are two possible instances in which
the arbitrary function can be determined: first, at the same
order which would produce an effect on the term W𝑛 of the
generating function and, second, if the determination of the
arbitrary functions is postponed to the next order, then the
effect may be used to express the term K𝑙 with 𝑙 > 𝑛 of the
transformed Hamiltonian in a much simpler form compared
to the transformed Hamiltonian obtained when F𝑛 = 0 is
considered.

3. Normalization by the Lie-Deprit Method:
Case F𝑛 ≠ 0
Let H be a Hamiltonian of type (1). K is the normalized
Hamiltonian of H in the phase space (𝜑, I) up to order 𝑛
if the zero order term H0 is an integral of the transformed
Hamiltonian; that is,
LH0 (K𝑖 ) = 0,

for 𝑖 = 0, . . . , 𝑛,

(16)

In this case, the solution to (8) is obtained when the new
Hamiltonian, K𝑛 , is
1 2𝜋 ̃
K𝑛 =
∫ H0 𝑛 𝑑𝜑1󸀠 ,
2𝜋 0

(17)

and the generating function, W𝑛 , is given by
W𝑛 =

1
̃ 0 𝑛 − K𝑛 ) 𝑑𝜑󸀠 + F𝑛 ,
∫ (H
1
𝜔

(18)

where F𝑛 is an arbitrary integration function in the null space
of LH0 . It is worth noting that F𝑛 depends on the variables
󸀠
𝜑2󸀠 , . . . , 𝜑𝑚
and all momenta 𝐼𝑖󸀠 . We will henceforth drop the
primes from the new variables and momenta to simplify
notation. For a better understanding of the role played by
the arbitrary integration function F𝑛 , Deprit’s method will
be discussed taking into account its explicit appearance.
The method starts by taking K0 = H0 . According to
the Deprit’s algorithm [6], at the first order the Homological
equation, which has to be solved, is
̃ 0 1,
LH0 (W1 ) + K1 = H

(19)

where the right-hand side of this equation is
̃ 0 1 = H1 0 = H1 .
H

(20)

1 2𝜋
∫ H1 𝑑𝜑1 ,
2𝜋 0

(21)

1
∫ (H1 − K1 ) 𝑑𝜑1 + F1 ,
𝜔

(22)

K1 =
W1 =

where F1 ∈ ker(LH0 ). The arbitrary function can be
determined at the same order; for example, taking F1 as
F1 =

1 2𝜋
∫ W1 𝑑𝜑1 ,
2𝜋 0

(23)

the arbitrary function removes those terms that do not
depend on 𝜑1 from W1 or postponed its determination to the
next order. Now we analyze the case when the determination
of F1 is retained. Then, at second order the right-hand side
of (8) is
̃ 0 2 = H2 0 + 2 {H1 0 , W1 } .
H

(24)

By using (20) and (22), and after some rearrangements, (24)
can be written in the form

(15)

where the associated Lie operator takes the form
1 𝜕
.
LH0 ( ) =
𝜔 𝜕𝜑1󸀠

Then, by applying (17) and (18), the first-order term of K and
W can be written, respectively, as

̃0 2 = H
̃ # + 2 {H1 , F1 } ,
H
02

(25)

̃ # collects all the terms that do not depend on F1
where H
02
and is given by
̃ # = H2 0 + 2 {H1 0 , ∫ (H
̃ 0 1 − K1 ) 𝑑𝜑1 } .
H
02
𝜔

(26)

On the other hand, the second part {H1 , F1 } involves the
terms that only depend on the integration constant F1 . It
is worth noting that this Poisson bracket can be written as
a function of the Lie operator, −LH1 (F1 ).
By making use of (25), the Homological equation yields
̃ # + 2 {H1 , F1 } .
LH0 (W2 ) + K2 = H
02

(27)

Now, by expanding the Poisson bracket, (27) can be rewritten
as
𝑚

̃ # + 2∑ (
LH0 (W2 ) + K2 = H
02
𝑖=2

𝜕H1 𝜕F1 𝜕H1 𝜕F1
−
).
𝜕𝜑𝑖 𝜕𝐼𝑖
𝜕𝐼𝑖 𝜕𝜑𝑖
(28)

Then, by applying (17) and taking into account (28), we obtain
K2 as
K2 =

𝑚
𝜕K1 𝜕F1 𝜕K1 𝜕F1
1 2𝜋 ̃ #
−
).
∫ H0 2 𝑑𝜑1 + 2∑ (
2𝜋 0
𝜕𝜑𝑖 𝜕𝐼𝑖
𝜕𝐼𝑖 𝜕𝜑𝑖
𝑖=2
(29)

It is worth noting that the dependency of F1 on K2 still
remains through its partial derivatives with respect to 𝜑𝑖
(with 𝑖 = 2, . . . , 𝑚) and all momenta. The elimination of this
dependency is used to express K2 in a simpler form; it is

116

Apéndice B. Artículo II

4

Mathematical Problems in Engineering

the fundamental idea that can be found behind the explicit
manipulation of the arbitrary integration function.
Therefore, according to this purpose, the first term of (29)
𝐼𝐼
is decomposed as the sum K𝐼2 +K𝐼𝐼
2 , where K2 is to be made
of those terms that we want to remove. Finally, F1 can be
determined by solving
𝑚

∑(
𝑖=2

𝜕K1 𝜕F1 𝜕K1 𝜕F1
1
−
) = K𝐼𝐼
.
𝜕𝜑𝑖 𝜕𝐼𝑖
𝜕𝐼𝑖 𝜕𝜑𝑖
2 2

(30)

It is worth noting that the complexity of this identity directly
depends on the form of K1 and, therefore, on the form of H1 .
Finally, the second-order term K2 of the Hamiltonian K is
taken as
K2 = K𝐼2 .

(31)

Now, by substituting the value of F1 into (22) in order to
complete W1 and into the previous terms H𝑖 𝑗 of (10), the
second-order term W2 of W is
W2 =

1
̃ 0 2 − K2 ) 𝑑𝜑1 + F2 .
∫ (H
𝜔

(32)

As already mentioned before, the arbitrary function can be
determined at the same order so as to remove those terms that
do not depend on 𝜑1 from W1 or postpone its determination
to the next order.
The above reasoning can be immediately extended to
order 𝑛 in exactly the same way. By (10), the right-hand side
of (8) can be written in the following generic form:
̃0 𝑛 =
H

̃#
H
0𝑛

+ 𝑛 {H1 0 , F𝑛−1 } ,

(33)

̃ # is known and the second term
where the contribution of H
0𝑛
contains the unknown function F𝑛−1 .
As before, by expanding the Poisson bracket on (33) and
taking into account (20), the Homological equation (8) takes
the form
LH0 (W𝑛 ) + K𝑛
𝑚

̃ # + 𝑛∑ (
=H
0𝑛
𝑖=2

𝜕H1 𝜕F𝑛−1 𝜕H1 𝜕F𝑛−1
−
).
𝜕𝜑𝑖 𝜕𝐼𝑖
𝜕𝐼𝑖 𝜕𝜑𝑖

(34)

It is worth noting that this Poisson bracket can also be written
as a function of the Lie operator as −LH1 (F𝑛−1 ).
Then, by substituting (33) into (17), we obtain K𝑛 as
K𝑛 =

1 2𝜋 ̃ #
∫ H0 𝑛 𝑑𝜑1
2𝜋 0
𝑚

𝜕K1 𝜕F𝑛−1 𝜕K1 𝜕F𝑛−1
− 𝑛∑ (
−
).
𝜕𝜑𝑖 𝜕𝐼𝑖
𝜕𝐼𝑖 𝜕𝜑𝑖
𝑖=2

(35)

If we proceed in the same way as before, the first term
of (35) can be decomposed again as the sum K𝐼𝑛 + K𝐼𝐼
𝑛.
Then, by choosing suitable functional dependencies of F𝑛−1 ,

according to the additional aims of the transformation, and
taking into account the identity
𝑚

∑(
𝑖=2

𝜕K1 𝜕F𝑛−1 𝜕K1 𝜕F𝑛−1
1 𝐼𝐼
−
)=
K ,
𝜕𝜑𝑖 𝜕𝐼𝑖
𝜕𝐼𝑖 𝜕𝜑𝑖
2𝑛 𝑛

(36)

the explicit value of F𝑛−1 can be obtained. Again, the
complexity of (36) depends on the form of K1 and, therefore,
on the form of H1 . Hence, the new Hamiltonian, K𝑛 , yields
K𝑛 = K𝐼𝑛 .

(37)

Then, by replacing the value of F𝑛−1 into W𝑛−1 and into the
previous terms H𝑖 𝑗 of the Deprit’s scheme, we obtain W𝑛 as
W𝑛 =

1
̃ 0 𝑛 − K𝑛 ) 𝑑𝜑1 + F𝑛 .
∫ (H
𝜔

(38)

Finally, by taking F𝑛 = 0, if this function is not used to
remove the terms that do not depend on 𝜑1 from W𝑛 , the
transformed Hamiltonian can be expressed as
𝜀𝑛 𝐼
K𝑛 ,
𝑛≥1 𝑛!

K=∑

(39)

where the dependency on 𝜑1 is eliminated by the normalization process and the additional effects produced by the
integration constants are included from the second order.

4. K𝑛 Degenerate at Order 𝑛 ≥ 1
As has been seen in the previous section, the arbitrary
integration function, when it is determined at the same
order, only affects the generating function. However, if its
determination is postponed, the form of the terms H1 and
K1 becomes important, since it depends on the solution of
the partial differential equation (36).
In this section, we assume that the first-order term
H1 of the initial Hamiltonian (1) is transformed into a
degenerated term K1 of the new Hamiltonian in the sense
of Arnold’s characterization. Under this assumption, the
arbitrary function can be considered like the generator of
a new Lie transform which will allow to remove any other
angular variables. It is worth noting that this condition is
weaker than assuming the degeneration of the term H1 , as
can be seen in the example shown in the next section.
We start considering the case in which the first-order
term K1 depends on all the momenta 𝐼𝑖 . It is easy to check
that
𝜕K1
= 0,
𝜕𝜑𝑖

for 𝑖 = 2, . . . , 𝑚.

(40)

On the other hand, for each 𝑛 > 1, using the identity
{H1 0 , F𝑛−1 } = −LH1 0 (F𝑛−1 ), the Homological equation
(34) can be written as
̃#
LH0 (W𝑛 ) + 𝑛LH1 (F𝑛−1 ) + K𝑛 = H
0𝑛

(41)

117

Mathematical Problems in Engineering

5

and, therefore, with the aid of relation (40), (35) yields
K𝑛 =

𝑚

2𝜋

1
̃ # 𝑑𝜑1 − 𝑛∑ 𝜕K1 𝜕F𝑛−1 .
∫ H
0𝑛
2𝜋 0
𝜕𝜑𝑖
𝑖=2 𝜕𝐼𝑖

(42)

With the same approach used in the study of the nondegenerated case, K𝑛 is taken as K𝐼𝑛 , which only depends on the
momenta, and (36) becomes
𝑚

∑
𝑖=2

𝜕K1 𝜕F𝑛−1
1
= − K𝐼𝐼
.
𝜕𝐼𝑖 𝜕𝜑𝑖
𝑛 𝑛

sin
C𝑗1 ,...,𝑗𝑚 ( ) (𝑗2 𝜑2 + ⋅ ⋅ ⋅ + 𝑗𝑚 𝜑𝑚 ) ,
cos

∑

𝑗1 ,...,𝑗𝑚 ∈𝑍⃗

∑

̃#
+ K𝑛 = H
0𝑛

(44)

5. Application to Harmonic Oscillators
In order to provide the reader with a simple illustration of the
machinery of the algorithm used by the Deprit’s method in
the case of F𝑛 ≠ 0, we consider the first-order Hamiltonian
system

− cos
C󸀠𝑗1 ,...,𝑗𝑚 (
) (𝑗2 𝜑2 + ⋅ ⋅ ⋅ + 𝑗𝑚 𝜑𝑚 ) , (45)
sin

𝑗1 ,...,𝑗𝑚 ∈𝑍⃗

H = H0 + 𝜀H1 ,

(51)

where H0 is composed of two harmonic oscillators with equal
frequencies, 𝜔,

with
C󸀠𝑗1 ,...,𝑗𝑚 =

−C𝑗1 ,...,𝑗𝑚
𝑛 (]2 𝐼2 + ⋅ ⋅ ⋅ + ]𝑚 𝐼𝑚 )

,

(46)

where (]2 , . . . , ]𝑚 ) represents the 𝑚 − 1 vector of fundamental
frequencies of the first-order integrable Hamiltonian K1 :
]𝑖 =

𝜕K1
.
𝜕𝐼𝑖

(47)

After that, the value of F𝑛−1 is inserted into the previous
calculations and the value of W𝑛 is obtained:
W𝑛 =

(50)

and allows removing several angular variables simultaneously, linking several transformations.

where the coefficients C𝑗2 ,...,𝑗𝑚 are functions which depend
on the momenta and the physical parameters of the initial
Hamiltonian. Therefore, if we consider the nonresonant case,
(43) can be solved directly and its solution is expressed as a
Poisson series in the form
F𝑛−1 =

𝑖𝑝
𝑛
𝑖1
LH0 (W𝑛 ) + ( ) LH𝑝 (F𝑛−𝑝
) + ⋅ ⋅ ⋅ + 𝑛LH1 (F𝑛−1
)
𝑝

(43)

Moreover, K𝐼𝐼
𝑛 can be written as
K𝐼𝐼
𝑛 =

where the term W𝑛 is completed at order 𝑛 + 𝑝. This formulation can be easily extended to other similar cases. For example, if the Hamiltonian has a high-order proper degeneracy,
H1 (𝐼𝑖1 ), . . . , H𝑝 (𝐼𝑖𝑝 ) only depend on the momenta; then the
Homological equation (34), which must be solved, is

1
̃ 0 𝑛 − K𝑛 ) 𝑑𝜑1 + F𝑛 .
∫ (H
𝜔

(48)

The transformed Hamiltonian K only depends on the
momenta and hence is integrable by quadratures. In this
situation, the arbitrary function can be seen as the generating
function of a Lie transform, which allows to remove the
remaining angular variables of the transformed Hamiltonian
K. It is worth noting that the so-called double normalization
algorithm [17–19] is not a different algorithm, but the classical
Deprit algorithm for the particular case F𝑛 ≠ 0.
On the other hand, an equivalent Hamiltonian, which
only depends on the momenta, can also be obtained by means
of two Lie transforms: the first one, to remove the variable
𝜑1 and then the rest of the angular variables. In both Lie
transforms the arbitrary integration functions are taken equal
to zero.
We would like to point out that in the case that the terms
H𝑖 are transformed into K𝑖 = 0 for 𝑖 ∈ {1, . . . , 𝑝 − 1}, the
Homological equation (34), which must be solved, is
𝑛
̃# ,
LH0 (W𝑛 ) + ( ) LH𝑝 (F𝑛−𝑝 ) + K𝑛 = H
0𝑛
𝑝

(49)

H0 =

1 2
1
(𝑋 + 𝜔𝑥2 ) + (𝑌2 + 𝜔𝑦2 ) ,
2
2

(52)

which is coupled by a perturbation H1 = 𝛿𝑥2 + 𝑦𝑥2 + 𝑦3 ,
where 𝛿 represents a small detuning parameter and 𝜀 is a small
parameter. These parameters 𝜔, 𝛿, and 𝜀 are independent of
the system variables (𝑥, 𝑦, 𝑋, 𝑌) which are being used. It is
worth mentioning that this kind of Hamiltonian frequently
appears in the context of galactic dynamics [27, 28].
First, we convert the Hamiltonian (51) into a new one of
type (1); we use Lissajous variables, which were introduced by
Deprit in [21] and are defined by
𝑥 = 𝑠 sin (𝜑1 + 𝜑2 ) ,

𝑋 = 𝜔𝑠 cos (𝜑1 + 𝜑2 ) ,

𝑦 = 𝑑 sin (𝜑1 − 𝜑2 ) ,

𝑌 = 𝜔𝑑 cos (𝜑1 − 𝜑2 ) ,

(53)

where
𝑠=√

𝐼1 + 𝐼2
,
𝜔

𝑑=√

𝐼1 − 𝐼2
.
𝜔

(54)

In terms of Lissajous variables the unperturbed part H0
becomes
H0 = 𝜔𝐼1 .
The perturbed part H1 takes the form
H1 =

𝑠2 𝛿 𝑠2 𝛿
−
cos 2 (𝜑1 + 𝜑2 )
2
2
+

𝑑 (3𝑑2 + 2𝑠2 )
4

sin (𝜑1 − 𝜑2 )

(55)

118

Apéndice B. Artículo II

6

Mathematical Problems in Engineering
−

𝑑3
𝑑𝑠2
sin 3 (𝜑1 − 𝜑2 ) −
sin (3𝜑1 + 𝜑2 )
4
4

Then, after some calculations, the integration constant is
given by

+

𝑑𝑠2
sin (𝜑1 + 3𝜑2 ) ,
4

𝑠2 𝑑2
(61)
sin 4𝜑2 .
16𝛿𝜔
By substituting (61) into (58), the first-order term W1 is
completed and K2 yields
F1 = −

(56)
which is nondegenerate.
In order to transform the Hamiltonian H into a new one
independent of the angular variables up to third order, we
consider two cases. First, only a Lie transform with F𝑛 ≠ 0 is
used. In the second case, two Lie transforms will be used to
remove the angular variable 𝜑1 in first place and then 𝜑2 , both
using F𝑛 = 0. To conclude, we compare the composition of
these two Lie transforms with the one calculated in the first
case. For the sake of nomenclature simplicity, the primes from
the new variables and momenta will be dropped in all cases.
5.1. Case F𝑛 ≠ 0. Using the algorithm described in Section 3,
we carry out a Lie transform so that the transformed Hamiltonian K is independent of the angular variables up to third
order.
The method starts by taking
K0 = 𝜔𝐼1 .

(2𝑠2 + 3𝑑2 ) 𝑑
𝛿𝑠2
W1 = −
sin 2 (𝜑1 + 𝜑2 ) −
cos (𝜑1 − 𝜑2 )
4𝜔
4𝜔
𝑑3
𝑠2 𝑑
+
cos 3 (𝜑1 − 𝜑2 ) +
cos (3𝜑1 + 𝜑2 )
12𝜔
12𝜔

−

𝑠2 𝑑2
𝛿 𝜕F1
cos 4𝜑2 −
.
4𝜔2
𝜔 𝜕𝜑2

(58)

(59)

+
+
+

+
+

−

(60)

𝑠4
sin 4 (𝜑1 + 𝜑2 )
96𝜔3
(36𝑑2 + 17𝑠2 ) 𝑑2
48𝛿𝜔3

sin 2 (𝜑1 − 𝜑2 )

3𝑑4
sin 4 (𝜑1 − 𝜑2 )
32𝜔3
(3𝑠2 − 6𝑑2 + 112𝛿2 ) 𝑠2 𝑑
96𝛿𝜔3

cos (𝜑1 − 𝜑2 )

2 3

𝑠𝑑
cos 3 (𝜑1 − 𝜑2 )
48𝛿𝜔3
(2𝑑2 + 28𝛿2 + 𝑠2 ) 𝑠2 𝑑
16𝛿𝜔3

cos (𝜑1 + 3𝜑2 )

𝑠2 𝑑3
cos (𝜑1 − 5𝜑2 )
32𝛿𝜔3
(9𝑑2 + 8𝛿2 ) 𝑠2 𝑑
288𝛿𝜔3

cos (3𝜑1 + 𝜑2 )

4

𝑠𝑑
cos (3𝜑1 + 5𝜑2 ) + F2 ,
96𝛿𝜔3

(63)

where, as a first order, F2 depends on the variable 𝜑2 and all
the momenta. This arbitrary function will be determined at
the next order.
At third order, taking into account (29), the term K3 is
determined as
3𝑑4 𝑠2
3𝑑2 𝑠4 49𝛿𝑑2 𝑠2 11𝛿𝑠4 3𝛿3 𝑠2
+
+
+
+
K3 = −
32𝛿𝜔4 32𝛿𝜔4
6𝜔4
12𝜔4
2𝜔4
+

The procedure for determining the arbitrary function F1 , as
outlined by (30), takes K𝐼𝐼
2 as the part of (59) which depends
on 𝜑2 ; then it follows that the identity (30) yields
𝑠2 𝑑2
𝛿 𝜕F1
cos 4𝜑2 +
= 0.
4𝜔2
𝜔 𝜕𝜑2

+

−

where F1 depends on the variable 𝜑2 and the momenta 𝐼1 , 𝐼2 .
This arbitrary function will be determined at the next order.
It is worth noting that K1 is degenerate, it only depends on
the momenta 𝐼1 and 𝐼2 , although H1 is not.
At second order, taking into account (29), the term K2
has the following expression:
15𝑑4 11𝑠2 𝑑2
5𝑠4
𝑠2 𝛿2
−
−
−
8𝜔2
6𝜔2
24𝜔2 2𝜔2

(5𝑑2 + 6𝛿2 + 𝑠2 ) 𝑠2
5𝑠2 𝑑2
sin 4𝜑1 +
sin 2 (𝜑1 + 𝜑2 )
3
48𝜔
12𝛿𝜔3

+

𝛿𝑠2
K1 =
,
2

K2 = −

W2 =

(57)

From (21) and (22) the first-order terms of the transformed
Hamiltonian and generating function are given by

𝑠2 𝑑
−
cos (𝜑1 + 3𝜑2 ) + F1 ,
4𝜔

15𝑑4 11𝑠2 𝑑2
5𝑠4
𝑠2 𝛿2
(62)
−
−
−
,
8𝜔2
6𝜔2
24𝜔2 2𝜔2
which only depends on the momenta. The second-order term
of the generating function is given by
K2 = −

𝑑2 𝑠2 23𝑑2 17𝑠2
3𝛿 𝜕F2
(
.
+
+ 19𝛿) cos 4𝜑2 −
2𝜔4
2𝛿
2𝛿
2𝜔 𝜕𝜑2
(64)

By taking K𝐼𝐼
3 as the part that depends on 𝜑2 in (64), the
identity (30) reads
(23𝑑2 + 38𝛿2 + 17𝑠2 ) 𝑠2 𝑑2
16𝛿𝜔4

cos 4𝜑2 −

3𝛿 𝜕F2
= 0.
2𝜔 𝜕𝜑2

(65)

119

Mathematical Problems in Engineering

7

By solving (65), the integration constant is given by
F2 =

(23𝑑2 + 38𝛿2 + 17𝑠2 ) 𝑠2 𝑑2
96𝛿2 𝜔3

sin 4𝜑2 .

(66)

By substituting (66) into (63), the second-order term W2 is
completed and K3 yields

+

97𝑠2 𝑑3
cos (5𝜑1 − 𝜑2 )
240𝜔5

+

7𝑠4 𝑑
cos (5𝜑1 + 3𝜑2 ) + F3 ,
80𝜔5
(68)

with

3𝑑4 𝑠2
3𝑑2 𝑠4 49𝛿𝑑2 𝑠2 11𝛿𝑠4 3𝛿3 𝑠2
+
+
+
+
,
K3 = −
32𝛿𝜔4 32𝛿𝜔4
6𝜔4
12𝜔4
2𝜔4
(67)

P1 =

which, similarly, only depends on the momenta and, hence,
is trivially integrable. The value of W3 is

P2 =

2

W3 = −

2

2

+
+
−

(33𝑑 + 27𝑠 + 700𝛿 ) 𝑠 𝑑

(21𝑑2 + 6𝑠2 + 166𝛿2 ) 𝑠4
576𝛿𝜔5

sin 4 (𝜑1 + 𝜑2 )

P3 =

𝑑3
(−125𝑠4 + 140𝛿2 𝑠2 + 𝑑2 (720𝛿2 − 92𝑠2 )) ,
576𝛿2 𝜔5

P4 =

𝑠2 𝑑
(253𝑑4 + (274𝑠2 + 960𝛿2 ) 𝑑2
192𝛿2 𝜔5
(69)

(156𝑑2 + 99𝑠2 − 716𝛿2 ) 𝑠2 𝑑2
288𝛿𝜔5

sin 2 (𝜑1 − 𝜑2 )

𝑠2 𝑑4
sin 4 (𝜑1 − 𝜑2 )
64𝛿𝜔5
27𝑑5
cos 5 (𝜑1 − 𝜑2 )
80𝜔5

2

2

2

(23𝑑 + 12𝑠 − 100𝛿 ) 𝑠 𝑑
192𝛿2 𝜔5

cos (𝜑1 − 5𝜑2 )
4 2

11𝑠 𝑑
𝑠𝑑
−
cos (𝜑1 + 7𝜑2 ) +
sin 2 (3𝜑1 + 𝜑2 )
192𝛿2 𝜔5
192𝛿𝜔5
+ (621𝑑4 + (306𝑠2 + 2408𝛿2 ) 𝑑2
𝑠2 𝑑
+4𝛿 (89𝑠 − 48𝛿 ))
cos (3𝜑1 + 𝜑2 )
1728𝛿2 𝜔5
2

2

Finally, by taking F3 = 0, the third-order theory is
completed. It is worth noting that the process takes place
within the Poisson algebra.
In this example, the performed Lie transform, taking
into account the F𝑛 ≠ 0 case in Deprit’s method, removes
both angular variables (𝜑1 , 𝜑2 ) at once. Then, the Hamilton’s
equation associated with the transformed Hamiltonian K
can be written as
𝜑1̇ = 𝜔 +
+
𝜑2̇ =

2 3

4 3

−

+ 𝑑2 (11508𝑠2 𝛿2 − 99𝑠4 )) ,

+ 4 (17𝑠4 + 67𝛿2 𝑠2 + 688𝛿4 )) .

47𝑠2 𝑑4
−
sin 2 (𝜑1 − 3𝜑2 )
384𝛿𝜔5

+

− 12𝑑4 (23𝑠2 − 945𝛿2 )

𝑠6
sin 6 (𝜑1 + 𝜑2 )
1152𝛿𝜔5

41𝑠4 𝑑2
−
sin 2 (𝜑1 + 3𝜑2 ) − P4 cos (𝜑1 + 3𝜑2 )
192𝛿𝜔5

+

𝑑
(102𝑠6 + 3120𝛿2 𝑠4 + 4480𝛿4 𝑠2
576𝛿2 𝜔5

sin 4𝜑1

576𝛿𝜔5

− P2 cos (𝜑1 − 𝜑2 ) + P3 cos 3 (𝜑1 − 𝜑2 )
+

− 2304𝛿4 − 208𝑠2 𝛿2 ) ,

2 2

+ P1 sin 2 (𝜑1 + 𝜑2 )
−

𝑠2
(−18𝑑4 + 64 (3𝑠2 − 35𝛿2 ) 𝑑2 + 21𝑠4
1152𝛿𝜔5

𝛿
6𝛿2 + 27𝑠2 + 67𝑑2 2
𝜀
𝜀−
2𝜔
24𝜔3

−9𝑑4 + 144𝛿4 + 784𝛿2 𝑑2 + 9𝑠4 + 960𝛿2 𝑠2 3
𝜀,
576𝛿𝜔5

𝛿
6𝛿2 − 17𝑠2 − 23𝑑2 2
𝜀
𝜀−
2𝜔
24𝜔3
+

−9𝑑4 +144𝛿4 +4𝑑2 (196𝛿2 + 9𝑠2 )−9𝑠4 −608𝛿2 𝑠2
576𝛿𝜔5
𝐼1̇ = 0,
𝐼2̇ = 0,

(70)

2

(103𝑑2 + 34𝑠2 + 92𝛿2 ) 𝑠4 𝑑
576𝛿2 𝜔5
23𝑠2 𝑑5
cos (3𝜑1 − 7𝜑2 )
192𝛿2 𝜔5

cos (3𝜑1 + 5𝜑2 )

𝜀3 ,

which are easily integrated by quadratures.
5.2. Case F𝑛 = 0. Using the classical choice of F𝑛 in Deprit’s
algorithm, we present here the transformed Hamiltonians
and the generating functions of two Lie transforms. The
first Lie transform develops so as to remove the angular

120

Apéndice B. Artículo II

8

Mathematical Problems in Engineering

variable 𝜑1 and the second transform does the same with the
other angular variable 𝜑2 , so that the final Hamiltonian is
independent of all the angular variables up to third order.
The first transformed Hamiltonian through third order in
𝜀 is
K󸀠 = K󸀠0 + 𝜀K󸀠1 +

𝜀2 󸀠 𝜀3 󸀠
K + K,
2 2 3! 3

⋅ cos (𝜑1 − 𝜑2 )

(71)

where
𝛿𝑠2
,
2

K󸀠2 = −
K󸀠3 =

15𝑑4 11𝑑2 𝑠2
5𝑠4
𝛿2 𝑠2 𝑑2 𝑠2
−
−
−
−
cos 4𝜑2 ,
8𝜔2
6𝜔2
24𝜔2 2𝜔2
4𝜔2

49𝑑2 𝛿𝑠2 11𝛿𝑠4 3𝛿3 𝑠2 11𝑑2 𝛿𝑠2
+
+
+
cos 4𝜑2 ,
6𝜔4
12𝜔4
2𝜔4
4𝜔4

U = U1 + 𝜀U2 +

−

+

(72)

𝜀2
U,
2 3

(73)

(3𝑑3 + 2𝑑𝑠2 )
𝛿𝑠2
sin 2 (𝜑1 + 𝜑2 ) −
cos (𝜑1 − 𝜑2 )
4𝜔
4𝜔
𝑑3
𝑑𝑠2
cos 3 (𝜑1 − 𝜑2 ) +
cos (3𝜑1 + 𝜑2 )
12𝜔
12𝜔

+

𝑑𝑠
cos (𝜑1 + 3𝜑2 ) ,
4𝜔

𝑠4
+
sin 4 (𝜑1 + 𝜑2 )
96𝜔3
(9𝑑4 + 5𝑑2 𝑠2 )
12𝜔3

(173𝑑2 + 688𝛿2 + 22𝑠2 ) 𝑑𝑠2
48𝜔5
11𝑑 𝑠
cos (𝜑1 − 5𝜑2 )
48𝜔5
(101𝑑2 − 12𝛿2 + 29𝑠2 ) 𝑑𝑠2
108𝜔5

17𝑑3 𝑠2
7𝑑𝑠4
cos (5𝜑1 − 𝜑2 ) +
cos (5𝜑1 + 3𝜑2 ) .
5
40𝜔
80𝜔5
(74)

Then, the variable 𝜑2 is removed using a second Lie
transform. The transformed Hamiltonian through third order
in 𝜀 is
K󸀠󸀠 = K󸀠󸀠0 + 𝜀K󸀠󸀠1 +

𝜀2 󸀠󸀠 𝜀3 󸀠󸀠
K + K ,
2 2 3! 3

sin 2 (𝜑1 − 𝜑2 )

−
−
−

𝛿𝑑𝑠2
7𝛿𝑑𝑠2
cos (3𝜑1 + 𝜑2 ) +
cos (𝜑1 + 3𝜑2 ) ,
36𝜔3
4𝜔3

K󸀠󸀠1 =

𝛿𝑠2
,
2

72𝜔5

sin 2 (𝜑1 + 𝜑2 )

4

245𝛿𝑑2 𝑠2
83𝛿𝑠
sin 4 (𝜑1 + 𝜑2 ) −
sin 2 (𝜑1 − 𝜑2 )
288𝜔5
72𝜔5
(2835𝑑4 + 3018𝑑2 𝑠2 + 669𝑠4 + 1120𝛿2 𝑠2 ) 𝑑
144𝜔5

(76)

K󸀠󸀠2 = −

15𝑑4 11𝑑2 𝑠2
5𝑠4
𝛿2 𝑠2
−
−
−
,
8𝜔2
6𝜔2
24𝜔2 2𝜔2

K󸀠󸀠3 = −

3𝑑4 𝑠2
3𝑑2 𝑠4 49𝛿𝑑2 𝑠2 11𝛿𝑠4 3𝛿3 𝑠2
+
+
+
+
,
32𝛿𝜔4 32𝛿𝜔4
6𝜔4
12𝜔4
2𝜔4

whereas the generating function is given by
V = V1 + 𝜀V2 +

𝜀2
V,
2 3

(77)

with
V1 = −

359𝛿𝑑2 𝑠2
sin 4𝜑1
288𝜔5
(140𝑑2 + 144𝛿2 + 13𝑠2 ) 𝛿𝑠2

(75)

where

3𝑑
7𝛿𝑑𝑠2
+
sin 4 (𝜑1 − 𝜑2 ) +
cos (𝜑1 − 𝜑2 )
32𝜔3
6𝜔3

U3 = −

cos (3𝜑1 + 𝜑2 )

𝑑𝑠4
cos (3𝜑1 + 5𝜑2 )
18𝜔5

4

−

cos (𝜑1 + 3𝜑2 )

3 2

K󸀠󸀠0 = 𝜔𝐼,

2

𝑠2 (5𝑑2 + 6𝛿2 + 𝑠2 )
5𝑑2 𝑠2
sin 4𝜑1 +
sin 2 (𝜑1 + 𝜑2 )
U2 =
48𝜔3
12𝜔3

+

27𝑑5
cos 5 (𝜑1 − 𝜑2 )
80𝜔5

+

with

+

+

−

whereas the generating function yields

U1 = −

45𝑑5 + 23𝑑3 𝑠2
cos 3 (𝜑1 − 𝜑2 )
36𝜔5

−

K󸀠0 = 𝜔𝐼,
K󸀠1 =

+

V2 =

𝑑2 𝑠2
sin 4𝜑2 ,
16𝛿𝜔

(23𝑑2 + 38𝛿2 + 17𝑠2 ) 𝑑2 𝑠2
96𝛿2 𝜔3

sin 4𝜑2 ,

(78)

V3 = 0.
Note that, up to third order, the Hamiltonian K, obtained
by Deprit’s method considering F𝑛 ≠ 0, is identical to the
Hamiltonian K󸀠󸀠 , which has been obtained after applying
two Lie transforms, generated, respectively, by U and V, and

121

Mathematical Problems in Engineering

9

taking the arbitrary integration constant equal to zero. On the
other hand, in order to relate the generating functions W, U,
and V, we consider the composition of the two previous Lie
transforms taking into account the following identity:
T = U + L−1
U (V) .

(79)

Then, we consider the difference between W and T up to
third order. It is easy to check that W1 − T1 = W2 − T2 = 0,
whereas at third order we obtain that
W3 − T3 =

(−19𝑑2 − 9𝛿2 + 𝑠2 ) 𝑑2 𝑠2
288𝛿𝜔5

sin 4𝜑2 ,

(80)

which is a function that belongs to ker(LH0 ).

6. Conclusion
Deprit’s method has been revisited so as to clarify and identify
the role played by the intrinsic arbitrariness which appears
in all perturbation techniques. This arbitrariness arises as an
arbitrary integration function, when the generating function
of the Lie transform is calculated from the Homological equation in Deprit’s method. This function belongs to the kernel
of the Lie transform. In the case of a degenerate Hamiltonian
in Arnold’s sense, this function allows removing the implicit
terms belonging to the kernel of the Lie transform embedded
in the generating function or can be used as the generator of
a new transformation through which other angular variables
can be removed. Moreover, other algorithms derived from
Deprit’s method, like the so-called double normalization, are
put in the correct context and their relation with classical
Deprit’s method clarified. Finally, exactly the same reasoning
can be applied to other techniques like Hori’s method.

Conflict of Interests
The authors declare that there is no conflict of interests
regarding the publication of this paper.

Acknowledgment
The authors would like to thank an anonymous reviewer for
his/her valuable suggestions.

References
[1] N. Krylov and N. N. Bogoliubov, Introduction to Nonlinear
Mechanics, Princeton University Press, Princeton, NJ, USA,
1947.
[2] G. E. O. Giacaglia, “Notes on von Zeipel’s method,” Tech. Rep.
X-547-64-161, Goddard Space Flight Center, 1964.
[3] H. von Zeipel, “Recherches sur le mouvement des petits
planets,” Arkiv för Matematik, Astronomi och Fysik, vol. 11, no.
1, pp. 12–13, 1916.
[4] G. I. Hori, “Theory of general perturbations with unspecified
canonical variables,” Publications of the Astronomical Society of
Japan, vol. 18, pp. 287–296, 1966.

[5] G. I. Hori, “Theory of general perturbations for non-canonical
systems,” Publications of the Astronomical Society of Japan, vol.
23, pp. 567–587, 1971.
[6] A. Deprit, “Canonical transformations depending on a small
parameter,” Celestial Mechanics, vol. 1, pp. 12–30, 1969.
[7] H. Poincaré, “Les Méthodes Nouvelles de la Mécanique Céleste:
Tome II,” in Méthodes de MM. Newcomb, Gyldén, Lindstedt et
Bohlin, Gauthier-Villars, Paris, France, 1893.
[8] A. H. Ahmed and B. D. Tapley, “Equivalence of the generalized
Lie-Hori method and the method of averaging,” Celestial
Mechanics, vol. 33, no. 1, pp. 1–20, 1984.
[9] W. A. Mersman, “Explicit recursive algorithms for the construction of equivalent canonical transformations,” Celestial
Mechanics, vol. 3, no. 3, pp. 384–389, 1971.
[10] J. A. Morrison, “Generalized method of averaging and the
von Zeipel method,” in Proceedings of the AIAA Astrodynamics
Specialist Conference, Paper No. 65-687, Monterey, Calif, USA,
September 1965.
[11] H. Shniad, “The equivalence of von Zeipel mappings and Lie
transforms,” Celestial Mechanics, vol. 2, no. 1, pp. 114–120, 1970.
[12] N. Watanabe, “Equivalence of the method of averaging and
the Lie transform,” Science Reports of the Tohoku Imperial
University, First Ser., vol. 57, pp. 11–22, 1974.
[13] K. T. Alfriend and S. L. Coffey, “Elimination of the perigee in the
satellite problem,” Celestial Mechanics, vol. 32, no. 2, pp. 163–172,
1984.
[14] Y. Kozai, “Second-order solution of artificial satellite theory
without air drag,” The Astronomical Journal, vol. 67, no. 7, pp.
446–461, 1962.
[15] M. Lara, J. F. San-Juan, and L. M. López-Ochoa, “Precise
analytical computation of frozen-eccentricity, low earth orbits
in a tesseral potential,” Mathematical Problems in Engineering,
vol. 2013, Article ID 191384, 13 pages, 2013.
[16] M. Lara, J. F. San-Juan, and L. M. López-Ochoa, “Averaging
tesseral effects: closed form relegation versus expansions of
elliptic motion,” Mathematical Problems in Engineering, vol.
2013, Article ID 570127, 11 pages, 2013.
[17] C. Osácar, Estudio del movimiento de sistemas estelares [Ph.D.
Dissertation], Universidad de Zaragoza, Zaragoza, Spain, 1990.
[18] J. Palacián, J. F. San Juan, and P. Yanguas, “Analytical theory for
the spot satellite,” Advances in the Astronautical Sciences, vol. 95,
pp. 375–382, 1997.
[19] J. F. Palacián and P. Yanguas, “Asymptotic invariant tori of perturbed two-body problems,” Journal of Symbolic Computation,
vol. 40, no. 4-5, pp. 1256–1268, 2005.
[20] V. I. Arnold, “Small denominators and problems of stability of
motion in classical and celestial mechanics,” Uspekhi Matematicheskikh Nauk, vol. 18, no. 6, pp. 91–192, 1963.
[21] A. Deprit, “The Lissajous transformation. I. Basics,” Celestial
Mechanics and Dynamical Astronomy, vol. 51, no. 3, pp. 201–225,
1991.
[22] A. Elipe and A. Deprit, “Oscillators in resonance,” Mechanics
Research Communications, vol. 26, no. 6, pp. 635–640, 1999.
[23] M. Efroimsky and P. Goldreich, “Gauge symmetry of the Nbody problem in the Hamilton-Jacobi approach,” Journal of
Mathematical Physics, vol. 44, no. 12, pp. 5958–5977, 2003.
[24] M. Efroimsky, “Gauge freedom in orbital mechanics,” Annals of
the New York Academy of Sciences, vol. 1065, pp. 346–374, 2005.
[25] P. Gurfil, “Gauge theory for finite-dimensional dynamical systems,” Chaos, vol. 17, no. 2, Article ID 023107, 2007.

122

10
[26] G. Metris and P. Exertier, “Semi-analytical theory of the mean
orbital motion,” Astronomy & Astrophysics, vol. 294, pp. 278–
286, 1995.
[27] M. Hénon and C. Heiles, “The applicability of the third integral
of motion: some numerical experiments,” The Astronomical
Journal, vol. 69, pp. 73–79, 1964.
[28] V. Lanchares, A. I. Pascual, J. Palacián, P. Yanguas, and J. P. Salas,
“Perturbed ion traps: a generalization of the three-dimensional
Hénon–Heiles problem,” Chaos, vol. 12, no. 1, pp. 87–99, 2002.

Apéndice B. Artículo II

Mathematical Problems in Engineering

Apéndice C

Artículo III

Deprit’s Elimination of the
Parallax Revisited
San-Juan, J. F., Ortigosa, D.,
López-Ochoa, L. M. and López, R.

The Journal of the Astronautical Sciences
2015
http://dx.doi.org/10.1007/s40295-015-0033-5

123

Apéndice D

Artículo IV

AstrodyTWeb
ools an e-Science project
in Astrodynamics and
Celestial Mechanics fields
López, R. and San-Juan, J. F.

Computer Physics Communications
2013
http://dx.doi.org/10.1016/j.cpc.2013.01.003

125

Bibliografía
[1] Abad, A. and San-Juan, J. F., “PSPC: A Poisson Series Processor
coded in C,” in Proceedings of the Conference on Dynamics and Astrometry of Natural and Artificial Celestial Bodies, Poznan, Poland, pp.
383–389, September 1993.
[2] Abad, A. and San-Juan, J. F., “ATESAT: software tool for obtaining
automatically ephemeris from analytical simplifications,” Cahiers du
Centre Européen de Géodynamique et de Séismologie, vol. 10, Elipe,
A. and Paquet, P., Eds., pp. 93–98, Conseil de L’Europe, Luxembourg,
1995.
[3] Abad, A. and San-Juan, J. F., “Algebraic and symbolic manipulation
of Poisson series,” Journal of Symbolic Computation, vol. 32, no. 5, pp.
565–572, 2001.
[4] Abad, A., San-Juan, J. F. and Gavín, A., “Short term evolution of
artificial satellites,” Celestial Mechanics and Dynamical Astronomy,
vol. 79, no. 4, pp. 277–296, 2001.
[5] Ahmed, A. H. and Tapley, B. D., “Equivalence of the generalized LieHori method and the method of averaging,” Celestial Mechanics and
Dynamical Astronomy, vol. 33, pp. 1–20, 1984.
[6] Alameda, J. , Christie, M., Geoffrey, F., Futrelle, J., Gannon, D., Hategan, M., Kandaswamy, G., von Laszewski, G., Nacar, M. A., Pierce,
M., Roberts, E., Severance, C. and Thomas, M., “The Open Grid Computing Environments collaboration: portlets and services for science
gateways,” Concurrency and Computation: Practice and Experience,
vol. 19, no. 6, pp. 921–942, 2007.
[7] Alfriend, K. T. and Coffey, S. L., “Elimination of the perigee in the
satellite problem,” Celestial Mechanics, vol. 32, no. 2, pp. 163–172,
1984.
[8] Arnol’d, V. I., “Small denominators and problems of stability of motion
in classical and celestial mechanics,” Russian Mathematical Surveys,
vol. 18, no. 6, pp. 85–191, 1963.
127

128

BIBLIOGRAFÍA

[9] Biesecker, L. G., Shianna, K. V. and Mullikin, J. C., “Exome sequencing: the expert view,” Genome Biology, vol. 12, 128, 2011.
[10] Birney, E., Stamatoyannopoulos, J. A., Dutta, A., Guigo, R., Gingeras,
T. R., Margulies, E. H. et al., “Identification and analysis of functional
elements in 1 % of the human genome by the ENCODE pilot project,”
Nature, vol. 447, pp. 799–816, 2007.
[11] Breiter, S., “On the numerical transformation of variables in perturbation theory,” Celestial Mechanics and Dynamical Astronomy, vol. 65,
no. 4, pp. 345–354, 1997.
[12] Bogen, R., MACSYMA Reference Manual, Symbolics, Incorporated,
1986.
[13] Bogoliubov, N. N. and Mitropolsky, Y. A., Asymptotic Methods in the
Theory of Non-Linear Oscillations, Gordon and Breach, New York,
NY, USA, 1961.
[14] Bosma, W., Cannon, J. and Playoust, C., “The Magma algebra system
I: The user language,” Journal of Symbolic Computation, vol. 24, no.
3, pp. 235–265, 1997.
[15] Broucke, R. and Garthwaite, K., “A programming system for analytical
series expansions on a computer,” Celestial Mechanics, vol. 1, no. 2,
pp. 271–284, 1969.
[16] Bush W. S. and Moore J. H., “Chapter 11: Genome-wide association
studies,” PLoS Computational Biology, vol. 8, no. 12, 2012.
[17] Caballero, J. A., Movimiento de un satélite artificial bajo la acción gravitatoria terrestre. Teoría de segundo orden en variables de Hill [Ph.D.
Thesis], University of Zaragoza, Spain, 1975.
[18] Calvo, M., Aplicación del método de promedios al estudio del movimiento de satélites artificiales [Ph.D. Thesis], University of Zaragoza,
Spain, 1971.
[19] Cayley, A., “Tables of the developments of functions in the theory of
elliptic motion,” Memoirs of the Royal Astronomical Society, vol. 29,
pp. 191–306, 1861.
[20] Cefola, P. J., “Equinoctial orbit elements - Application to artificial satellite orbits,” in Proceedings of the AAS/AIAA Astrodynamics Specialist
Conference, AIAA 72-937, Palo Alto, CA, USA, September 1972.

BIBLIOGRAFÍA

129

[21] Cefola, P. J., Phillion, D. and Kim, K. S., “Improving access to the
semi-analytical satellite theory,” in Proceedings of the AAS/AIAA Astrodynamics Specialist Conference, AAS 09-341, Pittsburgh, PA, USA,
August 2009.
[22] Cefola, P. J., Weeden, B. and Levit, C., “Open source software suite
for space situational awareness and space object catalog work,” in Proceedings of the 4th International Conference on Astrodynamics Tools
and Techniques, Madrid, Spain, May 2010.
[23] Cefola, P. J., Maisonobe, L., Parraud, P. and Di Costanzo, R., “Semianalytical satellite theory for everyone: an open-source implementation
of the DSST model,” in Proceedings of the 12th International Conference on Space Operations, Stockholm, Sweden, June 2012.
[24] Cefola, P. J., San-Juan, J. F., Maisonobe, L., Parraud, P. and Di
Costanzo, R., “Semi-analytical satellite theory for the OREKIT opensource space flight dynamics library,” in Proceedings of the 5th International Conference on Astrodynamics Tools and Techniques, Noordwijk,
The Netherlands, May–June 2012.
[25] Char, B. W., MAPLE Reference Manual, Watcom Publications, 1988.
[26] Cid, R. and Lahulla, J. F., “Perturbaciones de corto periodo en el
movimiento de un satélite artificial, en función de las variables,” Publicaciones de la Revista de la Academia de Ciencias de Zaragoza, series
2, vol. 24, pp. 159–165, 1969.
[27] Cid, R. and Lahulla, J. F., “Perturbaciones de segundo orden y corto
periodo, para el movimiento de un satélite artificial, en las variables
de Hill,” Publicaciones de la Revista de la Academia de Ciencias de
Zaragoza, series 2, vol. 26, pp. 333–343, 1971.
[28] Cid, R., Ferrer, S. and Sein-Echaluce, M. L., “On the radial intermediaries and the time transformation in satellite theory,” Celestial
Mechanics and Dynamical Astronomy, vol. 38, pp. 191–205, 1986.
[29] Coffey, S. L., Deprit, A., Deprit, E. and Healy, L., “Painting the phase
space portrait of an integrable dynamical system,” Science, vol. 247,
pp. 833–836, 1990.
[30] Coffey, S. L., Deprit, A. and Deprit, E., “Frozen orbits for satellites
close to an Earth-like planet,” Celestial Mechanics and Dynamical Astronomy, vol. 59, no. 1, pp. 37–72, 1994.
[31] Coffey, A. J., Kokocinski, F., Calafato, M. S., Scott, C. E., Palta, P.,
Drury, E. et al., “The GENCODE exome: sequencing the complete

130

BIBLIOGRAFÍA
human exome,” European Journal of Human Genetics, vol. 19, pp.
827–831, 2011.

[32] Collins, S. K., Long term prediction of high altitude orbits [Ph.D. Thesis], Department of Aeronautics and Astronautics, Massachusetts Institute of Technology, 1981.
[33] Colwell, P., Solving Kepler’s Equation over Three Centuries,
Willmann-Bell, Richmond, VA, USA, 1993.
[34] Conway, B. A., “An improved algorithm due to Laguerre for the solution of Kepler’s equation,” Celestial Mechanics, vol. 39, no. 2, pp.
199–211, 1986.
[35] Costa, A., Becciani, U., Miocchi, P., Antonuccio, V., Capuzzo Dolcetta, R., Di Matteo, P. and Rosato, V., “Astrocomp: web technologies for
high performance computing on a network of supercomputers,” Computer Physics Communications, vol. 166, no. 1, pp. 17–25, 2005.
[36] Coveney, P. V., Saksena, R. S., Zasada, S. J., McKeown, M. and Pickles, S., “The application hosting environment: lightweight middleware for grid-based computational science,” Computer Physics Communications, vol. 176, no. 6, pp. 406–418, 2007.
[37] Danby, J. M. A. and Burkardt, T. M., “The solution of Kepler’s equation, I,” Celestial Mechanics, vol. 31, no. 2, pp. 95–107, 1983.
[38] Danby, J. M. A., “The solution of Kepler’s equation, III,” Celestial
Mechanics, vol. 40, no. 3–4, pp. 303–312, 1987.
[39] Danielson, D. A., Neta, B. and Early, L. W., “Semianalytic satellite
theory (SST): mathematical algorithms,” Tech. Rep. no. NPS-MA-94001, Naval Postgraduate School, Monterey, CA, USA, 1994.
[40] Das, S., Girard, L., Green, T., Weitzman, L., Lewis-Bowen, A. and
Clark, T., “Building biomedical web communities using a semantically
aware content management system,” Briefings in Bioinformatics, vol.
10, no. 2, pp. 129–138, 2008.
[41] Deprit, A., Danby, J. M. A. and Rom, A., “The symbolic manipulation
of Poisson series,” Tech. Rep., Boeing Scientific Research Laboratories
Document, Seattle, WA, USA, 1965.
[42] Deprit, A., “Canonical transformations depending on a small parameter,” Celestial Mechanics, vol. 1, no. 1, pp. 12–30, 1969.
[43] Deprit, A., “Note on Lagrange’s inversion formula,” Celestial Mechanics, vol. 20, no. 4, pp. 325–327, 1979.

BIBLIOGRAFÍA

131

[44] Deprit, A., “Celestial Mechanics: never say no to a computer,” Journal
of Guidance and Control, vol. 4, pp. 577–581, 1981.
[45] Deprit, A., “The elimination of the parallax in satellite theory,” Celestial Mechanics, vol. 24, no. 2, pp. 111–153, 1981.
[46] Deprit, A. and Ferrer, S., “Simplifications in the theory of artificial
satellites,” The Journal of the Astronautical Sciences, vol. 37, no. 4,
pp. 451–463, 1989.
[47] Deprit, A. and Deprit, E., “Processing Poisson series in parallel,” Journal of Symbolic Computation, vol. 10, no. 2, pp. 179–201, 1990.
[48] Deprit, A., “The Lissajous transformation I. Basics,” Celestial Mechanics and Dynamical Astronomy, vol. 51, no. 3, pp. 201–225, 1991.
[49] Dormand, J. R. and Prince, P. J., “Practical Runge-Kutta processes,”
SIAM Journal on Scientific and Statistical Computing, vol. 10, no. 5,
pp. 977–989, 1989.
[50] Drupal Assoc., Writing Secure Code, 2006, http://drupal.org/
writing-secure-code.
[51] Early, L. W., “A portable orbit generator using semianalytical satellite
theory,” in Proceedings of the AIAA/AAS Astrodynamics Conference,
AIAA 86-2164-CP, Williamsburg, VA, USA, 1986.
[52] Ficklin, S. P., Sanderson, L. A., Cheng, C. H., Staton, M. E., Lee, T.,
Cho, I. H., Jung, S., Bett, K. E. and Main, D., “Tripal: a construction
toolkit for online genome databases,” Database, vol. 2011, Article ID
bar044, 16 pages, 2011.
[53] Fieger, M. E., An evaluation of semianalytical satellite theory against
long arcs of real data for highly eccentric orbits [M.S. Thesis], Department of Aeronautics and Astronautics, Massachusetts Institute of
Technology, 1987.
[54] Flicek, P., Amode, M. R., Barrell, D., Beal, K., Brent, S., CarvalhoSilva, D. et al., “Ensembl 2012,” Nucleic Acids Research, vol. 40, pp.
84–90, 2012.
[55] Folcik, Z. J., Orbit determination using modern filters/smoothers and
continuous thrust modeling [M.S. Thesis], Department of Aeronautics
and Astronautics, Massachusetts Institute of Technology, 2008.
[56] Fonte, D. J., Implementing a 50×50 gravity field model in an orbit
determination system [M.S. Thesis], Department of Aeronautics and
Astronautics, Massachusetts Institute of Technology, 1993.

132

BIBLIOGRAFÍA

[57] Fuchssteiner, B. et al., MuPAD User’s Manual, 1996.
[58] Fukushima, T., “A fast procedure solving Kepler’s equation for elliptic
case,” The Astronomical Journal, vol. 112, no. 6, pp. 2858–2861, 1996.
[59] Giacaglia, G. E. O., “Notes on von Zeipel’s method,” Tech. Rep. no. X547-64-161, Goddard Space Flight Center, Greenbelt, MD, USA, 1964.
[60] GNU Octave, http://www.gnu.org/software/octave/index.html.
[61] Gnuplot, http://www.gnuplot.info.
[62] Gobernado, I., Secuenciación de exoma completo en trastorno bipolar autosómico dominante: afectación del gen period3-ritmo circadiano
[M.S. Thesis], Departamento de Medicina y Especialidades Médicas,
Facultad de Medicina, Universidad de Alcala.
[63] Long, A. C., Cappellari, J. O., Velez, C. E. and Fuchs, A. J., “Goddard
trajectory determination system (GTDS) mathematical theory revision 1,” CSC/TR-89/6001, Computer Sciences Corporation, LanhamSeabrook, MD, USA, 1989.
[64] Goff, S. A., Vaughn, M., McKay, S., Lyons, E., Stapleton, A. E., Gessler, D., Matasci, N. et al, “The iPlant collaborative: cyberinfrastructure
for plant biology,” Frontiers in Plant Science, vol. 2, Article 34, 16 pages, 2011.
[65] Hansen, P. A., “Entwickelung des products einer potenz des radius vector mit dem sinus oder cosinus eines vielfachen der wahren anomalie
in reihen,” Abhandlungen der mathematischphysischen Classe der königlich Sächsischen Gesellschaft der Wissenschaften, vol. 2, pp. 183–281,
1853.
[66] Harismendy, O., Ng, P. C., Strausberg, R. L., Wang, X., Stockwell,
T. B., Beeson, K. Y. et al., “Evaluation of next generation sequencing platforms for population targeted sequencing studies,” Genome
Biology, vol. 10, no. 3, 13 pages, 2009.
[67] Healy, L. and Deprit, E., “Paint by number: uncovering phase flows of
an integrable dynamical system,” Computers in Physics, vol. 5, no. 5,
pp. 491–496, 1991.
[68] Hearn, A. C., “REDUCE: a user-oriented interactive system for algebraic simplification,” in Symposium on Interactive Systems for Experimental Applied Mathematics: Proceedings of the Association for Computing Machinery Inc. Symposium, ACM, pp. 79–90, August 1967.
[69] Henrard, J., “On a perturbation theory using Lie transforms,” Celestial
Mechanics, vol. 3, no. 1, pp. 107–120, 1970.

BIBLIOGRAFÍA

133

[70] Herget, P. and Musen, P, “The calculation of literal expansions,” The
Astronomical Journal, vol. 64, pp. 11–20, 1959.
[71] Hintz, G. R., “Survey of orbit element sets,” Journal of Guidance, Control, and Dynamics, vol. 31, no. 3, pp. 785–790, 2008.
[72] Hori, G. I., “Theory of general perturbations with unspecified canonical
variables,” Publications of the Astronomical Society of Japan, vol. 18,
pp. 287–296, 1966.
[73] Hori, G. I., “Theory of general perturbations for non-canonical systems,” Publications of the Astronomical Society of Japan, vol. 23, pp.
567–587, 1971.
[74] Jefferys, W. H., “A FORTRAN-based list processor for Poisson series,”
Celestial Mechanics, vol. 2, no. 4, pp. 474–480, 1970.
[75] Jefferys, W. H., “A precompiler for the formula manipulation system
TRIGMAN,” Celestial Mechanics, vol. 6, no. 1, pp. 474–480, 1972.
[76] Kamel, A. A., “Perturbation method in the theory of nonlinear oscillations,” Celestial Mechanics, vol. 3, no. 1, pp. 90–106, 1970.
[77] Kizner, W., “A high order perturbation theory using rectangular coordinates,"Proocedings of the AIAA Astrodynamics Conference, AIAA
63-391, New Haven, CT, USA, August 1963.
[78] Kozai, Y., “Second-order solution of artificial satellite theory without
air drag,” The Astronomical Journal, vol. 67, pp. 446–461, 1962.
[79] Krylov, N. and Bogoliubov, N. N., Introduction to Nonlinear Mechanics, Princeton University Press, Princeton, NJ, USA, 1947.
[80] Kuhn, T., Willighagen, E. L., Zielesny, A. and Steinbeck, S., “CDKTaverna: an open workflow environment for cheminformatics,” BMC
Bioinformatics, vol. 11, Article 159, 11 pages, 2010.
[81] Kuhn, R. M., Haussler, D. and Kent, W. J., “The UCSC genome browser and associated tools,” Briefings in Bioinformatics, vol. 14, no. 2,
pp. 144–161, 2012.
[82] Lara, M., “Searching for repeating ground track orbits: a systematic
approach,” The Journal of the Astronautical Sciences, vol. 47, pp. 177–
188, 1999.
[83] Lara, M. and San Juan, J. F., “Dynamic behavior of an orbiter around
Europa,” Journal of Guidance, Control, and Dynamics, vol. 28, no. 2,
pp. 291–297, 2005.

134

BIBLIOGRAFÍA

[84] Lara, M., San-Juan, J. F., López, L. M. and Cefola, P. J., “On the
third-body perturbations of high-altitude orbits,” Celestial Mechanics
and Dynamical Astronomy, vol. 113, no. 4, pp. 435–452, 2012.
[85] Lara, M., San-Juan, J. F., López-Ochoa, L. M., “Precise analytical
computation of frozen-eccentricity, low Earth orbits in a tesseral potential,” Mathematical Problems in Engineering, vol. 2013, Article ID
191384, 13 pages, 2013.
[86] Lara, M., San-Juan, J. F. and López-Ochoa, L. M., “Averaging tesseral
effects: closed form relegation versus expansions of elliptic motion,”
Mathematical Problems in Engineering, vol. 2013, Article ID 570127,
11 pages, 2013.
[87] LATEX, http://www.latex-project.org.
[88] Lemoine, F. G., Kenyon, S. C., Factim, J. K., Trimmer, R. G., Pavlis,
N. K., Chinn, D. S., Cox, C. M., Klosko, S. M., Luthcke, S. B., Torrence, M. H., Wang, Y. M., Williamson, R. G., Pavlis, E. C., Rapp,
H. and Olson, T. R., “The development of the joint NASA GSFC and
the National Imagery and Mapping Agency (NIMA) Geopotential Model EGM 96,” NASA Tech. Pub. 1998-206861, Goddard Space Flight
Center, Greenbelt, MD, USA, 1998.
[89] Li, H., Handsaker, B., Wysoker, A., Fennell, T., Ruan, J., Homer, N.
et al., “The Sequence Alignment/Map format and SAMtools,” Bioinformatics, vol. 25, no. 16, pp. 2078–2079, 2009.
[90] Li, M. X., Gui, H. S., Kwan, J. S., Bao, S. Y. and Sham, P. C., “A
comprehensive framework for prioritizing variants in exome sequencing
studies of Mendelian diseases,” Nucleic Acids Research, vol. 40, no. 7,
8 pages, 2012.
[91] López, R., San-Juan, J. F., López-Ochoa, L. M. and Lara, M., “Astrodynamics Web Tools: a collaborative web computing infrastructure
project,” in Proceedings of the 5th International Conference on Astrodynamics Tools and Techniques, Noordwijk, The Netherlands, May–
June 2012.
[92] López, R. and San-Juan, J. F., “AstrodyTWeb
ools an e-Science project
in Astrodynamics and Celestial Mechanics fields,” Computer Physics
Communications, vol. 184, pp. 1381–1386, 2013.
[93] López, R., San-Juan, J. F., Íñiguez, M., San-Martín, M., Cabello, J.
and Mirpuri, E., “Bioinformatics Web Tools an infrastructure to support e-Research and e-learning activities,” in Proceedings of the 7th
International Conference of Education, Research and Innovation, Seville, Spain, November 2014.

BIBLIOGRAFÍA

135

[94] Manuali, C., Laganá, A. and Rampino, S., “GriF: a Grid framework
for a web service approach to reactive scattering,” Computer Physics
Communications, vol. 181, no. 7, pp. 1179–1185, 2010.
[95] McClain, W. D., “A recursively formulated first-order semianalytic artificial satellite theory based on the generalized method of averaging.
Volume 1: The generalized method of averaging applied to the artificial
satellite problem,” Computer Sciences Corporation, CSC/TR-77/6010,
1977. (An updated version of this document is available from W. D.
McClain at the Draper Laboratory [the “blue book”]).
[96] McLaughlin, C. A. and Feinstein, S. A., “Dynamic discretization method for solving Kepler’s equation,” Celestial Mechanics and Dynamical
Astronomy, vol. 96, no. 1, pp. 49–62, 2006.
[97] Mersman, W. A., “Explicit recursive algorithms for the construction of
equivalent canonical transformations,” Celestial Mechanics and Dynamical Astronomy, vol. 3, no. 3, pp. 384–389, 1971.
[98] Metzker, M. L., “Sequencing technologies - the next generation,” Nature
Reviews Genetics, vol. 11, pp. 31–46, 2010.
[99] Mooney, S. D. and Baenziger, P. H., “Extensible open source content
management systems and frameworks: a solution for many needs of a
bioinformatics group,” Briefings in Bioinformatics, vol. 9, no. 1, pp.
69–74, 2007.
[100] Morrison, J. A., “Generalized method of averaging and the von Zeipel
method,” Progress in Astronautics and Aeronautics, vol. 17, pp. 117–
138, 1966.
[101] Neelon, J. G., Cefola, P. J. and Proulx, R. J., “Current development of
the Draper semianalytical satellite theory standalone orbit propagator
package,” in Proceedings of the AAS/AIAA Astrodynamics Conference,
AAS 97-731, Sun Valley, ID, USA, August 1997.
[102] Newcomb, S., “A development of the perturbative function in cosines of
multiples of the mean anomalies and of angles of multiples of the mean
anomalies and of angles between the perihelia and common node and
in powers of the eccentricities and mutual inclination,” Astronomical
paper, vol. 5, pp. 1–48, US Nautical Almanac Office, Washington, USA,
1895.
[103] Ng, E. W., “A general algorithm for the solution of Kepler’s equation
for elliptic orbits,” Celestial Mechanics, vol. 20, pp. 243–249, 1979.

136

BIBLIOGRAFÍA

[104] Ng, S. B., Turner, E. H., Robertson, P. D., Flygare, S. D., Bigham, A.
W., Lee, C. et al., “Targeted capture and massively parallel sequencing
of 12 human exomes,” Nature, vol. 461, pp. 272–276, 2009.
[105] Nijenhuis, A., “Solving Kepler’s equation with high efficiency and accuracy,” Celestial Mechanics and Dynamical Astronomy, vol. 51, no. 4,
pp. 319–330, 1991.
[106] Odell, A. W. and Gooding, R. H., “Procedures for solving Kepler’s
equation,” Celestial Mechanics, vol. 38, pp. 307–334, 1986.
[107] Orekit, http://www.orekit.org.
[108] Ortigosa, D., San-Juan, J. F., Pérez, I. and San-Martín, M., “Numerical validation of the Delaunay normalization and the KrylovBogoliubov-Mitropolsky method,” Mathematical Problems in Engineering, vol. 2014, Article ID 927975, 14 pages, 2014.
[109] Osácar, C., Estudio del movimiento de sistemas estelares [Ph.D. Thesis], University of Zaragoza, Spain, 1990.
[110] Ouzounis, C. and Valencia, A., “Early bioinformatics: the birth of a
discipline–a personal view,” Bioinformatics, vol. 19, no. 17, pp. 2176–
2190, 2003.
[111] Palacián, J., San-Juan, J. F., Yanguas, P., “Analytical theory for the
Spot satellite,” Advances in the Astronautical Sciences, vol. 95, pp.
375–382, 1997.
[112] Palacián, J., Yanguas, P., “Asymptotic invariant tori of perturbed twobody problems,” Journal of Symbolic Computation, vol. 40, pp. 1256–
1268, 2005.
[113] Palacios, M., “Kepler equation and accelerated Newton method,” Journal of Computational and Applied Mathematics, vol. 138, no. 2, pp.
335–346, 2002.
[114] Papanicolaou, A. and Heckel, D. G., “The GMOD Drupal bioinformatic
server framework,” Bioinformatics, vol. 26, no. 24, pp. 3119–3124, 2010.
[115] Pascua, P., Rubio, J. L., Viartola, A. and Ferrer, S., “Visualizing relative equilibria and bifurcations by painting Hamiltonians on personal
computers,” International Journal of Bifurcation and Chaos, vol. 6, no.
8, pp. 1411–1424, 1996.
[116] Pérez, I., San-Juan, J. F., San-Martín, M. and López-Ochoa, L. M.,
“Application of computational intelligence in order to develop hybrid
orbit propagation methods,” Mathematical Problems in Engineering,
vol. 2013, Article ID 631628, 11 pages, 2013.

BIBLIOGRAFÍA

137

[117] Pérez, I., Aplicación de técnicas estadísticas y de inteligencia computacional al problema de la propagación de órbitas [Ph.D. Thesis], University of La Rioja, Spain, 2015.
[118] Phan, V. and Malasri, K., “BioTDMS: a general-purpose system for
integrative management of bioinformatics tools and data,” International Journal of Computational Biology and Drug Design, vol. 1, no. 2,
pp. 174–184, 2008.
[119] Poincaré, H., Les Méthodes Nouvelles de la Mécanique Céleste. Tome
II. Les Méthodes de MM, Gauthier-Villars et Fils, Paris, France, 1893.
[120] Pruitt, K. D., Tatusova, T., Brown, G. R. and Maglott, D. R., “NCBI
Reference Sequences (RefSeq): current status, new features and genome
annotation policy,” Nucleic Acids Research, vol. 40, pp. 130–135, 2012.
[121] Robinson, J. T., Thorvaldsdóttir, H., Winckler, W., Guttman, M., Lander, E. S., Getz, G. et al., “Integrative Genomics Viewer,” Nature Biotechnology, vol. 29, pp. 24–26, 2011.
[122] Robinson, P. N., Krawitz, P. and Mundlos, S., “Strategies for exome
and genome sequence data analysis in disease-gene discovery projects,”
Clinical Genetics, vol. 80, pp. 127–132, 2011.
[123] Rom, A., “Mechanized algebraic operations (MAO),” Celestial Mechanics, vol. 1, no. 3–4, pp. 301–319, 1970.
[124] San-Juan, J. F., “ATESAT: automatization of theories and ephemeris
in the artificial satellite problem,” Tech. Rep. no. CT/TI/MS/MN/94250, CNES, Toulouse, France, 1994.
[125] San-Juan, J. F., Manipulación algebraica de series de Poisson. Aplicación a la teoría del satélite artificial [Ph.D. Thesis], University of
Zaragoza, Spain, 1996.
[126] San-Juan, J. F., “ATESAT: review and improvements. Study of a family of analytical models of the artificial satellite generated by ATESAT and their numerical validation versus PSIMU and MSLIB,” Tech.
Rep. no. DGA/T/TI/MS/MN/97-258, CNES, Toulouse, France, 1998.
[127] San-Juan, J. F. and Serrano, S., “ATESAT: revisited and improvements. Analytical theory and numerical validation for a SPOT-like
satellite,” Tech. Rep. no. DTS/MPI/MS/MN/2000-013, CNES, Toulouse, France, 2000.
[128] San-Juan, J. F. and Serrano, S., “Application of the Z6PPKB
ATESAT–model to compute the orbit of an artificial satellite around
Mars,” Tech. Rep. no. DTS/MPI/MS/MN/2000-057, CNES, Toulouse,
France, 2000.

138

BIBLIOGRAFÍA

[129] San-Juan, J. F. and Abad, A., “Symbolic solution of Kepler’s generalized equation,” Lecture Notes in Computer Science, vol. 2657, pp.
858–866, 2003.
eb : Astrodynamics Web
[130] San-Juan, J. F. and López, R., “AstrodyTWools
Tools,” in Monografías de la Real Academia de Ciencias de Zaragoza.
Actas de las XI Jornadas de Mecánica Celeste, Lanchares, V. and Elipe,
A., Eds., Zaragoza, Spain, 2009.

[131] San-Juan, J. F., López, R. and Pérez, I., “Nonlinear Dynamics Web
Tools,” in Proceedings of the 4th International Conference on Astrodynamics Tools and Techniques, Madrid, Spain, May 2010.
[132] San-Juan, J. F., Lara, M., López, R., López-Ochoa, L. M., Folcik, Z.,
Weeden, B. and Cefola, P. J., “Using the DSST semi-analytical orbit
propagator package via the NonDyWebTools/AstroDyWebTools open
science environment,” in Proceedings of the 62nd International Astronautical Congress, Cape Town, South Africa, October 2011.
[133] San-Juan, J. F., López, L. M. and López, R., “MathATESAT: A
symbolic-numeric environment in Astrodynamics and Celestial Mechanics,” Lecture Notes in Computer Science, vol. 6783, no. 2, pp. 436–449,
2011.
[134] San-Juan, J. F., Gavín, A., López, L. M. and López, R., “PPKBZ9A,SA
Two orbit propagators based on an analytical theory,” The Journal of
the Astronautical Sciences, vol. 58, no. 4, pp. 643–660, 2011.
[135] San-Juan, J. F.,Ortigosa, D. and San-Martín, M., “Parallel Evaluation
of Poisson Series,” Advances in the Astronautical Sciences, vol. 140,
pp. 873–888, 2011.
[136] San-Juan, J. F., San-Martín, M. and Pérez, I., “An economic hybrid
J2 analytical orbit propagator program based on SARIMA models,”
Mathematical Problems in Engineering, vol. 2012, Article ID 207381,
15 pages, 2012.
[137] San-Juan, J. F., López, R. and Hautesserres, D., “On solving a generalization of the Kepler Equation,” in Proceedings of the 25th AAS/AIAA
Space Flight Mechanics Meeting, AAS 15-206, Williamsburg, VA, USA,
January 2015.
[138] San-Juan, J. F., López, R., Pérez, I. and San-Martín, M., “A note
about certain arbitrariness in the solution of the homological equation
in Deprit’s method,” Mathematical Problems in Engineering, vol. 2015,
Article ID 982857, 10 pages, 2015.

BIBLIOGRAFÍA

139

[139] San-Juan, J. F., Ortigosa, D., López-Ochoa, L. M. and López, R.,
“Deprit’s elimination of the parallax revisited,” The Journal of the Astronautical Sciences, vol. 60, no. 2, pp. 137–148, 2015.
[140] San-Martín, M., Métodos de propagación híbridos aplicados al problema
del satélite artificial. Técnicas de suavizado exponencial [Ph.D. Thesis],
University of La Rioja, Spain, 2014.
[141] Schroeder, R., “e-Sciences as research technologies: reconfiguring disciplines, globalizing knowledge,” Social Science Information, vol. 47, no.
2, pp. 131–157, 2008.
[142] Serafin, R. A., “Bounds on the solution to Kepler’s equation,” Celestial
Mechanics, vol. 38, pp. 111–121, 1986.
[143] Shniad, H., “The equivalence of von Zeipel mappings and Lie transforms,” Celestial Mechanics, vol. 2, no. 1, pp. 114–120, 1970.
[144] Singleton, A. B., “Exome sequencing: a transformative technology,”
The Lancet Neurology, vol. 10, pp. 942–946, 2011.
[145] Smith, G. R., “A simple, efficient starting value for the iterative solution
of Kepler’s equation,” Celestial Mechanics, vol. 19, pp. 163–166, 1979.
[146] Sutor, R. S., “The Scratchpad II computer algebra language and system,” Lecture Notes in Computer Science, vol. 204, pp 32–33, 1985.
[147] Taff, L. G. and Brennan, T. A., “On solving Kepler’s equation,” Celestial Mechanics and Dynamical Astronomy, vol. 46, no. 2, pp. 163–176,
1989.
[148] The R Project for Statistical Computing, http://www.r-project.
org.
[149] Traub, J. F., Iterative Methods for the Solution of Equations, PrenticeHall, Englewood Cliffs, NJ, USA, 1964.
[150] Vallado, D. A., Fundamentals of Astrodynamics and Applications, 4th
Ed., Microcosm, Hawthorne, CA, USA, 2013.
[151] Voelkerding, K. V., Dames, S. A. and Durtschi, J. D., “Next-generation
sequencing: from basic research to diagnostics,” Clinical Chemistry, vol.
55, no. 4, pp. 641–658, 2009.
[152] Watanabe, N., “Equivalence of the method of averaging and the Lie
transform,” Science Reports of the Tohoku Imperial University, First
Ser., vol. 57, pp. 11–22, 1974.

140

BIBLIOGRAFÍA

[153] Wolfram, S., The Mathematica Book, Cambridge University Press and
Wolfram Research, Inc., New York, NY, USA, 2000.
[154] Zasada, S. J. and Coveney, P. V., “Virtualizing access to scientific applications with the application hosting environment,” Computer Physics
Communications, vol. 180, no. 12, pp. 2513–2525, 2009.


