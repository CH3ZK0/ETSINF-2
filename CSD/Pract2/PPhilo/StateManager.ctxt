#BlueJ class context
comment0.params=states
comment0.target=StateManager(javax.swing.JList)
comment1.params=
comment1.target=void\ run()
comment10.params=f\ cond\ msg
comment10.target=void\ pre(java.lang.String,\ boolean,\ java.lang.String)
comment11.params=f\ x
comment11.target=void\ noForks(java.lang.String,\ int)
comment12.params=f\ x
comment12.target=void\ bothForks(java.lang.String,\ int)
comment13.params=f\ x
comment13.target=void\ freeR(java.lang.String,\ int)
comment14.params=f\ x
comment14.target=void\ freeL(java.lang.String,\ int)
comment15.params=f\ x
comment15.target=void\ usedR(java.lang.String,\ int)
comment16.params=f\ x
comment16.target=void\ usedL(java.lang.String,\ int)
comment17.params=f\ x
comment17.target=void\ notMyR(java.lang.String,\ int)
comment18.params=f\ x
comment18.target=void\ notMyL(java.lang.String,\ int)
comment19.params=f\ x
comment19.target=void\ notBothFree(java.lang.String,\ int)
comment2.params=x
comment2.target=boolean\ myR(int)
comment20.params=f\ x
comment20.target=void\ ownerR(java.lang.String,\ int)
comment21.params=f\ x
comment21.target=void\ ownerL(java.lang.String,\ int)
comment22.params=x\ n
comment22.target=void\ step(int,\ int)
comment23.params=
comment23.target=void\ run()
comment24.params=e
comment24.target=void\ checkDeadlock(State)
comment25.params=x
comment25.target=void\ begin(int)
comment26.params=x
comment26.target=void\ end(int)
comment27.params=x
comment27.target=void\ enter(int)
comment28.params=x
comment28.target=void\ exit(int)
comment29.params=x
comment29.target=void\ wenter(int)
comment3.params=x
comment3.target=boolean\ myL(int)
comment30.params=x
comment30.target=void\ eat(int)
comment31.params=x
comment31.target=void\ ponder(int)
comment32.params=x
comment32.target=void\ wtakeR(int)
comment33.params=x
comment33.target=void\ wtakeL(int)
comment34.params=x
comment34.target=void\ wtakeLR(int)
comment35.params=x
comment35.target=void\ takeR(int)
comment36.params=x
comment36.target=void\ takeL(int)
comment37.params=x
comment37.target=void\ takeLR(int)
comment38.params=x
comment38.target=void\ dropR(int)
comment39.params=x
comment39.target=void\ dropL(int)
comment4.params=x
comment4.target=int\ R(int)
comment40.params=x
comment40.target=boolean\ rightFree(int)
comment41.params=x
comment41.target=boolean\ leftFree(int)
comment42.params=
comment42.target=void\ await()
comment43.params=
comment43.target=boolean\ deadlock()
comment5.params=x
comment5.target=int\ L(int)
comment6.params=x
comment6.target=void\ fdrop(int)
comment7.params=x
comment7.target=void\ ftakeL(int)
comment8.params=x
comment8.target=void\ ftakeR(int)
comment9.params=x
comment9.target=boolean\ free(int)
numComments=44
